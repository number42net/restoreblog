.PAGE 'FRETS'
.SKIP 
; MARK A TRACK,SECTOR AS FREE IN BAM
WFREE
	JSR FIXBAM
;
FRETS
	JSR FREUSE      ;CALC INDEX INTO BAM
FRETS2
	SEC             ;FLAG FOR NO ACTION
	BNE FRERTS      ;FREE ALREADY
	LDA (BMPNT),Y   ;NOT FREE, FREE IT
	ORA BMASK,X
	STA (BMPNT),Y
	JSR DTYBAM      ;SET DIRTY FLAG
	LDY TEMP
	CLC
	LDA (BMPNT),Y   ;ADD ONE
	ADC #1
	STA (BMPNT),Y
	LDA TRACK
	CMP DIRTRK
	BEQ USE10
;
	INC NDBL,X
	BNE FRE10
	INC NDBH,X
FRE10
FRERTS	RTS
;
DTYBAM
	LDX DRVNUM
	LDA #1
	STA MDIRTY,X    ;SET DIRTY FLAG
	RTS
;
; MARK TRACK,SECTOR,(BMPNT) AS USED
;
WUSED
	JSR FIXBAM
;
USEDTS	;CALC IN DEX INTO BAM
	JSR FREUSE      ;CALC IN DEX INTO BAM
	BEQ USERTS      ;USED, NO ACTION
	LDA (BMPNT),Y   ;GET BITS
	EOR BMASK,X     ;MARK SEC USED
	STA (BMPNT),Y
	JSR DTYBAM
	LDY TEMP
	LDA (BMPNT),Y   ;GET COUNT
	SEC
	SBC #1          ; DEC ONE (C=0)
	STA (BMPNT),Y   ;SAVE IT
	LDA TRACK
	CMP DIRTRK
	BEQ USE20
;
	LDA NDBL,X
	BNE USE10
	DEC NDBH,X
USE10
	DEC NDBL,X
USE20
	LDA NDBH,X
	BNE USERTS
	LDA NDBL,X
	CMP #3
	BCS USERTS
;
	LDA #DSKFUL
	JSR ERRMSG
USERTS	RTS
;
; CALCULATES INDEX INTO BAM
; FOR FRETS AND USEDTS
;
FREUSE
	JSR SETBAM
	TYA
FREUS2
	STA TEMP        ;SAVE INDEX
FREUS3
	LDA SECTOR      ;A=SECTOR/8
	LSR A
	LSR A
	LSR A           ;FOR WHICH OF THREE BYTES
	SEC
	ADC TEMP        ;CALC INDEX
	TAY
	LDA SECTOR      ;BIT IN THAT BYTE
	AND #7
	TAX
	LDA (BMPNT),Y   ;GET THE BYTE
	AND BMASK,X     ;TEST IT
	RTS             ;Z=1=USED,Z=0=FREE
;
;
BMASK	.BYTE 1,2,4,8,16,32,64,128
;
FIXBAM	;WRITE THE BAM ACCORDING TO WBAM FLAG
	LDA #$FF
	BIT WBAM
	BEQ FBAM10      ;TEST FLAGS
	BPL FBAM10
	BVS FBAM10
;
	LDA #0
	STA WBAM        ;CLEAR FLAG
	JMP DOWRIT
;
FBAM10
	RTS
;
;
; CLEAR THE BAM AREA
;
CLRBAM
	JSR SETBPT
	LDY #0
	TYA
CLB1
	STA (BMPNT)Y
	INY
	BNE CLB1
	RTS
;
SETBAM	;SET BAM IMAGE IN MEMORY
	LDA T0          ;SAVE TEMPS
	PHA
	LDA T1
	PHA
	LDX DRVNUM
	LDA NODRV,X
	BEQ SBM10
;
	LDA #NODRIV     ;NO DRIVE
	JSR CMDER3
SBM10
	JSR BAM2A
	STA T0          ;T0:= INDEX INTO BUF0
	TXA
	ASL A
	STA T1          ;T1:= 2*DRVNUM
	TAX
	LDA TRACK
	CMP TBAM,X      ;CHECK BAM TABLE FOR TRACK
	BEQ SBM30       ;IT'S IN
;
	INX
	STX T1          ;CHECK NEXT ENTRY
	CMP TBAM,X
	BEQ SBM30       ;IT'S IN
;
	JSR SWAP        ;SWAP TRACK BAM IN TABLE
SBM30
	LDA T1
	LDX DRVNUM
	STA UBAM,X      ;SET LAST USED PTR
	ASL A
	ASL A
	CLC
	ADC #<BAM       ;SET ACTUAL PTR
	STA BMPNT
	LDA #>BAM
	ADC #0
	STA BMPNT+1
	LDY #0
	PLA
	STA T1
	PLA
	STA T0
	RTS
;
;
SWAP	;SWAP IMAGES OF BAM
	LDX T0
	JSR REDBAM      ;READ BAM IF NOT IN
	LDA DRVNUM
	TAX
	ASL A
	ORA UBAM,X      ;SWAP OUT LEAST USED IMAGE
	EOR #1
	AND #3
	STA T1
	JSR PUTBAM      ;PUT TO BAM
	LDA JOBNUM
	ASL A
	TAX
	LDA TRACK
	ASL A
	ASL A
	STA BUFTAB,X    ;SET PTR
	LDA T1
	ASL A
	ASL A
	TAY
SWAP3	;TRANSFER BAM TO MEM IMAGE
	LDA (BUFTAB,X)
	STA BAM,Y
	LDA #0
	STA (BUFTAB,X)  ;CLEAR BAM
	INC BUFTAB,X
	INY
	TYA
	AND #3
	BNE SWAP3
;
	LDX T1
	LDA TRACK
	STA TBAM,X      ;SET TRACK # FOR IMAGE
;
	LDA WBAM
	BNE SWAP4       ;DON'T WRITE NOW
	JMP DOWRIT
SWAP4
	ORA #$80        ;SET PENDING WRITE FLAG
	STA WBAM
	RTS
;
PUTBAM	;PUT MEM IMAGE TO BAM
	TAY
	LDA TBAM,Y
	BEQ SWAP2       ;NO IMAGE HERE
;
	PHA             ;SAVE TRACK #
	LDA #0
	STA TBAM,Y      ;CLEAR TRACK FLAG
	LDA JOBNUM
	ASL A
	TAX
	PLA
	ASL A
	ASL A
	STA BUFTAB,X    ;SET PTR IN BAM
	TYA
	ASL A
	ASL A
	TAY
SWAP1	;TRANSFER IMAGE TO BAM
	LDA BAM,Y
	STA (BUFTAB,X)
	LDA #0
	STA BAM,Y       ;CLEAR IMAGE
	INC BUFTAB,X
	INY
	TYA
	AND #3
	BNE SWAP1
SWAP2
	RTS
;
;
CLNBAM	;CLEAN TRACK # FOR IMAGES
	LDA DRVNUM
	ASL A
	TAX
	LDA #0
	STA TBAM,X
	INX
	STA TBAM,X
	RTS
;
;
;
REDBAM	;READ IN BAM IF NOT PRESENT
	LDA BUF0,X
	CMP #$FF
	BNE RBM20       ;IT IS IN MEMORY
	TXA
	PHA             ;SAVE CHANNEL PTR
	JSR GETBUF      ;GO FIND A BUFFER
	TAX
	BPL RBM10
;
	LDA #NOCHNL     ;NO BUFFERS AROUND
	JSR CMDERR
RBM10
	STX JOBNUM      ;SAVE JOBNUM ASSIGNED
	PLA
	TAY
	TXA
	ORA #$80
	STA BUF0,Y      ;SET AS INACTIVE FOR STEALING
;READ IN BAM
	ASL A
	TAX
	LDA DIRTRK
	STA HDRS,X
	LDA #0
	STA HDRS+1,X
	JMP DOREAD
RBM20
	AND #$F         ;SET BAM'S JOBNUM
	STA JOBNUM
	RTS
;
;SET BAM POINTER IN BUF0/1 TABLES
;
BAM2A	;LEAVE IN .A
	LDA #BLINDX
	LDX DRVNUM
	BNE B2X10
;
	CLC
	ADC #MXCHNS+1
B2X10
	RTS
;
BAM2X	;LEAVE IN .X
	JSR BAM2A
	TAX
	RTS
;
;
.END
