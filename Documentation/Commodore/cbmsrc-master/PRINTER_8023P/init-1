	.PAG 'INIT-1'
;
;*THIS MODULE RESPONSIBLE FOR:
; 1.DETECTING A JAMMED HEAD
; 2.DETECTING BAD RAM
; 3.INITIALIZING RAM & PORTS
; 4.INITIALIZING INTERNAL CPU REGISTERS
; 5.DOING DIAGNOSTIC LOOP IF FEED
;   DEPRESSED UPON RESET OR POWER ON
; 6.NOTIFYING OPERATOR BY FLASHING
;   LED IF HEAD JAM OR BAD RAM DETECTED
;
; ERROR DISPLAY ROUTINE
; FLASHES THE (ERROR #)+1 IN THE LED
;
PEZRO	LDX #0 ;ERROR #1 FOR ZERO PAGE
	.BYTE $2C ;SKIP NEXT TWO BYTES
PERR	LDX F ;GET ERROR #
	TXS ;USE STACK AS STORAGE REG.
	LDA #LED ;SET DIR REG TO LED ONLY
	STA DDRA2
PE20	TSX ;RESTORE ERROR #
PE30	LDA #0
	STA CONTRL ;TURN ON LED
	TYA ;CLEAR INNER CTR
PD10	CLC
PD20	ADC #1 ;COUNT INNER CTR
	BNE PD20
	DEY ;DONE ?
	BNE PD10 ;NO
;
	LDA #LED
	STA CONTRL ;TURN OFF LED
PE40	;WAIT
	TYA ;CLEAR INNER CTR
PD11	CLC
PD21	ADC #1 ;COUNT INNER CTR
	BNE PD21
	DEY ;DONE ?
	BNE PD11 ;NO
;
	DEX ;BLINKED # ?
	BPL PE30 ;NO - BLINK AGAIN
	CPX #$FC ;WAITED BETWEEN COUNTS ?
	BNE PE40 ;NO
	BEQ PE20 ;ALWAYS - ALL AGAIN
;
INIT	CLD ;DECIMAL MODE OFF
	SEI
;
	LDX #$FF
	TXS ;SET STACK
;
;
;*********************************
;
; POWER UP DIAGNOSTIC
;
;*********************************
;
	LDY #0
	LDX #0
PU10	TXA ;FILL Z-PAGE ACCEND PATTERN
	STA $0,X
	INX
	BNE PU10
PU20	TXA ;CHECK PATTERN BY INC...
	CMP $0,X ;...BACK TO ORIG #
	BNE PEZRO ;BAD BITS
PU30
	INC $0,X ;BUMP CONTENTS
	INY
	BNE PU30 ;NOT DONE
;
	CMP $0,X ;CHECK FOR GOOD COUNT
	BNE PEZRO ;SOMETHING'S WRONG
;
	STY $0,X ;LEAVE Z-PAGE ZEROED
	LDA $0,X ;CHECK IT
	BNE PEZRO ;WRONG
;
	INX ;NEXT!
	BNE PU20 ;NOT ALL DONE
;
;
	LDY #0
	LDX #0
PU101	TXA
	STA RAM1,X
	INX
	BNE PU101
PU201	TXA
	CMP RAM1,X
	BEQ PU301
	JMP PEZRO
PU301
	INC RAM1,X
	INY
	BNE PU301
	CMP RAM1,X
	BEQ PU401
	JMP PEZRO
PU401	TYA
	STA RAM1,X
	LDA RAM1,X
	BEQ PU501
	JMP PEZRO
PU501
	INX
	BNE PU201
	LDY #0
	LDX #0
PU102	TXA
	STA RAM1+256,X
	INX
	BNE PU102
PU202	TXA
	CMP RAM1+256,X
	BEQ PU302
	JMP PEZRO
PU302
	INC RAM1+256,X
	INY
	BNE PU302
	CMP RAM1+256,X
	BEQ PU402
	JMP PEZRO
PU402	TYA
	STA RAM1+256,X
	LDA RAM1+256,X
	BEQ PU502
	JMP PEZRO
PU502
	INX
	BNE PU202
;
;
;LDY #0
;LDX #0
;PU103 TXA
;STA RAM1+512,X
;INX
;BNE PU103
;PU203 TXA
;CMP RAM1+512,X
;BEQ PU303
;JMP PEZRO
;PU303
;INC RAM1+512,X
;INY
;BNE PU303
;CMP RAM1+512,X
;BEQ PU403
;JMP PEZRO
;PU403 TYA
;STA RAM1+512,X
;LDA RAM1+512,X
;BEQ PU503
;JMP PEZRO
;PU503
;INX
;BNE PU203
;
;
;LDY #0
;LDX #0
;PU104 TXA
;STA RAM1+768,X
;INX
;BNE PU104
;PU204 TXA
;CMP RAM1+768,X
;BEQ PU304
;JMP PEZRO
;PU304
;INC RAM1+768,X
;INY
;BNE PU304
;CMP RAM1+768,X
;BEQ PU404
;JMP PEZRO
;PU404 TYA
;STA RAM1+768,X
;LDA RAM1+768,X
;BEQ PU504
;JMP PEZRO
;PU504
;INX
;BNE PU204
;
;
;
;
;
; TEST 64K-BIT ROM (MINUS 1 KBYTES FOR I/O)
;   AT $E400
;   EXIT IF OK
;
	INC F ;ADVANCE ERROR COUNT
	STY IP ;ZERO LOW INDIRECT
	STY IP+1 ;ZERO HIGH INDIRECT
	TYA ;CLEAR ACCUM
	LDX #32 ;32 PAGES IN 8K ROM
	CLC
RT10	DEC IP+1 ;DO IT BACKWARDS
RT20	ADC (IP),Y ;TOTAL CHECKSUM IN A
	INY
	BNE RT20
	DEX
	BNE RT10
	ADC #0 ;ADD IN LAST CARRY
	CMP IP+1 ;CORRECT ?
PERR2
	BEQ TMTEST ;NO, FLASH ERROR
	JMP PERR
TMTEST	;TEST TIMERS
	INC F ;ADVANCE ERROR COUNT
	LDA #$EC
	STA CRCLK
	LDA #$EE
	STA PFCLK
	LDA #0
	STA CRCLK+1
	STA PFCLK+1
	LDA #$F5
	STA NDCLKD+8
	LDA #$FB
	STA DMCLKD+8
TT10
	LDA CRCLK
	BNE TT10
TT20
	.IFN >TT20->TT10 <
	**** NO PAGE BOUNDARY HERE ****
>
	LDA PFCLK
	BNE PERR2
	INC F ;ADVANCE ERROR COUNT
	LDA NDCLKD
	BNE PERR2
	INC F ;ADVANCE ERROR COUNT
	LDA DMCLKD
	BNE PERR2
DIAGOK
	JSR INITIO ;INITIALIZE I/O
	LDA #3
	STA PORTB
;
	CLI
;
	LDA #12
	STA FDINC
;
	LDA #60
	STA LP
;
	LDA #$80+66
	STA LC
;
;
	LDA #<LIM136
	STA LIMPOS
	STA TEMP5
	LDA #>LIM136
	STA LIMPOS+1
	STA TEMP5+1
	JSR CLRMR
	JSR ZERO
	JSR ZERO1
	LDA #42
	STA DDATA
	LDA #CHRLIN
	STA FLIM
	LDA #CHRLIN+1
	STA CHRLIM
	LDA #<CRLIM
	STA CRLIMB
	LDA #>CRLIM
	STA CRLIMB+1
;
	LDA #<CR2TIM
	STA CRTM
	LDA #>CR2TIM
	STA CRTM+1
	LDA #26
	STA RLIM
	LDA #120
	STA LLIM
;
	LDA #<CRDTIM
	STA CRCLK+4
	LDA #>CRDTIM
	STA CRCLK+5
	LDA CONTRL
	ORA #CRHOLD
	STA CONTRL
	JSR DOSTEP
INN	LDA IFR
	AND #$20
	BEQ INN
	LDA CONTRL
	AND #$FD
	STA CONTRL
	LDA #<PFDTIM
	STA CRCLK+4
	LDA #>PFDTIM
	STA CRCLK+5
	LDA FPHASE
	AND #3
	TAY
	LDA STPORT
	AND #$F
	ORA FSTEPS,Y
	STA STPORT
	LDA CONTRL
	ORA #PFHOLD
	STA CONTRL
INN10	LDA IFR
	AND #$20
	BEQ INN10
	LDA CONTRL
	AND #$FF-PFHOLD
	STA CONTRL
	LDA #$80
	STA PTRRDY
	JSR SSWEEP
INIT20
	LDA CONTRL
	AND #FEEDSW
	BEQ INIT40
;
;CHECK FEED SWITCH
;FOR DIAGNOSTICS
	JMP MAIN00 ;SWITCH OFF
	.PAG
;
;FOR L:=0 TO 299
; BEGIN
;  SC:=MOD(L,NC);
;  M:=.Y;
;  INSERT(DSMODE[M]);
;  FORI:=0 TO 79
;   INSERT(DCHAR[MOD(SC+I,NC))])
; END
; RESET
;
INIT40
	.IFE KATA <
	LDA #BUSI ;TURN ON KATAKANA
	STA BUSSEL
>
;
	LDY #0 ;/PRINT TITLE MESSAGE
	STY F  ;/CLR TEMP REG
INIT41	LDA TITLE,Y ;/GET NEXT CHAR
	CMP #CR+128 ;/DONE ?
	BEQ INIT42 ;/NO, THEN NEXT
	STY F ;/TEMP SAVE OFFSET
	JSR INSERT
	LDY F ;/RESTORE OFFSET
	INY ;/BUMP POINTER
	JMP INIT41
INIT42	AND #$7F ;/SEND NORM CHAR
	JSR INSERT
	LDY #0 ;/CLR POINTER
	STY F ;/CLR TEMP REG
;
INIT43	LDA #0
	STA F
	STA F+1
DD10
	LDA F+1
	LDX F
	JSR MODNC
	STA F+2
	STY F+4
	LDA DSMODE,Y
	JSR INSERT
;
	LDA #0
	STA F+3
DD20
	LDA F+2
	CLC
	ADC F+3
	TAX
	LDA #0
	ADC #0
	JSR MODNC
	CPY F+4
	BEQ DD25
	PHA
	STY F+4
	LDA DSMODE,Y
	JSR INSERT
	PLA
DD25
	TAX
	LDA DCHAR,X
	JSR INSERT
;
	INC F+3
	LDA F+3
	CMP #80
	BCC DD20
;
	INC F
	BNE DD30
	INC F+1
DD30
	LDA F+1
	CMP #>300
	BCC DD10
	BNE DD40
;
	LDA F
	CMP #<300
	BCC DD10
DD40
	LDA PTRRDY
	BNE DD40
	JMP INIT

;
MODNC
	PHA
	TXA
MOD1
	TAY
	SEC
	SBC #NC
	BCC MOD2
	BNE MOD1
	LDY #0
MOD2
	TAX
	PLA
	BEQ MOD9
	SEC
	SBC #1
	PHA
	TXA
	JMP MOD1
MOD9
	TYA
	LDY #0
	CMP #SCHAR
	BCC MOD10
	LDY #1
MOD10
	RTS
;
TITLE	.BYT 13,01,'  *** CBM *** ',129 ;TITLE MESSAGE
	.BYT ': COMMODORE 8023P MODEL PRINTER : '
	.IFE KATA <
	.BYT 'EPROM P/N #325325-03,#325326-03'
>
	.IFN KATA <
	.BYT 'ROM P/N #325320-02'
;EPROM P/N #325327-02,#325328-02
>
	.BYT 13,141
;
DSMODE	.BYTE 145,17
DCHAR
	.BYTE 32,33,35,36,37,38,39
	.BYTE 40,41,42,43,44,45,46,47,48,49
	.BYTE 50,51,52,53,54,55,56,57,58,59
	.BYTE 60,61,62,63,64,65,66,67,68,69
	.BYTE 70,71,72,73,74,75,76,77,78,79
	.BYTE 80,81,82,83,84,85,86,87,88,89
	.BYTE 90,91,92,93,94,95
	.BYTE 161,162,163,164,165,166,167,168,169
	.BYTE 170,171,172,173,174,175,176,177,178,179
	.BYTE 180,181,182,183,184,185,186,187,188,189
	.BYTE 190,191,192,193,194,195,196,197,198,199
	.BYTE 200,201,202,203,204,205,206,207,208,209
	.BYTE 210,211,212,213,214,215,216,217,218,219
	.BYTE 220,221,222,223
SCHAR=*-DCHAR
	.BYTE 65,66,67,68,69
	.BYTE 70,71,72,73,74,75,76,77,78,79
	.BYTE 80,81,82,83,84,85,86,87,88,89
	.BYTE 90,92,94,95,105,122
NC	=*-DCHAR
	.PAGE
INITIO
	LDA #$FF
;SET DATA DIRECTION REGS
	STA CIEEE ;RELEASE IEEE CONTROL
	STA DIEEE ;RELEASE DATA LINES
	LDA #NDAC+NRFD
	STA DDRA1 ;CIEEE DIR
	LDA #0
	STA DDRB1 ;DIEEE DIR
INITF
	LDA #0 ;RELEASE CONTROL SIGNALS...
	STA CONTRL ;...LED OFF
	LDX #$FF
	STX NEEDLS ;NEEDLES OFF
	LDA FSTEPS
	ORA #$F
	STA STPORT ;STEPPERS TO INTIAL PHASES
	LDA #LED+PFHOLD+CRHOLD
	STA DDRA2 ;CONTRL DIR
	STX DDRB2 ;NEEDLES DIR
	STX DDRA3 ;STEPPERS OUT
;
	LDA #3
	STA DDRB3
;
	LDA #$7F
	STA IER
	LDA #1
	STA PCR
;
	LDA #$40
	STA ACR ;SET CRCLK TO FREE-RUN
	LDA CIEEE
	AND #$38
	BEQ IIN
	LSR A
	LSR A
	LSR A
	CLC
	ADC #$24
	STA DBN
	RTS
IIN	LDA #$24
	STA DBN
	RTS
;
	.END
