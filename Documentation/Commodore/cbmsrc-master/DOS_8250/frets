.PAGE 'FRETS'
;
; MARK A TRACK, SECTOR FREE IN BAM
;
JFRETS
	JSR SETBMP      ; POINT BMPNT AT BAM
	JSR FREUSE      ; CALC INDEX INTO BAM
FRETS2
	SEC             ; FLAG FOR NO ACTION
	BNE FRERTS      ; FREE ALREADY
	LDA (BMPNT),Y   ; NOT FREE, FREE IT
	ORA BMASK,X
	STA (BMPNT),Y
	JSR DTYBAM      ; SET DIRTY FLAG
	LDY TEMP
	CLC
	LDA (BMPNT),Y   ; ADD ONE
	ADC #1
	STA (BMPNT),Y
	LDA TRACK
	CMP DIRTRK
	BEQ FRERTS
	INC NDBL,X
	BNE FRERTS
	INC NDBH,X
FRERTS
	RTS
DTYBAM
	LDX DRVNUM
	LDA #1
	STA MDIRTY,X    ; SET DIRTY FLAG
	RTS
;
; MARK TRACK, SECTOR USED
;
JUSED
	JSR FREUSE      ; CALC IN DEX INTO BAM
	BEQ USERTS      ; USED, NO ACTION
	LDA (BMPNT),Y   ; GET BITS
	EOR BMASK,X     ; MARK SEC USED
	STA (BMPNT),Y
	JSR DTYBAM
	LDY TEMP
	LDA (BMPNT),Y   ; GET COUNT
	SEC
	SBC #1          ; DEC ONE (C = 0)
	STA (BMPNT),Y   ; SAVE IT
	LDA TRACK
	CMP DIRTRK
	BEQ USEDT2
	LDA NDBL,X
	BNE USEDT1
	DEC NDBH,X
USEDT1
	DEC NDBL,X
USEDT2
	LDA NDBH,X
	BEQ USEDT3
	RTS
USEDT3
	LDA NDBL,X
	CMP #3
	BCS USERTS      ; > 2 BLOCKS FREE
	LDA #DSKFUL
	JSR ERRMSG
USERTS
	RTS
;
; CALCULATES INDEX INTO BAM
; FOR FRETS AND USEDTS
;
FREUSE
	JSR SETMAP
	TYA
FREUS2
	STA TEMP        ; SAVE INDEX
FREUS3
	LDA SECTOR      ; .A = SECTOR/8
	LSR A
	LSR A
	LSR A           ; FOR WHICH OF THREE BYTES
	SEC
	ADC TEMP        ; CALC INDEX
	TAY
	LDA SECTOR      ; BIT IN THAT BYTE
	AND #7
	TAX
	LDA (BMPNT),Y   ; GET THE BYTE
	AND BMASK,X     ; TEST IT
	RTS             ; .Z = 1 = USED, .Z = 0 = FREE
;
BMASK
	.BYTE 1,2,4,8,16,32,64,128
.PAGE
SETMAP
	JSR SETBJ
	JSR SETBMP      ; SET BAM POINTER
	LDA TRACK
	BEQ SM10
	CMP MAXTRK
	BCC SM20
SM10
	LDA #BADTS
	JSR CMDER2
SM20
	JSR JOB2X
	LDA HDRS+2,X
	CMP DIRTRK
	BNE SM30
	LDA HDRS+3,X
	BNE SM30
	LDA DOS
	BEQ SM30        ; 4040 BAM
	JSR RDNBAM      ; READ THE NEXT BAM
SM30
	LDY LOTRK
	LDA TRACK
	CMP (BMPNT),Y
	BCS SM40
	JSR RDBAM       ; READ 1ST BAM
SM40
	LDA DOS
	BEQ SM50
	LDA TRACK
	LDY #HITRK
	CMP (BMPNT),Y
	BCC SM50
	JSR RDNBAM      ; READ THE NEXT BAM
	JMP SM40
SM50
	LDA TRACK
	LDY LOTRK
	CMP (BMPNT),Y
	BCS SM60
	LDA #$67
	JSR CMDER2
SM60
	JMP MBAM
;
; .X = JOBNUM*8
;
JOB2X
	LDA JOBNUM
	ASL A
	ASL A
	ASL A
	TAX
	RTS
;
; JOBNUM = DRVNUM+BAMJOB
;
SETBJ
	LDA DRVNUM
	CLC
	ADC #BAMJOB
	STA JOBNUM
	RTS
;
; READ 1ST BAM IN
;
RDBAM
	JSR SCRBAM
	JSR JOB2X
	LDA BAMTRK
	STA HDRS+2,X
	LDA BAMSEC
	STA HDRS+3,X
	JMP DOREAD
;
; READ NEXT BAM IN
;
RDNBAM
	JSR SCRBAM
	JSR JOB2X
	LDY #0
	LDA (BMPNT),Y
	STA HDRS+2,X
	INY
	LDA (BMPNT),Y
	STA HDRS+3,X
	JMP DOREAD
;
; .Y = BAMSIZ * (TRACK - BMPNT->BAM.LOTRK) + MAPOFF
;
MBAM
	LDA TRACK
MBAM2
	SEC
	LDY LOTRK
	SBC (BMPNT),Y
	STA ACCUM+1
	LDA BAMSIZ
	STA TEMP
	LDA #0
	JMP MB30        ; NOW MULTIPLY
MB10
	CLC
	ADC ACCUM+1
	BCC MB20
	LDA #SYSTS
	JSR CMDER2
MB20
	ASL ACCUM+1
MB30
	LSR TEMP
	BCS MB10
	BNE MB20
	ADC MAPOFF      ; .C = 0
	TAY
	RTS
;
; CLEAR THE BAM AREA
;
CLRBAM
	LDY #0
	TYA
CLB1
	STA (BMPNT),Y
	INY
	BNE CLB1
	RTS
RDDIR
	JSR SETBJ
	JSR SCRBAM      ; SCRUB BAM
	LDA DIRTRK
	STA TRACK
	LDA #0
	STA SECTOR
	LDA JOBNUM
	JSR SETH
	JMP DOREAD
;
; TURN ON ACTIVITY LED SPECIFIED
; BY DRVNUM
;
JSETLD
	LDA #$E7
	AND PBD2
	PHA
	LDA DRVNUM
	BEQ LEDS0
	PLA
	ORA #LED1
	BNE LEDS1
LEDS0
	PLA
	ORA #LED0
LEDS1
	STA PBD2
	RTS
ERROFF
	LDA PBD2
	AND #$FF-ERRLED
	STA PBD2
	RTS
.END
