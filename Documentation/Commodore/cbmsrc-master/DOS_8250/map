.PAGE 'NEWMAP'
;
; BUILD A NEW MAP ON DISKETTE
;
NEWMAP
	JSR SETBMP
	JSR CLRBAM
	JSR SETBJ
;
; SET NEW BAM, CALLED BY VERDIR
;
NEWMPV
	JSR SETH
	JSR JOB2X
	LDA BAMTRK
	STA HDRS+2,X
	LDA BAMSEC
	STA HDRS+3,X
	LDY LOTRK
	LDA #1
	STA TRACK
	STA (BMPNT),Y
	LDA #1
	STA R0
NM40
	JSR MBAM        ; DO A BAM MULTIPLY
	BCS NM45
	TAY
	CLC
	ADC BAMSIZ
	BEQ NM50
	BCC NM50
NM45
	JSR BAMOUT      ; WRITE THE BAM OUT
	JSR CLRBAM
	LDY LOTRK
	LDA TRACK
	STA (BMPNT),Y
	JSR JOB2X
	LDY R0
	LDA BAMTRK,Y
	STA HDRS+2,X
	LDA BAMSEC,Y
	STA HDRS+3,X
	INC R0
	JSR MBAM
NM50
	STY R1
	LDA TRACK
	JSR MAXSEC
	STA LSTSEC
	LDA #0
	STA SECTOR
NM60
	LDA R1
	JSR FREUS2      ; MARK THE BAM
	JSR FRETS2
	INC SECTOR
	LDA SECTOR
	CMP LSTSEC
	BCC NM60
	INC TRACK
	LDX TRACK
	CPX MAXTRK
	BCC NM40
	JSR BAMOUT
NM70
	LDX DRVNUM
	LDA #0
	STA MDIRTY,X
	RTS
;
; BAMOUT - SET LINKS, VERNUM, & WRITE IT
;
BAMOUT
	LDA DOS
	BNE BAMOU1      ; 8050/8250 BAM ROUTINE
	PLA
	PLA             ; SET STACK FOR PROPER RETURN
	RTS
BAMOU1
	LDX R0
	LDY #0
	LDA BAMTRK,X
	STA (BMPNT),Y
	INY
	LDA BAMSEC,X
	STA (BMPNT),Y
	INY
	LDA VERNUM
	STA (BMPNT),Y
	INY
	LDA #0
	STA (BMPNT),Y
	LDY #HITRK
	LDA TRACK
	STA (BMPNT),Y
	LDA CMDNUM
	CMP #VAL
	BEQ BMO2
	JMP DOWRIT      ; WRITE THIS BAM
BMO2
	INC BMPNT+1     ; ADVANCE TO NEXT BUFFER
	RTS
.PAGE 'MAPOUT'
;
; WRITE OUT THE BIT MAP TO
; THE DRIVE IN LSTJOB(ACTIVE)
;
MAPOUT
	JSR GETACT
	TAX
	LDA LSTJOB,X
MO10
	AND #1
	STA DRVNUM
	JSR SETBJ
;
; VERIFY THE BAM BLOCK COUNT
; MATCHES THE BITS
;
JSCRBM
	JSR SETBMP
	LDY DRVNUM
	LDA MDIRTY,Y
	BNE SB10
	RTS
SB10
	LDA #0
	STA MDIRTY,Y
	LDY LOTRK
	LDA (BMPNT),Y
MC10
	PHA
	JSR MBAM2
	JSR AVCK
	PLA
	CLC
	ADC #1
	PHA             ; SAVE TRACK
	LDA DOS
	BNE MC11        ; 8050/8250 BAM
	PLA             ; GET TRACK
	CMP MAXTRK      ; MAX TRACK+1 ON DISK
	BEQ MC12        ; DONE, WRITE BAM OUT
	BNE MC10
MC11
	PLA             ; GET TRACK
	LDY #HITRK
	CMP (BMPNT),Y
	BCC MC10
MC12
	JMP DOWRIT
.PAGE 'NUMFRE'
;
; CALC THE NUMBER OF FREE BLOCKS ON DRVNUM
;
NUMFRE
	LDX DRVNUM
	LDA NDBL,X
	STA NBTEMP
	LDA NDBH,X
	STA NBTEMP+1
	RTS
.END
