.PAGE 'INTERPROCESS COMMUNICATION'
;--------------------------------------------------------------
;
; SEND A REQUEST
;   ENTER:   IPB BUFFER IS INITIALIZED TO HOLD THE
;            COMMAND
;            INPUT PARAMETER BYTES
;
;   EXIT:    IPB BUFFER HOLDS
;            OUTPUT PARAMETER BYTES
;            ALL OTHER BYTES IN IPB UNCHANGED
;
;---------------------------------------------------------------
IPRQST
	LDA IPB+IPCCMD
	AND #$7F
	TAY
	JSR GETPAR      ;GET #INS,OUTS
	LDA #SEM88      ;CHECK 8088 SEMAPHORE
	AND IPCIA+PRB
	BNE IPRQST      ;LOCKED OUT BY OTHER PROCESSOR
	LDA #SEM65
	ORA IPCIA+PRB   ;LOCK 6509 SEMAPHORE
	STA IPCIA+PRB
	NOP             ;A PAUSE
;
	LDA IPCIA+PRB   ;COLLISIONS WITH 8088?
	TAX
	AND #SEM88
	BEQ IPR100      ;OK...
	TXA
	EOR #SEM65
	STA IPCIA+PRB   ;NOPE, CLEAR 6509 SEMAPHORE
	TXA             ;KILL SOME TIME
	NOP
	NOP
	NOP
	BNE IPRQST      ;TRY AGAIN (BR ALWAYS)
;
;     SEND CMD BYTE AND CAUSE IRQ
;
IPR100
	LDA #$FF
	STA IPCIA+DDRA  ;PORT DIRECTION = OUT
	LDA IPB+IPCCMD
	STA IPCIA+PRA   ;WRITE CMD BYTE TO PORT
;; CAUSE IRQ
	JSR FREBUS      ;GIVE UP BUS
	LDA IPCIA+PRB   ;PB6 := 0
	AND #$BF
	STA IPCIA+PRB
	ORA #$40        ;KEEP LOW FOR 4US (8 CYCLES)
	CLI
	NOP
	NOP
	NOP
	STA IPCIA+PRB   ;PB6 := HIGH
;
	JSR WAITHI      ;SEM8088 -> HI (CMD BYTE RECVD)
	LDA #$00
	STA IPCIA+DDRA  ;PORT DIRECTION = IN
	JSR ACKLO       ;SEM6509 -> LO (ACK)
	JSR WAITLO      ;SEM8088 -> LO (ACK ACK)
;
;    SEND DATA BYTES, IF ANY
;
	LDY #0
	BEQ IPR250      ;ALWAYS
IPR200
	LDA #$FF
	STA IPCIA+DDRA  ;PORT DIRECTION = OUT
	LDA IPB+IPCDAT,Y ;GET NEXT DATA BYTE
	STA IPCIA+PRA   ;WRITE CMD OUT
	JSR ACKHI       ;SEM6509 -> HI (DATA READY)
	JSR WAITHI      ;SEM8088 -> HI (DATA RECVD)
	LDA #$00
	STA IPCIA+DDRA  ;PORT DIRECTION = IN
	JSR ACKLO       ;SEM6509 -> LO (ACK)
	JSR WAITLO      ;SEM8088 -> LO (ACK ACK)
	INY             ;BUMP INDEX TO NEXT DATA BYTE
IPR250	CPY IPB+IPCIN   ;ANY MORE ??
	BNE IPR200      ;YES...
;
;    RECEIVE DATA BYTES, IF ANY
;
	LDY #0
	BEQ IPR350      ;ALWAYS
IPR300
	JSR ACKHI       ;SEM6509 -> HI (RDY TO RECEIVE)
	JSR WAITHI      ;SEM8088 -> HI (DATA AVAILABLE)
	LDA IPCIA+PRA   ;GET DATA FROM PORT
	STA IPB+IPCDAT,Y ;STUFF IT AWAY
	JSR ACKLO       ;SEM6509 -> LO (DATA RECVD)
	JSR WAITLO      ;SEM8088 -> LO (ACK)
	INY
IPR350
	CPY IPB+IPCOUT  ;MORE?
	BNE IPR300      ;YES...
	RTS             ;DONE!!
.PAGE
;-------------------------------------------------------------------
;
; SERVICE AN 8088 REQUEST
;
;-------------------------------------------------------------------
IPSERV
;; LDY #IPBSIZ-1 ;COPY IP BUFFER TO STACK
;;IPS050 LDA IPB,Y
;; PHA
;; DEY
;; BPL IPS050
;
	LDA #0
	STA IPCIA+DDRA  ;PORT DIR=IN, JUST IN CASE...
	LDA IPCIA+PRA   ;READ CMD FROM PORT
	STA IPB+IPCCMD  ;STORE CMD AND DECODE IT
	AND #$7F        ;MASK OFF BUS BIT
	TAY
	JSR GETPAR      ;GET PARAM COUNTS
	TYA             ;ADJUST OFFSET FOR JUMP TABLE
	ASL A
	TAY
	LDA IPJTAB,Y    ;JUMP ADDRESS(LO)
	STA IPB+IPCJMP
	INY
	LDA IPJTAB,Y    ;JUMP ADDRESS (HI)
	STA IPB+IPCJMP+1
	JSR ACKHI       ;SEM6509 -> HI (CMD RECVD)
	JSR WAITLO      ;SEM8088 -> LO (ACK)
;
;    RECEIVE INPUT BYTES, IF ANY
;
	LDY #0
IPS100
	CPY IPB+IPCIN   ;ANY MORE?
	BEQ IPS200      ;NO...
	JSR ACKLO       ;SEM6509 ->LO (ACK ACK)
	JSR WAITHI      ;SEM8088 -> HI (DATA AVAILABLE)
	LDA IPCIA+PRA   ;READ DATA BYTE
	STA IPB+IPCDAT,Y ;STORE IT
	JSR ACKHI       ;SEM6509 -> HI (DATA RECVD)
	JSR WAITLO      ;SEM8088 -> LO (ACK)
	INY
	BNE IPS100      ;ALWAYS...
;
;    PROCESS CMD
;
IPS200
	BIT IPB+IPCCMD  ;CMD REQUIRES BUS?
	BMI IPS500      ;YES...
	LDA #>IPSRET    ;PUSH RETURN
	PHA
	LDA #<IPSRET
	PHA
	JMP (IPB+IPCJMP) ;GONE!!!
;
;    SEND RETURN BYTES, IF ANY
;
IPS300
IPSRET=IPS300-1
	JSR ACKLO       ;SEM6509 -> LO
	LDY #0
	BEQ IPS350      ;ALWAYS
IPS310
	JSR WAITHI      ;SEM8088 -> HI (8088 RDY TO RECV)
	LDA #$FF
	STA IPCIA+DDRA  ;PORT DIRECTION = OUT
	LDA IPB+IPCDAT,Y
	STA IPCIA+PRA   ;WRITE DATA TO PORT
	JSR ACKHI       ;SEM6509 -> HI (DATA AVAILABLE)
	JSR WAITLO      ;SEM8088 -> LO (DATA RECVD)
	LDA #0
	STA IPCIA+DDRA  ;PORT DIRECTION = IN
	JSR ACKLO       ;SEM6509 -> LO (ACK)
	INY
IPS350	CPY IPB+IPCOUT  ;ANY MORE?
	BNE IPS310      ;YES, REPEAT...
;
IPS400
;; LDY #0
;;IPS450 PLA ;RESTORE IP BUFFER
;; STA IPB,Y
;; INY
;; CPY #IPBSIZ
;; BNE IPS450
	RTS             ;DONE!
.SKI 3
;      SPECIAL,   FOR COMMANDS REQUIRING THE BUS
IPS500	LDA #>BURET
	PHA
	LDA #<BURET
	PHA             ;PUSH RETURN
	JSR GETBUS      ;GRAB BUS
	JMP (IPB+IPCJMP) ;GONE!
;
IPS600
BURET=IPS600-1
	JSR FREBUS      ;GIVE UP BUS
	LDA IPB+IPCOUT  ;#BYTES TO RETURN
	STA IPB+IPCIN
	STA IPB+IPCCMD  ;RETURN OP=#BYTES TO RETURN
	LDA #0
	STA IPB+IPCOUT  ;JUST SEND TO 8088
	JSR IPRQST
	JMP IPS400      ;DONE!
.PAGE
;
; WAITLO - WAIT UNTIL SEM88 GOES LOW
;
WAITLO
	LDA IPCIA+PRB
	AND #SEM88
	BNE WAITLO
	RTS
.SKI 3
;
; WAITHI - WAIT UNTIL SEM88 GOES HIGH
;
WAITHI
	LDA IPCIA+PRB
	AND #SEM88
	BEQ WAITHI
	RTS
.SKI 3
;
; ACKLO - ACKNOWLEGDE SEM65 LOW
;
ACKLO
	LDA IPCIA+PRB
	AND #$FF-SEM65
	STA IPCIA+PRB
	RTS
.SKI 3
;
; ACKHI - ACKNOWLEDGE SEM6509 HI
;
ACKHI
	LDA #SEM65
	ORA IPCIA+PRB
	STA IPCIA+PRB
	RTS
.SKI 3
;
; FREBUS - GIVE UP BUS
; GETBUS - GRAB BUS
;
FREBUS
	LDA TPI1+PB     ;PB4 := 0
	AND #$EF
	STA TPI1+PB
	RTS
;
GETBUS
	LDA IPCIA+PRB   ;CHECK NBUSY2
	AND #$02
	BEQ GETBUS      ;2ND PROC NOT OFF
;
	LDA TPI1+PB     ;PB4 := 1
	ORA #$10
	STA TPI1+PB
	RTS
;
; GETPAR
;  ENTER - .Y = TABLE OFFSET
;  EXIT:   .Y = TABLE OFFSET
;          #INS,#OUTS PUT INTO IPB BUFFER
GETPAR
	LDA IPPTAB,Y    ;BREAK APART NIBBLES
	PHA
	AND #$0F
	STA IPB+IPCIN   ;#INPUT BYTES
	PLA
	LSR A
	LSR A
	LSR A
	LSR A
	STA IPB+IPCOUT  ;#OUTPUT BYTES
	RTS
;
; XCINT - PATCH FOR EARLY RELEASE **********REMOVE LATER************
;
XCINT
	LDA #$F0        ;MAKE SURE WE DON'T WIPE ZERO PAGE
	STA PKYBUF+1    ;ON AN EARLY CINIT
	JMP CINT
.END
