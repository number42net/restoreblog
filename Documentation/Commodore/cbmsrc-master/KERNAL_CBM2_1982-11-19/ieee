.PAGE 'IEEE 02/01/82'
;        COMMAND IEEE-488 DEVICE TO TALK
;       
TALK	ORA #TLKR       ;MAKE A TALK ADR
	BNE LIST1       ;ALWAYS GO TO LIST1
.SKIP 4
;        COMMAND IEEE-488 DEVICE TO LISTEN
;       
LISTN	ORA #LSTNR      ;MAKE A LISTEN ADR
;       
LIST1	PHA             ;SAVE DEVICE AND TALK/LISTEN
;       
	LDA #TDDB       ;SET CONTROL FOR ATN/DATA OUT
	STA TPI1+DDPA
;
	LDA #$FF        ;SET DIRECTION FOR TRANSMITT *
	STA CIA+PRA     ;SET DATA   *
	STA CIA+DDRA    ;SET DATA DIRECTION OUT   *
	LDA #$FF-DC     ;ENABLE TRANSMITT
	STA TPI1+PA
	LDA C3PO        ;GET IEEE FLAGS
	BPL LIST2       ;IF DATA IN BUFFER
;       
	LDA TPI1+PA     ;SEND EOI
	AND #$FF-EOI
	STA TPI1+PA
;       
	LDA BSOUR       ;GET BYTE TO SEND
	JSR TBYTE       ;SEND LAST CHARACTER
;       
	LDA C3PO        ;CLEAR BYTE IN BUFFER FLAG
	AND #$FF-DIBF
	STA C3PO
;       
	LDA TPI1+PA     ;CLEAR EOI
	ORA #EOI
	STA TPI1+PA
;       
LIST2	LDA TPI1+PA     ;ASSERT ATN
	AND #$FF-ATN
	STA TPI1+PA
;       
	PLA             ;GET TALK/LISTEN ADDRESS
	JMP TBYTE
.SKIP 4
;        SEND SECONDARY ADDRESS AFTER LISTEN
;       
SECND	JSR TBYTE       ;SEND IT
;       
;        RELEASE ATTENTION AFTER LISTEN
;       
SCAT1
;
SCATN	LDA TPI1+PA     ;DE-ASSERT ATN
	ORA #ATN
	STA TPI1+PA
	RTS
.SKIP 4
;        TALK SECOND ADDRESS
;       
TKSA	JSR TBYTE       ;SEND SECONDARY ADDRESS
;
TKATN
	LDA #$FF-NRFD-NDAC-TE ;PULL NRFD AND NDAC LOW
	AND TPI1+PA
	STA TPI1+PA
;
	LDA #RDDB       ;SET CONTROL LINES FOR INPUT
	STA TPI1+DDPA
	LDA #$00        ;SET DATA LINES FOR RECIEVE
	STA CIA+DDRA
	BEQ SCATN
.SKIP 4
;
;        BUFFERED OUTPUT TO IEEE-488
;
;IOUT PHA ;SAVE DATA
;
;LDA C3PO ;GET IEEE FLAGS
;BPL CI1 ;IF NO DATA IN BUFFER
;        BUFFERED OUTPUT TO IEEE-488
;       
CIOUT	PHA             ;SAVE DATA
	LDA C3PO        ;GET IEEE FLAGS
	BPL CI1         ;IF NO DATA IN BUFFER
	LDA BSOUR       ;GET DATA IN BUFFER
	JSR TBYTE       ;TRANSMIT BYTE
	LDA C3PO        ;GET IEEE FLAGS
;
CI1	ORA #DIBF       ;SET DATA IN BUFFER FLAG
	STA C3PO
;
	PLA             ;GET NEW DATA
	STA BSOUR
	RTS
.SKIP 4
;        SEND UNTALK COMMAND ON IE
;       
UNTLK
	LDA #UTLKR      ;UNTALK COMMAND
	BNE UNLS1       ;ALWAYS
.SKIP 4
;        SEND UNLISTEN COMMAND ON IEEE-488
;       
UNLSN	LDA #ULSTN      ;UNLISTEN COMMAND
UNLS1	JSR LIST1       ;SEND IT
	JSR TKATN       ;SET FOR RECIEVE
	JMP SCAT1       ;UNLOCK KEY SCAN
;
.SKIP 4
;        TBYTE -- OUTPUT BYTE ONTO IEEE BUS.
;       
;        ENTRY A = DATA BYTE TO BE OUTPUT.
;       
;        USES A REGISTER.
;        1 BYTE OF STACK SPACE.
;       
TBYTE
	EOR #$FF        ;COMPLIMENT DATA
	STA CIA+PRA
;
	LDA TPI1+PA
	ORA #DAV+TE     ;SAY DATA NOT VALID, TE=DATA OUT
	STA TPI1+PA
;       
	BIT TPI1+PA     ;TEST NRFD & NDAC IN HIGH STATE
	BVC TBY2        ;EITHER NRFD OR NDAC LOW => OK
	BPL TBY2
;       
TBY1	LDA #NODEV      ;SET NO-DEVICE BIT IN STATUS
	JSR UDST
	BNE TBY7        ;ALWAYS EXIT
;       
TBY2	LDA TPI1+PA
	BPL TBY2        ;IF NRFD IS HIGH
;       
	AND #$FF-DAV
	STA TPI1+PA
;       
TBY3	JSR TIMERO      ;SET TIMEOUT
;
TBY4	BIT TPI1+PA
	BVS TBY6        ;IF NDAC HI
	LDA CIA+ICR
	AND #$02        ;TIMER B POSISTION (CIA)
	BEQ TBY4        ;IF NO TIMEOUT
	LDA TIMOUT      ;TIMEOUT SELECTION FLAG
	BMI TBY3        ;NO - LOOP
;       
TBY5	LDA #TOOUT      ;SET TIMEOUT ON OUTPUT IN STATUS
	JSR UDST        ;UPDATE STATUS
;       
TBY6	LDA TPI1+PA     ;RELEASE DAV
	ORA #DAV
	STA TPI1+PA
;       
TBY7	LDA #$FF        ;RELEASE DATA BUS
	STA CIA+PRA     ;* IS THIS PROPER BAD EXIT ***???
	RTS
.SKIP 4
;        RBYTE -- INPUT BYTE FROM IEEE BUS.
;       
;        USES A REGISTER.
;        1 BYTE OF STACK SPACE.
;       
;        EXIT A = INPUT DATA BYTE.
;       
ACPTR	;********************************
RBYTE
	LDA TPI1+PA     ;SET CONTROL LINES
	AND #$FF-TE-NDAC ;PULL NDAC LOW, TE=DATA IN
	ORA #NRFD+DC    ;SAY READ FOR DATA
	STA TPI1+PA
;
RBY1	JSR TIMERO
;       
RBY2	LDA TPI1+PA     ;GET IEEE CONTROL LINES
	AND #DAV
	BEQ RBY4        ;IF DATA AVAILABLE
	LDA CIA+ICR
	AND #$02        ;TIMER B (CIA)
	BEQ RBY2        ;IF NOT TIMED OUT
	LDA TIMOUT      ;GET TIMEOUT FLAG
	BMI RBY1        ;LOOP
;       
RBY3	LDA #TOIN       ;SET TIMEOUT ON INPUT IN STATUS
	JSR UDST
	LDA TPI1+PA
	AND #$FF-NRFD-NDAC-TE ;NRFD & NDAC LO ON ERROR
	STA TPI1+PA
	LDA #CR         ;RETURN NULL INPUT
	RTS
.SKIP 2
RBY4
	LDA TPI1+PA     ;SAY NOT READ FOR DATA
	AND #$FF-NRFD
	STA TPI1+PA
	AND #EOI
	BNE RBY5        ;IF NOT EOI
	LDA #EOIST      ;SET EOI IN STATUS
	JSR UDST
;       
RBY5	LDA CIA+PRA     ;GET DATA
	EOR #$FF
;       
RBY6	PHA             ;SAVE DATA
	LDA TPI1+PA     ;SAY DATA ACCEPTED
	ORA #NDAC
	STA TPI1+PA
;       
RBY7	LDA TPI1+PA     ;GET IEEE CONTROL LINES
	AND #DAV
	BEQ RBY7        ;IF DAV HIGH
;       
	LDA TPI1+PA     ;SAY DAT NOT ACCPTED
	AND #$FF-NDAC
	STA TPI1+PA
	PLA             ;RETURN DATA IN A
	RTS
;
; SET UP FOR TIMEOUT (6526)
;
TIMERO	LDA #$FF        ;SET  TIMER
	STA CIA+TBHI
	LDA #$19        ;TURN ON TIMER
	STA CIA+CRB
	LDA CIA+ICR     ;CLEAR INTERRUPT
	RTS
.END
