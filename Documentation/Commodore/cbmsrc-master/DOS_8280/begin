.PAGE 'BEGIN DOS'
BEGIN
	LDX #$FF
	TXS             ; INITIALIZE STACK
	LDA PBD2
	AND #255-ERRLED-LED0-LED1
	STA PBD2        ; TURN LEDS OFF
	LDA PBD2        ; COMPUTE PRIMARY ADDR
	AND #7
	ORA #$48        ; TALK ADDRESS
	STA TLKADR
	EOR #$60        ; LISTEN ADDRESS
	STA LSNADR
;
; INITIALIZE BUFFER POINTER TABLE
;
INTTAB
	LDX #0
	LDY #0
INTT1
	LDA #0
	STA BUFTAB,X
	INX
	LDA BUFIND,Y
	STA BUFTAB,X
	INX
	INY
	CPY #BFCNT+2
	BNE INTT1
	LDA #<CMDBUF    ; SET POINTER TO COMMAND BUFFER
	STA BUFTAB,X
	INX
	LDA #>CMDBUF
	STA BUFTAB,X
	INX
	LDA #<ERRBUF    ; SET POINTER TO ERROR BUFFER
	STA BUFTAB,X
	INX
	LDA #>ERRBUF
	STA BUFTAB,X
	LDA #$FF
	LDX #MAXSA
DSKIN1
	STA LINTAB,X
	DEX
	BPL DSKIN1
	LDX #MXCHNS-1
DSKIN2
	STA BUF0,X      ; SET BUFFERS AS UNUSED
	STA BUF1,X
	STA SS,X
	DEX
	BPL DSKIN2
	LDA #BFCNT+2    ; SET BUFFER POINTERS
	STA BUF0+CMDCHN
	LDA #BFCNT+3
	STA BUF0+ERRCHN
	LDA #ERRCHN
	STA LINTAB+ERRSA
	LDA #CMDCHN+$80
	STA LINTAB+CMDSA
	LDA #LXINT      ; LINDX 0 TO 5 FREE
	STA LINUSE
	LDA #RDYLST
	STA CHNRDY+CMDCHN
	LDA #RDYTLK
	STA CHNRDY+ERRCHN
	LDA #0
	STA BUFUSE
	LDA #$F0
	STA BUFUSE+1
	JSR USRINT      ; INITIALIZE USER JUMP TABLE
	LDA #0
	STA RESULT+1
	STA RESULT+2
	LDA SECTRS
	STA RESULT
	LDA #8
	JSR DIV006+2
	LDA ACCUM+1
	BEQ DSKIN3
	INC RESULT
DSKIN3
	INC RESULT
	LDA RESULT
	STA BAMSIZ      ; BAMSIZ = (SECTRS/8)+1
	LDX HEADS
	LDA #0
	CLC
DSKIN4
	ADC BAMSIZ
	DEX
	BNE DSKIN4
	STA BTSIZE      ; BTSIZE = HEADS*BAMSIZ
	LDX HEADS
	LDA #0
	CLC
DSKIN5
	ADC SECTRS
	DEX
	BNE DSKIN5
	STA MAXCYL      ; MAXCYL = HEADS*SECTRS
	LDA #0
	STA RESULT+1
	STA RESULT+2
	LDA #250
	STA RESULT
	LDA BTSIZE
	JSR DIV006+2
	LDA ACCUM+1
	CLC
	ADC #6
	STA MAPOFF      ; MAPOFF = REMAINDER(250/BTSIZE)+6
	LDA RESULT
	STA TRKBAM      ; TRKBAM = INT(250/BTSIZE)
	LDX CYLLOW
	INX
	STX MAXTRK
	LDA #'A
	STA VERNUM
	LDA #1
	STA WPSW
	STA WPSW+1      ; POWER UP INIT FLAG
;
; SET INDIRECT VECTORS
;
	LDA #<DIAGOK
	STA VNMI
	LDA #>DIAGOK
	STA VNMI+1
	LDA #10         ; SET UP SECTOR ALLOCATE
	STA SECINC
	STA RETRY
	STA REVCNT      ; SET UP RECOVERY COUNT
;
; SET VECTORS TO IDLE LOOP AND IEEE
;
	LDA #<VIDLE
	STA VECIDL
	LDA #>VIDLE
	STA VECIDL+1
	LDA #<VIEEE
	STA VECIEE
	LDA #>VIEEE
	STA VECIEE+1
;
; SET UP POWER UP MESSAGE
;
MESAGE
	LDA #CBMVER     ; DOS VERSION NUMBER
	JSR ERRTS0      ; TRANSFER MESSAGE
;
; ALLOW 'ATN' TO INTERRUPT
;
	STA ATNPE
	JMP BOOT        ; CHECK POWER UP BOOT
;
; MUST BE CONTIGUOUS TO IDLE ROUTINE
;
.END
