.PAGE 'LOOKUP-OPTSCH'
;
; OPTSCH: OPTIMAL SEARCH FOR LOOKUP
; AND FNDFIL
;
OPTSCH
	LDA #0          ; DETERMINE OPTIMAL SEARCH
	STA TEMP        ; INIT DRIVE MASK
	STA DRVFLG
	PHA
	LDX F2CNT
OS10
	PLA
	ORA TEMP
	PHA
	LDA #1
	STA TEMP
	DEX
	BMI OS30
	LDA FILDRV,X
	BPL OS15
	ASL TEMP
	ASL TEMP
OS15
	LSR A
	BCC OS10
	ASL TEMP
	BNE OS10        ; JUMP
OS30
	PLA
	TAX
	LDA SCHTBL-1,X
	PHA
	AND #3
	STA DRVCNT
	PLA
	ASL A
	BPL OS40
	LDA FILDRV
OS35
	AND #1
	STA DRVNUM
	LDA DRVCNT
	BEQ OS60        ; ONLY 1 DRIVE ADDRESSED
	JSR AUTOI       ; CHECK FOR AUTO INIT
	BEQ OS50        ; DRIVE IS ACTIVE
	JSR TOGDRV
	LDA #0          ; SET 1 DRIVE ADDRESSED
	STA DRVCNT
	JSR AUTOI       ; CHECK FOR AUTO INIT
	BEQ OS70        ; DRIVE IS ACTIVE
OS45
	LDA #NODRIV
	JSR CMDERR      ; NO DRIVE ERROR
OS50
	JSR TOGDRV
	JSR AUTOI
	PHP
	JSR TOGDRV
	PLP
	BEQ OS70
	LDA #0
	STA DRVCNT      ; SET 1 DRIVE ADDRESSED
	BEQ OS70        ; JUMP
OS60
	JSR AUTOI
	BNE OS45        ; DRIVE NOT ACTIVE
OS70
	JMP SETLDS
OS40
	ROL A
	JMP OS35
;
SCHTBL
	.BYTE 0,$80,$41
	.BYTE 1,1,1,1
	.BYTE $81,$81,$81,$81
	.BYTE $42,$42,$42,$42
.PAGE 'LOOKUP/FNDFIL'
;
; LOOK UP ALL FILES IN STREAM
; AND FILL TABLES W/INFO
;
LOOKUP
	JSR OPTSCH
LK05
	LDA #0
	STA DELIND
	JSR SRCHST      ; START SEARCH
	BNE LK25
LK10
	DEC DRVCNT
	BPL LK15
	RTS             ; NO MORE DRIVE SEARCHES
LK15
	LDA #1          ; TOGGLE DRIVE #
	STA DRVFLG
	JSR TOGDRV
	JSR SETLDS      ; TURN ON LED
	JMP LK05
LK20
	JSR SEARCH      ; FIND VALID FILE NAME
	BEQ LK30        ; END OF SEARCH
LK25
	JSR COMPAR      ; COMPARE DIR W/TABLE
	LDA FOUND       ; FOUND FLAG
	BEQ LK26        ; ALL NAME'S NOT FOUND, YET
	RTS
LK26
	LDA ENTFND
	BMI LK20
	BPL LK25
LK30
	LDA FOUND
	BEQ LK10
	RTS
;
; FIND NEXT FILE NAME MATCHING
; ANY FILE IN STREAM & RETURN
; WITH ENTRY FOUND STUFFED INTO
; TABLES
;
FFRE
	JSR SRRE        ; FIND FILE RE-ENTRY
	BEQ FF10
	BNE FF25
FF15
	LDA #1
	STA DRVFLG
	JSR TOGDRV
	JSR SETLDS
FFST
	LDA #0          ; FIND FILE START ENTRY
	STA DELIND
	JSR SRCHST
	BNE FF25
	STA FOUND
FF10
	LDA FOUND
	BNE FF40
	DEC DRVCNT
	BPL FF15
	RTS
FNDFIL
	JSR SEARCH      ; FIND FILE CONTINUOUS...
	BEQ FF10        ; ... RE-ENTRY
FF25
	JSR COMPAR      ; COMPARE FILE NAMES
	LDX ENTFND
	BPL FF30
	LDA FOUND
	BEQ FNDFIL
	BNE FF40
FF30
	LDA TYPFLG
	BEQ FF40        ; NO TYPE RESTRICTION
	LDA PATTYP,X
	AND #TYPMSK
	CMP TYPFLG
	BNE FNDFIL
FF40
	RTS
.PAGE 'LOOKUP-COMPAR'
;
; COMPARE ALL FILENAMES IN STREAM TABLE
; WITH EACH VALID ENTRY IN THE
; DIRECTORY.  MATCHES ARE TABULATED
;
COMPAR
	LDX #$FF
	STX ENTFND
	INX
	STX PATFLG
	JSR CMPCHK
	BEQ CP10
CP02
	RTS             ; ALL ARE FOUND
CP05
	JSR CC10
	BNE CP02
CP10
	LDA DRVNUM
	EOR FILDRV,X
	LSR A
	BCC CP20        ; RIGHT DRIVE
	AND #$40
	BEQ CP05        ; NO DEFAULT
	LDA #2
	CMP DRVCNT
	BEQ CP05        ; DON'T USE DEFAULT
CP20
	LDA FILTBL,X    ; GOOD DRIVE MATCH
	TAX
	JSR FNDLMT
	LDY #3
	JMP CP33
CP30
	LDA CMDBUF,X
	CMP (DIRBUF),Y
	BEQ CP32        ; CHARS ARE EQUAL
	CMP #'?
	BNE CP05        ; NO SINGLE PATTERN
	LDA (DIRBUF),Y
	CMP #$A0
	BEQ CP05        ; END OF FILENAME
CP32
	INX
	INY
CP33
	CPX LIMIT
	BCS CP34        ; END OF PATTERN
	LDA CMDBUF,X
	CMP #'*
	BEQ CP40        ; STAR MATCHES ALL
	BNE CP30        ; KEEP CHECKING
CP34
	CPY #19
	BCS CP40        ; END OF FILENAME
	LDA (DIRBUF),Y
	CMP #$A0
	BNE CP05
CP40
	LDX F2PTR       ; FILENAMES MATCH
	STX ENTFND
	LDA PATTYP,X    ; STORE INFO IN TABLES
	AND #$80
	STA PATFLG
	LDA INDEX
	STA ENTIND,X
	LDA SECTOR
	STA ENTSEC,X
	LDA TRACK
	STA ENTTRK,X
	LDY #0
	LDA (DIRBUF),Y
	INY
	PHA
	AND #$40
	STA TEMP
	PLA
	AND #$FF-$20
	BMI CP42
	ORA #$20
CP42
	AND #$27
	ORA TEMP
	STA TEMP
	LDA #$80
	AND PATTYP,X
	ORA TEMP
	STA PATTYP,X
	LDA FILDRV,X
	AND #$80
	ORA DRVNUM
	STA FILDRV,X
	LDA (DIRBUF),Y
	STA FILTRK,X
	INY
	LDA (DIRBUF),Y
	STA FILSEC,X
	LDA REC
	BNE CMPCHK
	LDY #21
	LDA (DIRBUF),Y
	STA REC
;
; CHECK TABLE FOR UNFOUND FILES
;
CMPCHK
	LDA #$FF
	STA FOUND
	LDA F2CNT
	STA F2PTR
CC10
	DEC F2PTR
	BPL CC15
	RTS             ; TABLE EXHAUSTED
CC15
	LDX F2PTR
	LDA PATTYP,X
	BMI CC20
	LDA FILTRK,X
	BNE CC10
CC20
	LDA #0
	STA FOUND
	RTS
.PAGE 'LOOKUP-SEARCH'
;
; SEARCH DIRECTORY
;
; RETURNS WITH VALID ENTRY W/DELIND = 0
; OR RETURNS W/1ST DELETED ENTRY
; W/DELIND = 1
;
; SRCHST WILL INITIATE A SEARCH
; SEARCH WILL CONTINUE A SEARCH
;
SRCHST
	JSR AUTOI
	LDY #0          ; INIT DELETED SECTOR
	STY DELSEC
	STY DELENT      ; INIT DELETED ENTRY
	DEY
	STY ENTFND
	LDX DRVNUM
	LDA DSTRK,X     ; START SEARCH AT BEGINNING
	STA TRACK
	LDA DSSEC,X
	STA SECTOR
	LDA #$FF
	STA LSTBUF
	JSR OPNIRD      ; OPEN INTERNAL READ CHNL
SR10
	LDA LSTBUF      ; LAST BUFFER IF 0
	BNE SR15
	RTS             ; (.Z = 1)
SR15
	LDA #7
	STA FILCNT
	LDA #0          ; READ TRACK #
	JSR DRDBYT
	STA LSTBUF      ; UPDATE END FLAG
SR20
	JSR GETPNT
	DEC FILCNT
	LDY #0
	LDA (DIRBUF),Y  ; READ FILE TYPE
	BNE SR30
	LDA DELENT      ; DELETED ENTRY FOUND?
	BNE SEARCH      ; DELETED ENTRY ALREADY FOUND
	JSR CURBLK      ; GET CURRENT SECTOR
	LDA SECTOR
	STA DELSEC
	LDA #$FF
	STA DELENT
	LDA TRACK
	STA DELTRK
	LDA DIRBUF      ; GET CURRENT INDEX
	LDX DELIND      ; BIT1: WANT DELETED ENTRY
	STA DELIND
	BEQ SEARCH      ; NEED VALID ENTRY
	RTS             ; (.Z = 0)
SR30
	LDX #1
	CPX DELIND      ; LOOKING FOR DELETED?
	BNE SR50        ; NO!
	BEQ SEARCH
SRRE
	LDA DIRTRK
	STA TRACK
	LDA DIRSEC
	STA SECTOR
	JSR OPNIRD
	LDA INDEX
	JSR SETPNT
SEARCH
	LDA #$FF
	STA ENTFND
	LDA FILCNT      ; ADJUST FILE COUNT
	BMI SR40
	LDA #32         ; INCR BY 32
	JSR INCPTR
	JMP SR20
SR40
	JSR NXTBUF      ; NEW BUFFER
	JMP SR10
SR50
	LDA DIRBUF      ; FOUND VALID ENTRY
	STA INDEX       ; SAVE INDEX
	JSR CURBLK      ; GET SECTOR
	LDA SECTOR
	STA DIRSEC
	LDA TRACK
	STA DIRTRK
	RTS             ; (.Z = 0)
JAUTOI	; AUTO-INIT SECTION
	LDA AUTOFG
	BNE AUTO2       ; CHECK DISABLE FLAG
	LDX DRVNUM
	LSR WPSW,X      ; TEST & CLEAR FLAG
	BCC AUTO2
	LDA #$FF
	STA JOBRTN      ; SET ERROR RETURN CODE
	JSR ITRIAL      ; INIT SEEK-TEST
	LDY #$FF
	CMP #2
	BEQ AUTO1       ; NO SYNC = NO DISKETTE
	CMP #3
	BEQ AUTO1       ; NO HEADER = NO DIRECTORY
	LDY #00
AUTO1
	LDX DRVNUM
	TYA
	STA NODRV,X     ; SET CONDITION OF NO DRIVE
	BNE AUTO2
	JSR INITDR
AUTO2
	LDX DRVNUM
	LDA NODRV,X
	RTS             ; RETURN NO DRIVE STATUS
.END
