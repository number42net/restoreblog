.PAGE 'UTLODR'
;
; UTILITY LOADER
;
BOOT2
	LDA #DAVO+EOIO+RFDO
	STA PAD2
	JMP IDLE        ; GOTO THE IDLE LOOP
BOOT
	LDA IEEEDI      ; CHECK DATA BUS
	BNE BOOT2       ; NOT ZERO
;
; CHECK DAV & NRFD TIED
;
	LDA PAD2
	ORA #DAVO       ; DAV = 1
	STA PAD2
	LDA PBD2
	AND #NRFDI
	BEQ BOOT2       ; NRFD = 0
	LDA PAD2
	AND #$FF-DAVO
	STA PAD2        ; DAV = 0
	LDA PBD2
	AND #NRFDI
	BNE BOOT2       ; NRFD = 1
;
; BOOT CLIP MUST BE ON
;
BOOT3
	LDA IEEEDI
	BEQ BOOT3       ; WAIT TIL IT'S OFF
	INC F2CNT       ; SET # FILES
	INC CMDSIZ      ; SET # OF CHARS
	LDA #'*
	STA CMDBUF      ; SET FILENAME FOR ANY MATCH
	LDA #DAVO+EOIO+RFDO
	STA PAD2
	BNE BOOT4       ; BRANCH ALWAYS
;
; ENTRY POINT
;
UTLODR
	LDA #$8D        ; SHIFTED CR
	JSR PARSE
BOOT4
	LDA F2CNT
	PHA             ; SAVE FILE COUNT FOR UTILITY
	LDA #1
	STA F2CNT
	LDA #$FF        ; INIT FIRSTBYTE FLAG
	STA R0          ; R0 IS FLAG
	JSR LOOKUP      ; LOCATE FILENAME ON DISK
	LDA FILTRK      ; CHECK IF FOUND, ERR IF NOT
	BNE UTLD00
	LDA #NOCFIL
	JSR CMDERR
UTLD00
	PLA
	STA F2CNT       ; RESTORE FILE COUNT
	LDA FILTRK      ; INIT TRACK, SECTOR FOR OPEN
	STA TRACK
	LDA FILSEC
	STA SECTOR
	LDA #USRTYP     ; OPEN SYSTEM TYPE FILE(5)
	JSR OPNTYP      ; OPEN
;
; FILE RECORD FETCH LOOP
;
UTLD10
	LDA #0          ; INIT CHECKSUM
	STA R1          ; CALC CHKSUM RESIDES IN R1
	JSR GTABYT      ; FETCH LOAD ADDRESS LO
	STA R2
	JSR ADDSUM      ; ADD INTO CHECKSUM
	JSR GTABYT      ; FETCH LOAD ADDRESS HI
	STA R3
	JSR ADDSUM
	LDA R0          ; IS THIS THE FIRST BYTE ADDRESS?
	BEQ UTLD20      ; BR IF NOT
	LDA R2          ; SAVE AWAY THIS ADDR IN  STACK
	PHA             ; LO FIRST
	LDA R3
	PHA             ; HI NEXT
	LDA #0          ; CLEAR FLAG
	STA R0          ; FIRST BYTE FLAG
UTLD20
	JSR GTABYT      ; FETCH DATA BYTE COUNT
	STA R4          ; SAVE IN R4
	JSR ADDSUM      ; ADD DATA BYTE COUNT
;
; BYTE STORE LOOP
;
UTLD30
	JSR GTABYT      ; FETCH DATA BYTE
	LDY #0          ; INIT INDEX
	STA (R2),Y      ; STORE BYTE AT DESIRED ADDRESS
	JSR ADDSUM      ; ADD INTO CHECKSUM
	LDA R2          ; POINTER = POINTER+1
	CLC
	ADC #1
	STA R2
	BCC UTLD35
	INC R3          ; ADD IN CARRY
UTLD35
	DEC R4          ; UPDATE BYTE COUNTER
	BNE UTLD30      ; IF NONZERO, CONTINUE
;
; END OF BYTE STORE LOOP
;
	JSR GIBYTE      ; GET A BYTE WITHOUT CHECK FOR EOI
	LDA DATA
	CMP R1          ; LAST BYTE FETCHED WAS CHKSUM
	BEQ UTLD50      ; IF SAME...EVERYTHING OK
	JSR SETHDR      ; SET UP TRACK AND SECTOR
	LDA #NOREC      ; SHOW RECORD OVERFLOW
	JSR CMDER2      ; AND LEAVE TO ERROR EXIT
UTLD50
	LDA EOIFLG      ; CHECK FOR END OF FILE
	BNE UTLD10      ; IF NONZERO, NOT DONE
;
; END OF RECORD LOAD LOOP
;
	PLA             ; XFER CNTRL TO 1ST BYTE ADDR.
	STA R3
	PLA
	STA R2
	JMP (R2)
.PAG
;
; LOCAL ROUTINES USED BY UTLODR
;
GTABYT
	JSR GIBYTE      ; FETCH A BYTE TO DATA LOC
	LDA EOIFLG      ; CHECK IF EOF EXISTS
	BNE GTABYE      ; OK IF NONZERO
	JSR SETHDR      ; SET UP TRACK AND SECTOR
	LDA #RECOVF     ; RECORD SIZE ERROR
	JSR CMDER2      ; CALL ERROR ROUTINE
GTABYE
	LDA DATA
	RTS
ADDSUM
	CLC
	ADC R1          ; .A = .A+R1
	ADC #0          ; .A = .A+CARRY
	STA R1          ; SAVE NEW CHECKSUM
	RTS
.END
