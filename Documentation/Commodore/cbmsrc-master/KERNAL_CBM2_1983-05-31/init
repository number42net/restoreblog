.PAG 'INIT 05/02/83'
;------------------------------------------------
; START - SYSTEM RESET ROUTINE
;  KERNAL CHECKS ON 4K BOUNDRIES FROM $1000-$8000
;    FIRST OCCURANCE HAS PRIORITY.
;    IF NO OCCURANCE THEN $E000 IS USED FOR VECTOR
;    $E000 => MONITOR START
;  KERNAL EXPECTS:
;    $X000 - JMP INIT  (COLD START)
;    $X003 - JMP WINIT (WARM START)
;    $X006 - 'C'(+$80)=> KERNAL COLD START FIRST
;    $X007 - 'B'+$80
;    $X008 - 'M'+$80
;    $X009 - 'X'  X=4K BANK (1-8)
;
;------------------------------------------------
.SKI 1
PATALL	.BYT  $C2,$CD   ;$X004 ROM PATTERN
.SKI 1
START	LDX #$FE        ;DO ALL NORMAL JUNK...
	SEI
	TXS
	CLD
;
; CHECK FOR WARM START
;
	LDA #WARM       ;LOAD UP BITS THAT SHOW WARM
	CMP EVECT+2     ;CHECK WARM FLAG
	BNE SCOLD
	LDA EVECT+3     ;CHECK COMPLETE FLAG
	CMP #WINIT
	BEQ SWARM       ;GOOD...DO WARM START
;
; CHECK FOR ROMS
;
SCOLD	LDA #6          ;SET UP INDIRECT
	STA EAL
	LDA #0          ;CLEAR UPPER
	STA EAH
	STA EVECT+0     ;SET LOW BYTE OF VECTOR
	LDX #$30        ;EXISTANCE FLAG
SLOOP0	LDY #3          ;GO AROUND TEST LOOP
	LDA EAH
	BMI SLOOP2      ;NO ROMS BUT THIS ONE...
	CLC             ;CALC NEW TEST POINT
	ADC #$10        ;4K STEPS
	STA EAH
	INX
	TXA
	CMP (EAL)Y
	BNE SLOOP0      ;DIDN'T MATCH 'X'...
	DEY
SLOOP1	LDA (EAL)Y
	DEY
	BMI SLOOP3      ;ALL DONE...CORRECTLY
	CMP PATALL,Y
	BEQ SLOOP1
	BNE SLOOP0      ;NO GOOD...
;
; MONITOR (COULD BE TEST FOR KEYDOWN ***)
;
SLOOP2	LDY #$E0        ;MONITOR VECTOR
	.BYTE $2C       ;SKIP TWO BYTES
SLOOP3	LDY EAH
STARHI	STY EVECT+1     ;SET HIGH BYTE OF VECTOR
;
	TAX             ;SET FLAGS
	BPL SWARM       ;DON'T USE KERNAL INITILIZATION
;
; KERNAL COLD START
;
SKERNL	JSR IOINIT      ;INITILIZE I/O
	LDA #$F0        ;PREVENT DAMAGE TO NON-TESTED BUFFERS
	STA PKYBUF+1
	JSR CINT        ; CINIT CALL FOR NON-CLEARED SYSTEM
	JSR RAMTAS      ;RAM TEST AND SET
	JSR RESTOR      ;OPERATIONG SYSTEM VECTORS
	JSR CINT        ;SCREEN EDITOR INITILIZATION
	LDA #WARM       ;KERNAL INITILIZE DONE FLAG
	STA EVECT+2
SWARM	JMP (EVECT)     ;START EXIT
.PAGE 'INIT - I/O'
;-----------------------------------------
; IOINIT - INITILIZE I/O SYSTEM
;   6509/6525/6525/6526
;   MUST BE ENTERED WITH IRQ'S DISABLED
;------------------------------------------
IOINIT
;
; 6509 INITILIZATION CODE
;   SEE PAGE 2 FOR ASSIGNMENTS
;   DONE BY RESET
;
;
; 6525 TPI1 INITILIZATION CODE
;   SEE PAGE 12 FOR ASSIGNMENTS
;
	LDA #%11110011  ;CB,CA=HI IE3,4=NEG IP=1 MC=1
	STA TPI1+CREG
	LDY #$FF        ;MASK ON ALL IRQ'S
	STY TPI1+DDPC
;     PB4=OUTPUT 1, TO CLAIM DBUS
	LDA #%01011100  ;WRT=LO UNUSED NETR=OFF
	STA TPI1+PB     ;NETW=OFF IFC=LO (MUST TURN OFF !!!)
	LDA #%01111101  ;SET DIRECTIONS
	STA TPI1+DDPB
;
	LDA #%00111101  ;IEEE CONTROLS OFF
	STA TPI1+PA
	LDA #%00111111  ;IEEE CONTROL TO TRANSMITT
	STA TPI1+DDPA   ;DATA TO RECEIVE
;
; 6525 TPI2 INITILIZATION CODE
;   SEE PAGE 13 FOR ASSIGNMENTS
;
; .Y = $FF FROM ABOVE
	STY TPI2+PA     ;SET UP KEYBOARD OUTPUTS
	STY TPI1+PB
	STY TPI2+DDPA
	STY TPI2+DDPB
	LSR TPI2+PA     ;TURN STOP KEY LINE ON ***
	.IFN SYSTEM <
	LDA #$C0        ;SET UP VIC SELECTS=OUT FOR P-SERIES
>
	.IFE SYSTEM <
	INY             ;.Y=0 SET UP VIC SELECTS=IN FOR SYSTEM JUMPERS
>
	STY TPI2+PC
	STY TPI2+DDPC   ; KEYBOARD=IN (0-5)
;
; 6526 CIA INITILIZATION CODE
;   SEE PAGE 10 FOR ASSIGNMENTS
;
	LDA #$7F        ;TURN OFF ALL IRQ SOURCES FROM 6526...
	STA CIA+ICR
; .Y =$00 FROM ABOVE
	STY CIA+DDRA    ;ALL IEEE IN / TRIGGERS 14,24 ALSO
	STY CIA+DDRB    ;SAME FOR GAME INPUTS 10-13,20-23
	STY CIA+CRB     ;WRITE TOD   TIMER B=OFF
; ACTIVATE TOD
;
	STA CIA+TOD10
;
; 60/50 HZ TEST CODE FOR TOD
;
	STY TPI1+PC
IO100	LDA TPI1+PC     ;WAIT UNTILL IT HAPPENS AGAIN
	ROR A
	BCC IO100       ;PC0 = 1 -> 50/60HZ IRQ
	STY TPI1+PC     ;CLEAR IT AGAIN
;
; START A TIMMER
;
	LDX #0          ;.Y=$00 FROM ABOVE
IO110	INX
	BNE IO110
	INY
	LDA TPI1+PC
	ROR A
	BCC IO110       ;PC0 = 1 -> 50/60HZ IRQ
;
	CPY #ID55HZ
	BCC IO120       ;IT WAS 60 HZ
	LDA #%10001000  ;SET FOR 50HZ
	.BYT $2C        ;SKIP TWO BYTES
IO120	LDA #%00001000
	STA CIA+CRA
;
; 6526  INTER-PROCESS COMMUNICATION INITIALIZATION
;       PRA = DATA PORT
;       PRB = IPC LINES
;       IRQ'S FROM 2ND PROCESSOR VIA FLAG INPUT
;
	LDA IPCIA+ICR   ;CLEAR ICR
	LDA #$90
	STA IPCIA+ICR   ;FLAG IRQS ON
	LDA #$40
	STA IPCIA+PRB   ;NO NMI TO Z80, SEM6509 LOW
;.X =$00 FROM ABOVE
	STX IPCIA+DDRA  ;PORT A=INPUT
	STX IPCIA+CRB   ;TIMER B OFF
	STX IPCIA+CRA   ;TIMER A OFF
	LDA #%01001000  ;PORT B LINES SEM65,ENNMI ARE OUTS
	STA IPCIA+DDRB
;
;
; 6551 INITILIZATION CODE
;   SEE PAGE 11 FOR ASSIGNMENTS
;   HANDLED BY RESET  10/19/81 RSR
;
; TURN OFF IFC
;
	LDA #IFC
	ORA TPI1+PB
	STA TPI1+PB
	RTS
.PAGE 'INIT - RAMTAS'
;-----------------------------------------
; RAMTAS - INITILIZE LOWER RAM WITH $00
;  AND TEST ALL SYSTEM DYNAMIC RAM
;  SET RAM LIMITS (64K BANK MIN SIZE)
;  ALLOCATE INITIAL BUFFER SPACE
;  TURN OFF RS232 AND CASSETTE BUFFERS
;  RESET XTAPE VECTORS TO NON-CASSETTE
;
;-----------------------------------------
RAMTAS
; CLEAR $0002-$0101 AND $0200-$03F7
;
	LDA #0
	TAX
PX1	.BYT $9D        ;STA $0002,X
	.WOR $0002
	STA $200,X
	STA $300-8,X
	INX
	BNE PX1
.SKIP 3
;
;MEMORY SIZE CHECK
;
	.IFE SYSTEM <
	LDA #1          ;BOTTOM OF MEMORY ALWAYS SEGMENT 1
>
	.IFN SYSTEM <
	LDA #0          ;BOTTOM OF MEMORY ALWAYS SEGMENT 0
>
	STA I6509
	STA MEMSTR+2    ;SET BOTTOM OF MEMORY
	STA LOWADR+2
	LDA #2
	STA MEMSTR
	STA LOWADR
	DEC I6509       ;PLACE BACK ONE SEGMENT FOR TEST
;
; MEMSIZ,SAL,LOWADR ARE ZEROED ABOVE
;
SIZLOP	INC I6509       ;CLACULATE NEXT IND SEG
	LDA I6509
	CMP #15         ;ALL SLOTS FULL...EXIT
	BEQ SIZE
	LDY #2          ;ALWAYS START AT $0002
SIZ100
	LDA (SAL)Y
	TAX
	LDA #$55
	STA (SAL)Y
	LDA (SAL)Y
	CMP #$55
	BNE SIZE
	ASL A
	STA (SAL)Y
	LDA (SAL)Y
	CMP #$AA
	BNE SIZE
	TXA
	STA (SAL)Y
	INY
	BNE SIZ100
	INC SAL+1
	BNE SIZ100
	BEQ SIZLOP
;
; SET TOP OF MEMORY
;
SIZE	LDX I6509       ;SEG NUMBER OF FAILURE
	DEX             ;BACK UP ONE SEGMENT
	TXA             ;.A= SEG#
	LDX #$FF
	LDY #$FD        ;RESERVE TOP PAGE FOR SWAPPING SYSTEM
	STA HIADR+2     ;SET SYSTEM TOP OF MEMORY
	STY HIADR+1
	STX HIADR
;
; ALLOCATE 3 PAGES (512FUNCS,256RS232)
;
	LDY #$FD-3
	CLC
	JSR MEMTOP      ;SET USER TOP OF MEMORY
;
; FLAG BUFFERS AS NOT ASSIGNED =>$FF
;
	DEC RIBUF+2
	DEC TAPE1+2
	.IFE SYSAGE <
	LDA #<NOCASS    ;SET UP CASSETTE INDIRECTS
	STA ITAPE
	LDA #>NOCASS
	STA ITAPE+1
>
	RTS
.PAGE 'INIT - KERNAL'
.SKI 5
JMPTAB	.WOR YIRQ       ;CINV
	.WOR TIMB       ;CBINV....BRK GOES TO MONITOR
	.WOR PANIC      ;NO.....NMINV !!!!!
	.WOR NOPEN      ;OPEN FILE
	.WOR NCLOSE     ;CLOSE FILE
	.WOR NCHKIN     ;OPEN CHANNEL IN
	.WOR NCKOUT     ;OPEN CHANNEL OUT
	.WOR NCLRCH     ;CLOSE CHANNEL
	.WOR NBASIN     ;INPUT FROM CHANNEL
	.WOR NBSOUT     ;OUTPUT TO CHANNEL
	.WOR NSTOP      ;SCAN STOP KEY
	.WOR NGETIN     ;SCAN KEYBOARD
	.WOR NCLALL     ;CLOSE ALL FILES
	.WOR NLOAD      ;LOAD FROM FILE
	.WOR NSAVE      ;SAVE TO FILE
	.WOR S0         ;MONITOR COMMAND PARSER
	.WOR ESCRTS     ;ESC KEY VECTOR
	.WOR ESCRTS     ;USER CTRL KEY VECTOR
	.WOR NSECND     ;IEEE LISTEN SECONDARY ADDRESS
	.WOR NTKSA      ;IEEE TALK SECONDARY ADDRESS
	.WOR NACPTR     ;IEEE CHARACTER IN
	.WOR NCIOUT     ;IEEE CHARACTER OUT
	.WOR NUNTLK     ;IEEE UNTALK BUS
	.WOR NUNLSN     ;IEEE UNLISTEN BUS
	.WOR NLISTN     ;IEEE LISTEN A DEVICE
	.WOR NTALK      ;IEEE TALK TO A DEVICE
TABEND
NMI	JMP (NMINV)
.SKI 5
; .A = FILENAME LENGTH
; .X = ZERO PAGE LOCATION OF 3 BYTE ADDRESS
;
SETNAM	STA FNLEN
	LDA $00,X
	STA FNADR
	LDA $01,X
	STA FNADR+1
	LDA $02,X
	STA FNADR+2
	RTS
.SKI 5
SETLFS	STA LA
	STX FA
	STY SA
	RTS
.SKI 5
;READ/WRITE STATUS
;
;CARRY SET -- READ DEVICE STATUS INTO .A
;
READST	BCC STORST
	LDA FA          ;SEE WHICH DEVICES' TO READ
	CMP #2
	BNE READSS      ;NOT RS-232
	LDA RSSTAT      ;YES GET IT
	PHA
	LDA #00         ;CLEAR STATUS WHEN READ
	BEQ STATXT      ;JUMP
;
SETMSG	STA MSGFLG
READSS	LDA STATUS
UDST	ORA STATUS
	STA STATUS
	RTS
;
;CARRY CLEAR -- SET DEVICE STATUS WITH .A
;
STORST	PHA
	LDA FA
	CMP #2
	BNE STORSS      ;NOT RS-232
STATXT	PLA
	STA RSSTAT
	RTS
;
STORSS	PLA
	STA STATUS
	RTS
.SKI 5
SETTMO	STA TIMOUT
	RTS
.SKI 5
MEMTOP	BCC SETTOP
;
;CARRY SET--READ TOP OF MEMORY
;
	LDA MEMSIZ+2
	LDX MEMSIZ
	LDY MEMSIZ+1
;
;CARRY CLEAR--SET TOP OF MEMORY
;
SETTOP	STX MEMSIZ
	STY MEMSIZ+1
	STA MEMSIZ+2
	RTS
.SKI 5
;MANAGE BOTTOM OF MEMORY
;
MEMBOT	BCC SETBOT
;
;CARRY SET--READ BOTTOM OF MEMORY
;
	LDA MEMSTR+2
	LDX MEMSTR
	LDY MEMSTR+1
;
;CARRY CLEAR--SET BOTTOM OF MEMORY
;
SETBOT	STX MEMSTR
	STY MEMSTR+1
	STA MEMSTR+2
	RTS
.SKI 5
;RESTORE RAM I/O VECTORS
;
RESTOR	LDX #<JMPTAB
	LDY #>JMPTAB
	LDA #IROM
	CLC
;
;MANAGE RAM I/O VECTORS
;
VECTOR	STX SAL
	STY SAH
	LDX I6509       ;SAVE INDIRECT
	STA I6509
;
	BCC VECT50
;
;CARRY SET--READ VECTORS
;
	LDY #TABEND-JMPTAB-1
VECT20	LDA CINV,Y      ;FROM RAM TABLE
	STA (SAL)Y      ;INTO USER AREA
	DEY
	BPL VECT20
;
;CARRY CLEAR--SET VECTORS
;
VECT50	LDY #TABEND-JMPTAB-1
VECT60	LDA (SAL)Y      ;FROM USER AREA
	STA CINV,Y      ;INTO RAM TABLE
	DEY
	BPL VECT60
;
	STX I6509       ;RESTORE INDIRECT
	RTS
;
; VRESET - RESET VECTOR FLAGS AND CONTROL
;   .X - LOW VECTOR ADDRESS  .Y - HIGH VECTOR ADDRESS
;
VRESET	STX EVECT
	STY EVECT+1
	LDA #WINIT
	STA EVECT+3
	RTS
.END
