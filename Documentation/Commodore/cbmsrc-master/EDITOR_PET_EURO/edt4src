.PAG 'EDT4SRC'
;************************************************
;*         FIFTY HERTZ CLOCK ADJUST             *
;*                                              *
;* THE TIME FUNCTION IN BASIC MULTIPLIES THE    *
;* CONTENTS OF THE JIFFY CLOCK REGISTERS BY 60. *
;* THEREFORE, OPERATION WITH A 50 HERTZ INTER-  *
;* RUPT REQUIRES TWICE INCREMENTING THE JIFFY   *
;* CLOCK ON EACH FIFTH INTERRUPT, BECAUSE :     *
;*         (1/60*5)+(1/60) = 5/50               *
;************************************************
ADJUST	LDA #5+1        ;RESET EVENT COUNT
	STA FIVCNT      ; AND BUMP CLOCK AGAIN
FIFTYH	JSR UDTIM       ;UPDATE TIME REGISTERS
	DEC FIVCNT      ;IS THIS THE FIFTH
	BEQ ADJUST      ;INTERRUPT ? YES, ADJUST
	RTS             ;NO, RETURN
.SKIP 2
	*=BEGIN+$0442
;
; ++++++ MUST START @ $E442 ++++++
;
PULS	PHA             ;IRQ HANDLER
	TXA             ;SAVE REGS.
	PHA
	TYA
	PHA
	TSX
	LDA $104,X
	AND #$10        ;A BREAK ?
	BEQ PULS1       ;NO - THEN DI IRQ
	JMP (CBINV)
PULS1	JMP (CINV)
;
; ++++++ MUST START @ $E455 ++++++
;
KEY	JSR FIFTYH      ;IN 60HZ THIS IS JSR $FFEA
.SKIP 2
SERVCE	LDA BLNSW       ;BLINKING CRSR ?
	BNE KEY4        ;NO
	DEC BLNCT       ;TIME TO BLINK ?
	BNE KEY4        ;NO
	LDA #20         ;RESET BLINK COUNTER
	STA BLNCT
	LDY PNTR
	LSR BLNON
	LDA (PNT),Y     ;GRAB CHAR ON SCREEN
	BCS KEY5        ;SKIP IF NOT ORIGINAL
	INC BLNON       ;SET FLAG GOT ORIGINAL
	STA GDBLN
KEY5	EOR #$80        ;BLINK CRSR
	STA (PNT),Y
KEY4	LDY #0
	LDA PIAL        ;TEST CASSETTE SWITCHES
	ASL A
	ASL A
	ASL A
	BPL KEY3
	STY CAS1
	LDA PIAS        ;CASS #1 MOTOR OFF
	ORA #$08
	BNE KL24
KEY3	LDA CAS1
	BNE KL2
	LDA PIAS        ;CASS #1 MOTOR ON
	AND #$F7
KL24	STA PIAS
KL2	BCC KL23
	STY CAS2
	LDA PIA         ;CASS #2 MOTOR OFF
	ORA #$10
	BNE KL25
KL23	LDA CAS2
	BNE KL26
	LDA PIA         ;CASS #2 MOTOR ON
	AND #$EF
KL25	STA PIA
.SKI 2
KL26	JSR SCNKEY      ;SCAN KEYBOARD AND FILL BUFFER
	JMP PREND       ;EXIT FROM IRQ
;
.SKI 2
;
	*=BEGIN+$04BE
;
; OS-IV COMPATIBLE KEYSCAN ADAPTOR
; ********************************
;
KEYSCN	LDA #$FF        ; CLEAR LAST
	STA OLDKEY      ; KEY TEMP
	LDA KBFPTR      ; SAVE KEYBUFFER
	PHA             ; POINTER
	JSR SCNKEY      ; SCAN KEYBOARD
	PLA             ; RESTORE KEYBUFFER
	CMP KBFPTR      ; POINTER. DID A KEY
	BCC KEYSC2      ; COME IN ? YES
;
	TAX             ; NO.
	LDA OLDKEY      ; NO KEY
	CMP #$FF        ; AT ALL ?
	BEQ KEYSC2      ; YES, GET OUT.
;
	CPX KBFLIM      ; NO. QUEUE FULL ?
	BCS KEYSC1      ; YES.
;
	STA KEYBUF,X    ; NO, STORE "RVS" OR
	INC KBFPTR      ; "STOP" INTO QUEUE
;
KEYSC1	CMP #$03        ; A STOP WITHOUT CONTROL ?
	BNE KEYSC2      ; NO
;
	LDA #$EF        ; YES. CONVERT TO USUAL STOP-
	STA STPFLG      ; CODE AND UPDATE STOPFLAG
;
KEYSC2	RTS             ; ARRIVEDERCI
;
.SKI 2
;
	*=BEGIN+$054E
;
; *********** MUST START AT $E54E **********
;
ACNTON	CMP #$01        ; CTRL A
	BNE CHSONE
;
ACCON1	JSR ACNABL
	BMI JPL8        ; ALWAYS
;
CHSONE	CMP #$02        ; CTRL B
	BEQ ACCON1
;
	BNE TOPSET; ALWAYS
;
ACNTOF	CMP #$01        ; CTRL SHFT A
	BNE CHSTWO
;
	JSR ACDSBL
	JMP LOOP2
;
CHSTWO	CMP #$02        ; CTRL SHFT B
	BNE SCTDWN
;
	JSR TX2CRT
	BMI JPL8
;
.SKI 2
;
; ********** MUST START AT $E570 ************
;
;TAB SET-UP (TAB POSITIONER)
;
GETTAB	LDA PNTR        ;FIND CURSOR POS
	AND #$F8        ;ERASE LOWER BITS
	STA TABPOS
	LSR A           ;DIVIDE BY 8
	LSR A
	LSR A
	TAX             ;LOAD INDEX
	LDA #1          ;SET BIT MASK
	STA BITMSK
	LDY PNTR
TABOK	CPY TABPOS      ;IS TAB BIT AT CURSOR POS?
	BEQ RTSTAB      ;YES => RET
	ASL BITMSK      ;ELSE ROTATE BIT MASK
	INC TABPOS      ;GOTO NXT TABPOS
	JMP TABOK       ;TRY AGAIN
RTSTAB	RTS
;
.SKI 3
; ****** MORE OF PRT ROUTINE ******
SCTUP	CMP #$19        ;A SCROLL UP ?
	BNE ACNTON      ;NO
	JSR SCRUP       ;YES - SCROLL SCREEN UP
	JMP SCTD10
TOPSET	CMP #$0F        ;SET TOP LEFT SCROLL WINDOW ?
	BNE TEXX        ;NO
	LDA TBLX        ;YES - GET PRESENT TOP
	STA SCTOP       ;SET TOP OF WINDOW
	LDA PNTR        ;GET LEFT SIDE
	STA SCLF        ;SET WINDOW LEFT
JPL8	JMP LOOP2
TEXX	CMP #$0E        ;SET TEXT MODE ?
	BNE PBELL       ;NO
	JSR BUSCRT      ;SET FOR TEXT MODE
	BMI JPL8        ;ALWAYS
PBELL	CMP #$07        ;A BELL ?
	BNE JPL8        ;NO
	JSR BELL        ;RING BELL
	BEQ JPL8        ;ALWAYS
ILINE	CMP #$15        ;INSERT A LINE ?
	BNE ACNTOF      ;NO
	LDA SCTOP       ;SAVE SCREEN TOP
	PHA
	LDA TBLX        ;SET TOP TO HERE
	STA SCTOP
	JSR SCRDWN      ;SCROLL DOWN
ILN20	PLA
	STA SCTOP       ;RESTORE SCREEN TOP
	JSR STU10       ;FIX PNT,MOVE FAR LEFT
	BNE JPL9        ;ALWAYS
.SKI 3
SCTDWN	CMP #$19        ;A SCROLL DOWN ?
	BNE BOTSET      ;NO
	JSR SCRDWN      ;YES - SCROLL SCREEN DOWN
SCTD10	JSR STUPT       ;SET PTRS
	BNE JPL9        ;ALWAYS
BOTSET	CMP #$0F        ;A SET OF BOTTOM RIGHT
	BNE GRAPH       ;NO
	LDA TBLX        ;YES - SET SCROLL WINDOW BOTTOM
	STA SCBOT
	LDA PNTR        ;SET RIGHT SIDE
	STA SCRT
JPL9	JMP LOOP2
GRAPH	CMP #$0E        ;SET GRAPHIC MODE
	BNE PBELL       ;NO
	JSR GRPHON      ;SET CRT FOR 8 SCANS TO A CHAR
	BMI JPL9        ;ALWAYS
;
.SKI 3
	* =$E600
; ++++++ MUST START @ $E600 ++++++
;
PREND	PLA             ;RESTORE REGS.
	TAY
	PLA
	TAX
	PLA
	RTI
.SKI 3
DSPP	LDY PNTR
	STA (PNT),Y
	LDA #2
	STA BLNCT       ;FORCE CRSR TO BLINK
	RTS
.SKI 3
; ****** I/O AND VARABLE SETUP ******
;
EXTRA0	LDA #$7F        ;EXTRA I/O
	STA IER
	LDX #CAS2-TIME
	LDA #0
	STA FHOME       ;CLEAR FOR FIRST HOME
PX1	STA TIME,X      ;ZERO ALL VARABLES
	DEX
	BPL PX1
	STX KYCTRL      ; ENABLE ACCENT OPTION
	LDA #<KEY       ;SET IRQ VECTOR
	STA CINV
	LDA #>KEY
	STA CINV+1
	LDA #9          ;SET MAX IRQ KEY BUF TO 9
	STA KBFLIM
	LDA #3          ;OUTPUT DEVICE SCREEN
	STA DFLTO
	LDA #$F         ;KEYBOARD SCANER
	STA PIAL
	ASL A
	STA PIA
	STA P2DB
	STX IEEO
	STX TIH
	LDA #$3D        ;ENABLE 60HZ IRQ
	STA PIAS
	BIT PIAK
	LDA #$3C
	STA IEEIS
	STA IEEOS
	STA PIAL1
	STX IEEO
	LDA #$E
	STA BLNCT
	STA BLNSW
	STA DELAY       ;INIT REPEAT DELAY
	STA RPTCNT
	STA IER
	JSR SRESET      ;RESET SCROLL WINDOW
CLRTAB	LDX #USRCMD-TAB ;CLEAR TAB ENTRANCE
	LDA #0
CLRALL	STA TAB,X       ;CLR ALL TAB KEYS
	DEX
	BPL CLRALL
	LDA #<LOP55     ;SET INDIRECT FOR INPUT
	LDX #>LOP55
	STA VINP
	STX VINP+1
	LDA #<PRT55     ;SET INDIRECT FOR OUTPUT
	LDX #>PRT55
	STA VOUT
	STX VOUT+1
	LDA #$10        ;ENABLE BELL SOUND
	STA FBEL
BEL4	JSR BEL2        ;SOUND 4 BELLS
	BEQ BEL2        ;ALWAYS
.SKI 4
PATCH2	JSR PRT         ;PRINT THE CHAR
	TAX             ;SAVE IT
	LDA SCRT        ;GET MAX COLUMN
	SEC
	SBC PNTR        ;GET DIFF FROM END
	CMP #5          ;FIVE AWAY ?
	BNE BEL30       ;NO
	TXA             ;YES
	CMP #$1D        ;A CRSR RIGHT ?
	BEQ BEL2        ;YES - SOUND BELL
	AND #$7F        ;REMOVE SHIFT KEY
	CMP #$20        ;ANY OTHER CTRL KEY ?
	BCC BEL30       ;YES - SOUND NOT
.SKI 3
; *** BELL ***
;
BEL2	JSR BELL        ;RING BELL TWICE
BELL	LDY FBEL        ;BELL ENABLED ?
	BEQ BEL30       ;NO
	LDA #$10        ;ENABLE CB2 SHIFT BY T2
	STA ACR
	LDA #$0F        ;SQUARE WAVE IN SHIFT REG.
	STA SR
	LDX #7          ;NINE NOTES
BEL10	LDA TONES-1,X   ;GET TONE
	STA T2L         ;PLAY IT
	LDA FBEL        ;DELAY
BEL20	DEY
	BNE BEL20
	SEC
	SBC #1
	BNE BEL20
	DEX
	BNE BEL10
	STX SR
	STX ACR
BEL30	RTS
;
.SKIP 2
; SET POINTER TO BEGINNING OF THE LINE
; ************************************
;
SADSET	TXA             ;SAVE LINE NUMBER
	LDX #<SAL       ;SET INDEX TO INDIRECT POINTER
	BNE SCRST1      ;BRANCH ALWAYS
;
SCRLY	LDY SCLF        ;SET COLUMN TO LEFT
	DEY
;
SCRSET	TXA
	LDX #<PNT
;
SCRST1	PHA             ;SAVE LINE NUMBER
	STA $00,X       ;SETUP INDIRECT
	LDA #$00        ;POINTER IN
	STA $01,X       ;ZERO PAGE
	TYA             ;SAVE Y
	PHA             ;ON STACK
	LDA $00,X       ;GET ORIGINAL VALUE
	LDY #02         ;MULTIPLY
	JSR MLTP16      ;BY 4
	JSR ADD16       ;ADD ORIGINAL
	LDY #04         ;MULTIPLY RESULT
	JSR MLTP16      ;BY 16 (5*16=80)
	LDY #>SCNRAM    ;ADD SCREEN
	JSR ADD16       ;START ADDRESS
	PLA             ;RESTORE
	TAY             ;Y AND
	PLA             ;X
	TAX             ;REGISTERS
	RTS             ;BYE !
;
MLTP16	ASL $00,X       ;MULTIPLY
	ROL $01,X       ;(Y)^2 TIMES
	DEY             ;ZERO PAGE (X)
	BNE MLTP16      ;LOCATIONS
	RTS
;
ADD16	ADC $00,X       ;ADD CONTENTS OF
	STA $00,X       ;ACCUMULATOR AND
	TYA             ;Y REGISTER TO
	ADC $01,X       ;ZERO PAGE ADDRESSES
	STA $01,X       ;POINTED BY X
	RTS
;
CTLMSK	.BYT %00000000
	.BYT %00000000
	.BYT %00000000
	.BYT %00000000
	.BYT %00000000
	.BYT %00000000
	.BYT %01000001  ;SHIFT KEYS
	.BYT %00000000
	.BYT %00000001  ;CONTROL KEY
	.BYT %00000000
;
.END
