	.PAG 'SWAP ROUTINES'
;***********************************************************************
;
;  TRANSPARENT SYSTEM PAGE ROUTINES
;
;     SWAP ------ SWAPS SYSTEM PAGE WITH USER DEFINED SWAP PAGE (1K)
;     FROMR0 ---- GETS A BYTE POINTED TO BY TMP0 AND RELOCATED IF
;                 NECESSARY BY SPAGE
;     FROMR2 ---- SAME AS ABOVE FOR TMP2
;
;     TOR0 ---- PUTS A BYTE AT THE RELOCATED ADDRESS FROM TMP0
;     TOR2 ---- SAME AS ABOVE FOR TMP2
;
;     SETPAG -- SETS BASE ADDRESS FOR SWAP SPACE OF 1K
;
;*********************************************************************
;
SETPAG
	JSR SKADR ;READ ADDRESS ARGUMENT.
	CPX #$04 ;IN CASE HE MADE A MISTAKE
	BCC ERROP3
	STA SPAGE ;SAVE IT HERE
	STX SPAGE+1 ;
	STA MEMSIZ
	STX MEMSIZ+1
	STA TMP2
	STX TMP2+1 ;AND HERE FOR VERIFICATION THERE'S RAM HERE
;
; CHECK FOR VALIDITY AND DO THE COPY
;
	LDY #0
CKLOOP
	LDA #$55
	STA (TMP2),Y ;PUT A PATTERN IN RAM
	CMP (TMP2),Y ;DID IT GET STORED?
	BNE ERROP3 ;BRANCH IF NOT
	LDA $00,Y ;GET A ZERO PAGE BYTE TO SWAP
	STA (TMP2),Y ;COPY ZERO PAGE TO SWAP SPACE
	INY ;NEXT BYTE
	BNE CKLOOP ;REPEAT UNTILL ZERO PAGE COPIED
;
	JMP STRT
ERROP3
	STX TMP2 ;MAYBE HE ONLY WANTS TO DEACTIVATE SWAP PAGE
	ORA TMP2 ;SEE IF HI AND LO BYTES ARE ZERO
	BNE DOANER ;BRANCH IF NOT - IE DO AN ERROR
	STA SPAGE ;DEACTIVATE SWAP PAGE
	STX SPAGE+1
	JMP STRT ;GO BACK FOR MORE COMMANDS
DOANER
 JMP ERROPR ;ERROR
	.PAG
;*********************************************************************
;
; SWAP
;
; EXCHANGE THE DATA POINTED TO BY SPAGE WITH THE SEGMENT 0000-0400
;
;*********************************************************************
;
SWAP
	PHA ;SAVE ALL REGISTERS
	TXA
	PHA
	TYA
	PHA
	LDA SPAGE+1
	BEQ SWPRTS ;IF NO SWAP PAGE THEN GETOUT
;
;
	LDY #0
MORSWP	;DO THE SWAP
	LDA $00,Y ;GET ZERO PAGE BYTE
	TAX ;SAVE IT HERE
	LDA (SPAGE),Y ;GET A BYTE FROM THE SWAP PAGE
	STA $00,Y ;PUT IT IN ZERO PAGE
	TXA ;GET THE ZERO PAGE BYTE
	STA (SPAGE),Y ;PUT IT IN THE SWAP PAGE
	INY
	BNE MORSWP
;
SWPRTS
	PLA ;RESTORE REGISTERS
	TAY
	PLA
	TAX
	PLA
	RTS
	.PAG
;*****************************************************************
;
;       REVECT  ---  SETUP IRQ VECTOR TO POINT TO ME
;                    SO I CAN INTERCEPT THE CURSOR
;                    CONTROL KEYS
;
;*****************************************************************
;
REVECT
	LDA CINV ;GET ORIGINAL IRQ VECTOR
	LDX CINV+1
	CMP WINTR ;DID I CHANGE IT ALREADY?
	BNE REVE10 ;BRANCH IF NOT
	CPX WINTR+1 ;HALF IS RIGHT - IS THE HI-ORDER RIGHT?
	BEQ REVE20 ;BRANCH IF ALREADY CHANGE - KEEP KEYS AS IS
;
REVE10
	STA KEYS
	STX KEYS+1 ;SAVE HIS IRQ VECTOR
	LDA WINTR ;GET MY IRQ VECTOR
	LDX WINTR+1
	STA CINV ;PUT IT HERE FOR JMP(CINV)
	STX CINV+1
REVE20
	RTS
	.SKI 3
;
;  RESTIRQ --- RESTORE IRQ VECTOR TO ORIGINAL STATE
;
RESIRQ
	LDA KEYS
	STA CINV ;REPLACE KEYBOARD IRQ
	LDA KEYS+1
	STA CINV+1
	RTS
	.PAG
;*******************************************************************
;
; RELOCATION ROUTINES
;
; TMP0 AND TMP2 ARE RELOCATED IN R0 FOR SOURCE OR DESTINATION
; .X IS RETURNED AS ZERO
; .Y IS PRESERVED
; .A CONTAINS BYTE
;
;*******************************************************************
;
FROMR2
	LDX #2 ;INDEX TO TMP2 (BASE ADDR IS TMP0)
	BNE FROM ;BRANCH ALWAYS
;
FROMR0
	LDX #0 ;NO OFFSET
;
FROM
	JSR RELOR0
	LDX #0
	LDA (R0,X) ;GET THE BYTE AND LEAVE
	RTS
;
;
TOR2
	LDX #2 ;OFFSET FROM TMP0 TO TMP2
	BNE TO
;
TOR0
	LDX #0
;
TO
	PHA ;SAVE THE BYTE WE'LL STORE
	JSR RELOR0 ;DO THE RELOCATION IF NEEDED
	PLA ;GET THE BYTE TO BE STORED
	LDX #0 ;
	STA (R0,X) ;PUT THE BYTE
	RTS
	.PAG
;
;----- DO THE RELOCATION OF TMP0 OR TMP2
;
; RETURNS:
;
;  R0 -- THE INDIRECT OR BASE ADDRESS OF THE DATA
;
RELOR0
	LDA TMP0+1,X ;DO WE NEED TO RELOCATE?
	BNE NOCATE ;THEN BRANCH - DON'T RELOCATE
;
	CLC
	LDA SPAGE ;PUT THIS AS BASE ADDRESS
	ADC TMP0,X ;ADD IN THE OFFSET
	STA R0 ;AND PUT IT IN R0
	LDA SPAGE+1
	ADC TMP0+1,X
	STA R0+1
	RTS
;
NOCATE
	STA R0+1 ;NO RELOCATION - SO R0=TMP0,X
	LDA TMP0,X
	STA R0
	RTS
	.PAG
;********************************************************************
;
; GET A BYTE AT RELOCATED ADDRESS INDEXED BY .Y
;
;********************************************************************
;
R0BYY
	PHP
	PLA ;CLEAR THE GOD DAMN BREAK FLAG!!!
	AND #$EF ;MASK OUT THE BREAK FLAG
	PHA ;PUT BACK ON THE STACK
	STY TEMPY
	TYA
	CLC
	ADC TMP0
	STA R0
	LDA #0
	ADC TMP0+1
	STA R0+1
	CMP #01 ;IF RESULT IS IN ZERO PAGE THEN RELOCATE IT
	BCS R0OK ;BRANCH IF OUTSIDE SYSTEMPAGE
;
	LDA NORELO ;IS RELOCATION OFF?
	BNE R0OK ;BRANCH IF SO
	LDA R0  ; HAVE TO RELOCATE IT
	ADC SPAGE
	STA R0
	LDA R0+1
	ADC SPAGE+1
	STA R0+1
;
R0OK
	LDY #0
	LDA (R0),Y
	LDY TEMPY
	PLP
	RTS
;
;----- PUT A BYTE INDEXED BY Y AND TMP0
;
PUTBYY
	PHA
	JSR R0BYY ;SET UP R0
	STY TEMPY
	LDY #0
	PLA ;GET THE BYTE I'M SUPPOSED TO STORE
	STA (R0),Y
	LDY TEMPY
	RTS
	.END
