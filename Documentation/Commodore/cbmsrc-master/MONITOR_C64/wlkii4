	.PAGE 'WLKII4 11/04/80'
; WALK SUBROUTINE CALL
;
JRTS
JSSS=JRTS-1
	STA ACC
	PHP
	PLA ;CLEAR BRK FLAG (6502 BUG - PHP SETS BREAK FLAG)
	AND #$EF
	STA FLGS
	STX XR
	STY YR
	PLA ;PC LO
	CLC
	ADC #1
	STA PCL
	PLA
	ADC #0
	STA PCH
	LDA #$80
	STA WSW ;NOW DO A WALK
	BNE WLK010 ;ALWAYS
	.SKIP 3
; WALK IRQ HANDLER ROUTINE
;
WLKBRK
	PHA ;I HAVE TO SAVE REGISTERS TO ACCESS MY PAGE
	TXA
	PHA
	TYA
	PHA
	TSX ;USE STACK OPOINTER TO GET HIS PSW
	LDA $104,X ;CHECK FOR INTERUPT FLAG SET
	AND #$04 ;IF THE INTERUPT FLAG IS SET DON'T CLI
	BNE NOCLI ;BRANCH IF INTERUPTS DISABLED
	CLI ;ELSE ALLOW INTERUPTS IN HIS PAGE
NOCLI
	LDY #<OLDIER ;GET OFFSET INTO MY PAGE
	LDA (SPAGE),Y ;TO GET HIS IER
.IFN WALKON <
	STA D1IER ;RESTORE HIS ENABLED INTERUPTS
>
;
	NOP ;IF AN IRQ IS POSTED IT WILL HAPPEN
	SEI ;NOW DISSALLOW IRQ'S
	JSR SWAP ;MAKE MY ZERO PAGE ACTIVE
	PLA
	STA YR ;SAVE HIS Y REGISTER
	PLA
	STA XR ;SAVE HIS X REGISTER
	PLA
	STA ACC ;AND HIS ACCUMULATOR
	CLD
	PLA
	STA FLGS ;HIS PROGRAM STATUS BYTE
	PLA
	STA PCL ;AND PROGRAM COUNTER
	PLA
	STA PCH
	LDA OLDNMI ;RESTORE HIS NMI VECTOR
	STA NMINV
	LDA OLDNMI+1
	STA NMINV+1
	JSR REVECT ;INTERCEPT KEY INPUT
	LDA #$20
.IFN WALKON <
	STA D2IER ;CLEAR MY TIMMER INTERUPT ENABLE FLAG
>
WLK010
	TSX
	STX SP ;SAVE STACK
.IFN WALKON <
	LDA D2IFR ;CLEAR LAST NMI TOO!
	STA D2IFR
>
	CLI
;
; CHECK TO SEE IF WE NEED TO PUT A BRK INSTRUCTION BACK
;
	BIT FULSPD ;IF BIT 7 IS SET PUT A BRK AT BRKADR
	BPL NOTFUL ;BRANCH IF BIT 7 IS CLEAR
;
	LDA BRKADR ;SET UP TO PUT BRK BACK WHERE HE SAID
	STA TMP0
	LDA BRKADR+1
	STA TMP0+1
	LDY #0
	JSR R0BYY ;GET THE OPCODE AT BRKADR
;
	STA OPCODE ;SAVE IT HERE SO WE CAN PUT IT BACK LATER
	LDA #0
	JSR PUTBYY ;PUT A BREAK INSTRUCTION HERE INSTEAD
	BIT FULSPD ;WAS IT A GO COMMAND?
	BVC ITSAWK ;BRANCH IF NOT
;
	STA FULSPD ;TURN OFF FULL SPEED FLAG
	JMP WLK200 ;AND GO FULL SPEED
;
ITSAWK	STA FULSPD ;CLEAR THE FLAG AND CONT WALK OR TRACE
;
NOTFUL
;
	BIT WSW ;QUICK TRACE ENABLED ?
	BVC TBR050 ;NO
	LDA PCH ;YES - IS THIS BREAK ADR ?
	CMP BRKADR+1
	BNE TBR600 ;NO - WALK ON
	LDA PCL ;MAYBE - CHECK LO PC
	CMP BRKADR
	BNE TBR600 ;NO
	LDA TMP12 ;A LAST OCCURENCE ?
	BNE TBR500 ;NO
	LDA TMP12+1 ;MAYBE
	BNE TBR400 ;NO
	LDA #$80 ;ENABLE WALK
	STA WSW
TBR050
	BMI TBR055 ;IF A WALK
	LSR WSW ;INTO A JSR WALK
	BCS WSWX1 ;NO THEN A BREAK
	JMP B5
WSWX1
	LDX SP ;SET TO USER STACK
	TXS
	LDA JSRVEC+1 ;NOW PUSH A FAKE RETURN ADR
	PHA
	LDA JSRVEC
	PHA
	JMP WLK330 ;GO DO THE REST OF THE SUBROUTINE
TBR055	JSR CRLF ;START WITH RETURN
	LDA PCL ;COPY PC TO TMP0
	LDX PCH
	STA TMP0
	STX TMP0+1
	JSR SPACE
	LDA #'$ ;DON'T PRINT "$"'S
	STA PTCH
	JSR DIS400 ;DISASSEMBLE ONE LINE
TBR100	JSR GETIN ;GET KEYS
	BEQ TBR100 ;WAIT FOR A KEY
	CMP #$03 ;STOP KEY ?
	BNE TBR200 ;NO
TBRSTR	JMP STRT ;YES - STOP
TBR200	CMP #'J ;A SUBROUTINE EXEC
	BNE WLK200 ;NO - WALK AGAIN
	LDA #1 ;QUICK TRACE ONE STEP ONLY
	STA WSW ;TO GET A RETURN ADR ON STACK
	BNE WLK200 ;ALWAYS
	.SKIP 3
TBR400	DEC TMP12+1 ;DEC HI OCCURENCE CTR
TBR500	DEC TMP12 ;DEC LO CTR
TBR600	LDA ROWS ;CHECK FOR STOP AND "=" KEYS
	CMP #$FA
	BNE WLK200 ;NO - TRACE ON
	LDX #'S ;YES - S FOR STOP
	JMP B567 ;FINISH A BREAK
	.SKIP 3
; GO COMMAND
; SYNTAX G
; SYNTAX G 1111
;
GO
	LDA #0
	BEQ WLK050 ;ALWAYS
	.SKIP 3
; QUICK TRACE
; SYNTAX Q
; SYNTAX Q 0000
; 0000=ADR TO START FROM
QUICK
	LDA #$40 ;ENABLE QUICK TRACE
	BNE WLK050 ;ALWAYS
	.SKIP 3
; WALK THRU MACHINE CODE
; SYNTAX W
; SYNTAX W 0000
; 0000=ADR TO START FROM
;
WALK	LDA #$80 ;CLEAR QUICK TRACE
WLK050	STA WSW
	STA RBUSY ;DISABLE SCROLL CONTROL UNTIL STOP
	LDY BRKCNT ;SET NUMBER OF OCCURENCES  BEFORE BREAK
	STY TMP12
	LDY BRKCNT+1
	STY TMP12+1
	JSR RDT ;GET NEXT CHAR
	CMP #$0D ;A RETURN ?
	BEQ WLK100 ;YES - USE OLD PC
	CMP #$20 ;A SPACE ?
	BEQ NOERR1 ;NO - BAD SYNTAX
	JMP WLKERR ;DO ERROR MSG
;
NOERR1
	JSR RDOA ;YES - READ WALK ADR
	JSR PUTP ;PUT IN PCL AND PCH
	JSR RDT ;GET END RETURN OUT OF BUFFER
	CMP #$0D
	BEQ NOERR2 ;NONE ERROR
	JMP WLKERR ;DO THE ERROR
;
NOERR2
WLK100	JSR CRLF ;START NEW LINE
WLK200
	LDA OPCODE
	CMP #$FF ;IS THERE AN ACTIVE BREAK POINT?
	BEQ NOPE ;BRANCH IF NOT
;
	LDX BRKADR ;SETUP TO PUT CORECT OPCODE AT BREAK ADR
	CPX PCL ;ARE WE AT A BREAK POINT?
	BNE BRELSE ;BRANCH IF NOT
	LDY BRKADR+1
	CPY PCH
	BNE BRELSE ;BRANCH IF NOT AT A BREAK POINT
;
	STY TMP0+1 ;SETUP TO PUT OPCODE BACK
	STX TMP0
	LDX WSW
	BNE DOWALK ;BRANCH IF ITS NOT A GO INSTRUCTION
;
	LDY #0
	JSR PUTBYY ;PUT CORECT OPCODE AT BRKADR (.A=OPCODE)
;
	LDA #$80
	STA FULSPD ;SET REPLACE BREAKPOINT FLAG
;
;
	LDA #$C0 ;INDICATE REPLACE BREAKPOINT AND GO AFTER - DO 1 INS
	STA FULSPD
	BNE DOWALK ;GO DO ONE INSTRUCTION UNDER MY CONTROL
;
BRELSE
;
; THERE'S AN ACTIVE BREAK POINT -- MAKE SURE IT'S SET
;
	LDA WSW ;SEE IF ITS A GO COMMAND
	BNE DOWALK ;IF NOT DON'T WORRY ABOUT A BRK INSTRUCTION
	STX TMP0 ;SET UP TO PUT A BRK INSTRUCTION
	LDY BRKADR+1
	STY TMP0+1
	LDY #0
	LDA #0 ;PUT A BRK INSTRUCTION AT THE BRKADR
	TAY ;ZERO INDEX
	JSR PUTBYY
;
NOPE
;
; THERE IS NO BREAK POINT ACTIVE
;
	LDA WSW ;IS IT A SIMPLE GO COMMAND
	BEQ SETSTK ;BRANCH IF SO - GIVE HIM BACK HIS REGISTERS
;
DOWALK
.IFN WALKON <
	SEI
	LDA #$A0 ;ENABLE NMI FROM TIMMER2
	STA D2IER
	LDA #$00
	STA D2ACR
>
WLK300
.IFN WALKON <
	LDA WWLK+1 ;SET UP NMI VECTOR
	STA NMINV+1
	LDA WWLK
	STA NMINV
>
SETSTK
	SEI ;DISALLOW INTERUPTS FOR IRQ VECTOR AND ZERO PAGE SWAP
	LDX SP ;GIVE BACK HIS STACK POINTER
	TXS
WLK330
	LDA PCH ;GIVE BACK HIS PROGRAM COUNTER
	PHA
	LDA PCL
	PHA
	LDA FLGS ;HIS STATUS BYTE
	PHA
	LDA ACC
	PHA ;SAVE FOR THE LAST
	LDX XR
	LDY YR
	LDA WSW
	ORA FULSPD ;IS IT A GO AND NO BRK ACTIVE?
	PHP ;SAVE FOR AFTER THE SWAP
.IFN WALKON <
	LDA D1IER ;DISABLE IRQ'S DURING THIS INSTRUCTION
>
	STA OLDIER ;SAVE WHAT EVER INTERUPTS ARE ENABLED IN MY PAGE
	JSR RESIRQ ;GIVE BACK HIS IRQ VECTOR
	JSR SWAP ;GIVE HIM BACK HIS ZERO PAGE
	PLP
	BEQ LETRIP ;IF STRAIGHT GO THEN LET IT RIP
;
.IFN WALKON <
	LDA #$7F ;DISABLE ALL INTERUPTS
	STA D1IER ;VIA INTERUPT ENABLE REGISTER
	LDA #<WLKNUM ;MAKE T2 TIMEOUT AT INST
	STA D2T2L
	LDA #>WLKNUM  ;START THE CLOCK
	STA D2T2H ;START THE CLOCK
>
LETRIP
	PLA ;RETURN HIS ACCUMULATER
	RTI
;
WLKERR	JMP ERROPR
	.SKIP 3
; SET QUICK TRACE BREAK POINT
; SYNTAX B 0000 1111
; 0000=STOP ADR
; 1111=OCCURENCE #
;
BREAK	JSR SKADR ;STOP ADR AND MAYBE #
	STA TMP0
	STX TMP0+1 ;USE TMP TO CHECK FOR PRESENCE OF RAM
	STA BRKADR
	STX BRKADR+1
	LDY #0
	JSR R0BYY ;GET THE OPCODE TO FLAG ACTIVE BREAKPOINT
	STA OPCODE
	TYA ;ZERO BREAK ON N'TH OCCURENCE FLAG
	LDA #0
	STA BRKCNT
	STA BRKCNT+1
	JSR SRDAE ;READ BREAK COUNT
	STA BRKCNT
	STX BRKCNT+1
	JMP STRT
	.SKIP 5
	.END
