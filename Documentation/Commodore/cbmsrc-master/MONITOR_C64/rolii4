	.PAGE 'ROLII4 04/30/82'
; ROLL SCREEN UP OR DOWN
; IF LAST CMD WAS MEMORY DISPLAY
; OR DISASSEMBLE.
;
ROLLS
	LDA RBUSY ;DOING A ROLL
	BNE REXIT ;YES - DO NOTHING
	LDA NDX ;ANY CHARS IN QUE ?
	BNE ROL400 ;YES
	.SKIP 3
REXIT	PLA ;RESTORE REGS
	TAY
	PLA
	TAX
	PLA
	RTI
	.SKIP 3
ROL400
	LDA KEYD ;GET NEW CHAR
	CMP #$11 ;A CURSOR DOWN ?
	BEQ XOL600 ;NO
	JMP ROL600
XOL600
	LDA TBLX ;CURSOR ON BOTTOM OF SCREEN
	CMP #NLINES-1
	BNE REXIT ;NO - EXIT
	LDA PNT ;COPY PNT TO TMP2
	STA TMP2
	LDA PNT+1
	STA TMP2+1
	LDA #NLINES ;CHECK 25 LINES
	STA TMP12
ROL440	LDY #1 ;LOOK IN COLUMN TWO
	JSR GSCRN ;GET A SCREEN CHAR
	CMP #': ;A MEMORY DISPLAY ?
	BEQ ROL500 ;YES
	CMP #', ;A DISASSEMBLEY DISPLAY ?
	BEQ ROL500 ;YES
	CMP #'' ;AN INTEROGATE?
	BEQ ROL500 ;BRANCH IF SO
	DEC TMP12 ;NO - NEXT LINE UP
	BEQ REXIT ;CHECKED WHOLE SCREEN
;
	SEC ;BACKUP ONE LINE
	LDA TMP2
	SBC #LLEN
	STA TMP2
	BCS ROL440
	DEC TMP2+1
	BNE ROL440 ;ALWAYS
;
ROL500	STA SAVCMD ;SAVE DISPLAY TYPE
	JSR GADR ;READ ADDRESS
	BCS REXIT ;EXIT IF BAD ADR READ
	LDA SAVCMD
	CMP #': ;A MEMORY DISPLAY ?
	BEQ ROL551 ;BRANCH IF SO
	CMP #'' ;IS IT AN INTEROGATE?
	BNE ROL550 ;BRANCH IF NOT
	CLC ;BACKUP ISIZE # BYTES
	LDA #ISIZE
	ADC TMP0
	STA TMP0
	BCC INTUP
	INC TMP0+1
INTUP
	JSR INTONE ;ELSE PRINT AN ASCII LINE
	JMP ROL580
ROL551
	CLC ;MOVE DOWN MSIZE # BYTES
	LDA TMP0
	ADC #MSIZE
	STA TMP0
	BCC ROL510
	INC TMP0+1
ROL510
	JSR CRLF
	LDX #'.
	LDA #':
	JSR WRTWO ;PRINT".:"
	JSR WROA ;AND THE ADDRESS
	LDA #MSIZE
	JSR DM ;DISPLAY MEMORY
	JMP ROL580
ROL550
	JSR GDSET ;GET INSTR AND DIGEST IT
	JSR TMPADJ ;MOVE TO NEXT INSTRUCTION
	LDA #0 ;PRINT A CHAR IN DISASSEMBLE
	STA PTCH
	LDY #', ;PRINT "., "
	JSR DIS300 ;DISASSEMBLE ONE LINE
ROL580	LDA #0
	STA NDX ;EMPTY QUE
	STA RBUSY ;SCROLL IS NO LONGER BUSY
	STA WRAP
	JSR CURUP ;CURSOR UP
	JSR CRLF ; AND BACK TO THE BEGINING.
	JMP REXIT ;AND EXIT
	.SKIP 3
ROL600	CMP #$91 ;A CURSOR UP ?
	BEQ NXEXIT ;NO
	JMP REXIT
NXEXIT
	LDA TBLX ;A TOP OF SCREEN ?
	BEQ NOXIT ;NO
	JMP REXIT
NOXIT
	LDA PNT ;COPY SCREEN PTR
	STA TMP2
	LDA PNT+1
	STA TMP2+1
	LDA #NLINES ;23 LINE ON SCREEN
	STA TMP12
;
ROL700	LDY #1 ;LOOK IN COLUMN TWO
	JSR GSCRN
	CMP #': ;A MEMORY DISPLAY ?
	BEQ ROL800 ;YES
	CMP #', ;A DISASSEMBLEY DISPLAY ?
	BEQ ROL800 ;YES
	CMP #'' ;AN INTEROGATE?
	BEQ ROL800 ;BRANCH IF SO
	DEC TMP12 ;DONE ALL 25 LINES ?
	BEQ JREX
	CLC ;DOWN TO NEXT LINE
	LDA TMP2
	ADC #LLEN
	STA TMP2
	BCC ROL700
	INC TMP2+1
	BNE ROL700 ;ALWAYS
;
ROL800	STA SAVCMD
	JSR GADR ;READ ADR
	BCC ROL820 ;READ OK
JREX	JMP REXIT
;
ROL820
	LDA SAVCMD
	CMP #': ;A MEMORY DISPLAY
	BEQ MDWN
	CMP #'' ;AN INTEROGATE?
	BNE DDWN ;BRANCH IF NOT
	JSR SCRD ;SCROLL DOWN AND HOME
	SEC ;BACKUP ISIZE # BYTES
	LDA TMP0
	SBC #ISIZE
	STA TMP0
	BCS MD10A ;NO BORROW
	DEC TMP0+1
MD10A	JSR INTO10 ;DISPLAY ONE LINE AT TOP OF SCREEN
	JMP MD200
	.SKIP 3
; MEMORY DISPLAY ROLL DOWN
;
MDWN
	JSR SCRD ;SCROLL DOWN AND HOME
	SEC ;BACKUP ISIZE # BYTES
	LDA TMP0
	SBC #ISIZE
	STA TMP0
	BCS MD100 ;NO BORROW
	DEC TMP0+1
MD100
	JSR HEXDM2 ;DISPLAY ONE LINE OF MEMORY
MD200	LDA #0 ;CLEAR BUSY FLAG AND QUE
	STA NDX
	STA RBUSY
	STA WRAP
	JSR HOME
	JMP REXIT
	.SKIP 3
; DISASSEMBLE ROLL DOWN
;
DDWN
	JSR SCRD
	LDA TMP0 ;SAVE TMP0 IN TMP2
	LDX TMP0+1
	STA TMP2
	STX TMP2+1
	LDA #$10 ;START BACKUP 16 BYTES
	STA TMP12
DD200	SEC ;BACKUP
	LDA TMP2
	SBC TMP12
	STA TMP0
	LDA TMP2+1
	SBC #0
	STA TMP0+1
DD300
	JSR GDSET ;GET INSTR AND DIGEST IT
	JSR TMPADJ ;MOVE TO NEXT INSTR
	JSR DCMP ;SAME AS TMP2 ?
	BEQ DD400 ;YES - OK !
	BCS DD300 ;NOT THERE YET
	DEC TMP12 ;TRY STARTING ONE LESS BACK
	BNE DD200
;
;
DD400
	INC LENGTH ;1=1 BYTE, 2=2 BYTES ETC.
	LDA LENGTH ;GOT IT NOW BACK UP
	JSR BY200
	LDX #0 ;GET BACKUP INSTR
	STX PTCH ;DISPLAY ALL CHARS
	LDA #',
	JSR ALTR2 ;PRINT "., "
	JSR DIS400 ;DISASSEMBLE ONE LINE
	JMP MD200
	.SKIP 3
; GET AN INSTRUCTION AND DIGEST IT
;
GDSET
	LDX #0
	JSR FROMR0 ;GET A BYTE IN .A
	JMP DSET
	.SKIP 3
; SCROLL DOWN SET TO PRINT ON LINE 1
;
SCRD
VICQTR	=VICSCN+768 ;3/4 POINT IN SCREEN
VICCLR	=VICOL+768 ;3/4 POINT IN COLOR NIBBLES
	LDA #<VICCLR ;POINT TO COLOR NIBBLES
	STA EAL ;EAL IS 'FROM' ADDRESS
	LDA #>VICCLR
	STA EAL+1
	STA CMP0+1 ;CMP0 IS 'TO' ADDRESS
	LDA #>VICQTR ;POINT TO SCREEN HALFWAY POINT
	STA SAL+1
	STA TMP2+1
	LDA #<VICQTR
	STA SAL
	LDA #LLEN ;OFFSET TO NEXT LINE
	STA TMP2
	STA CMP0 ;OFFSET TO NEXT LINE OF COLOR NIBBLES
	LDY #231-LLEN ;NOTE, 40*25 = 400H - 24 BYTES FOR SCREEN
	LDX #4
;
SCD10
	LDA (SAL),Y
	STA (TMP2),Y
	LDA (EAL),Y
	STA (CMP0),Y ;AND COLOR NIBBLE
	DEY
	BNE SCD10
;
	LDA (SAL)Y ;DO ;THE ZERO CASE
	STA (TMP2)Y
	LDA (EAL),Y
	STA (CMP0),Y
	DEY   ;SET Y TO $FF
	DEC SAL+1
	DEC TMP2+1
	DEC EAL+1
	DEC CMP0+1
	DEX
	BNE SCD10
;
CLR40
	LDX #LLEN-1 ;ERASE TOP LINE
	LDA #$20
SCD20	STA VICSCN,X
	DEX
	BPL SCD20
	.SKIP 3
; HOME TO TOP LEFT
;
HOME	LDA #$13 ;HOME TO LINE 1
	JMP WRT
	.SKIP 3
; GET ADDRESS FROM SCREEN INTO TMP0 AND TMP2
;
GADR
	CPY #LLEN ;GONE OFF END
	BNE GAD100 ;NO
	SEC
	RTS
;
GAD100	JSR GSCRN ;GET A CHAR FROM SCREEN
	CMP #$20 ;SKIP SPACES
	BEQ GADR
	DEY ;BACKUP FOR NEXT GSCRN
	JSR GBYT
	TAX ;SAVE HI IN X
	JSR GBYT ;GET LO BYTE
	STA TMP0
	STX TMP0+1
	LDA #$FF ;SET FLAGS
	STA RBUSY ;NO CURSOR UP/DOWN BUSY
	STA BLNSW ;STOP BLINK OF CURSOR
	LDA BLNON ;CURSOR IN REVERSE ?
	BEQ GAD200 ;NO
	LDA GDBLN ;YES - GET GOOD CHAR
	LDY PNTR ;COLUMN OF CURSOR
	STA (PNT),Y ;RESTORE SCREEN CHAR
	LDA #0 ;SAY GOOD
	STA BLNON
GAD200	CLC
	RTS
;
GBYT
	JSR GSCRN
	JSR HEXIT ;HEX TO BINARY
	ASL A ;IN HI NYBBLE
	ASL A
	ASL A
	ASL A
	STA BAD
	JSR GSCRN
	JSR HEXIT
	ORA BAD
	RTS
	.SKIP 3
; GET A CHAR FROM SCREEN
;
GSCRN
	LDA (TMP2),Y
	INY
	AND #$7F ;NO RVS FIELD
	CMP #$20 ;ADJUST TO ASCII
	BCS GSC100
	ORA #$40
GSC100	RTS
	.SKIP 5
	.END
