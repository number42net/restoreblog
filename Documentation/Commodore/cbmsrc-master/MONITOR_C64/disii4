	.PAGE 'DISII4 11/03/80'
; DISASSEMBLE MEMORY
; SYNTAX D 1000
; SYNTAX D 1000-2000
;
DISA	JSR RANGE ;READ SA AND MAYBE EA
DIS200	JSR DCMP ;DONE ?
	BCC DISSTR ;YES
	LDY #', ;SETUP FOR MOD DISASSEMBLE
	JSR DISSPC ;NO - DISASSEMBLE ANOTHER
	JSR TMPADJ ;ADJUST TMP0 NEXT OP CODE
	JSR STOP1 ;STOP KEY ?
	BNE DIS200 ;NO - KEEP GOING
DISSTR	JSR CURUP ;PRINT CUSOR UP
	BNE SSTR ;ALWAYS I HOPE !
DIS300	JSR ALTRIT
DIS400	JSR WROA ;PRINT PC
	JSR SPACE
	JSR GDSET ;GET INSTR AND DIGEST IT
	PHA ;SAVE INDEX TO MNEMONIC
	JSR DISDMP ;DO DISASSEMBLY HEX DUMP
	PLA ;RESTORE INDEX TO MNEMONIC
	LDX #3 ;3 CHARS FOR MNEMONIC
DIS500	JSR PRMNE ;PRINT MNEMONIC
	LDX #6 ;SIX FORMAT BITS
PRADR1	CPX #3
	BNE PRADR3 ;IF X=3 PRT ADR VAL
	LDY LENGTH
	BEQ PRADR3 ;NO PRT IF LENGTH=0
PRADR2	LDA FORMAT
	CMP #$E8 ;RELATIVE ADDRESSING MODE?
	JSR R0BYY ;GET A BYTE FROM RELOCATED ADDR AND INDEXED BY .Y
	BCS RELADR ;YES
	JSR WROBX ;NO-PRT 1 OR 2 BYTE ADR
	DEY ;MOST SIGNIFICANT BYTE FIRST
	BNE PRADR2
PRADR3	ASL FORMAT ;TEST NEXT FORMAT BIT
	BCC PRADR4 ;IF 0 NO PRT
	LDA CHAR1-1,X
	JSR CHKPCH ;CHECK FOR A PRINT
	LDA CHAR2-1,X ;IF 0 NO PRT
	BEQ PRADR4
	JSR CHKPCH
PRADR4	DEX
	BNE PRADR1
	RTS ;RETURN IF DONE 6 FORMAT BITS
RELADR	JSR PCADJ3 ;PCL,H+DISP+1 TO A,Y
	TAX
	INX
	BNE PRNTYX
	INY
PRNTYX	TYA
PRNTAX	JSR WROBX ;PRT TARGET OF BRANCH
PRNTX	TXA
;SAVE X WRITE A BYTE
;
WROBX	STX SAVX
	JSR WROB
	LDX SAVX
	RTS
	.SKIP 3
; ADJUST TMP0 BY VALUE IN LENGTH
; A=0 THEN TMP0=TMP0+1
; A=FF THEN TMP0=TMP0-1
;
TMPADJ	LDA LENGTH
TMPA10	JSR PCADJ2
	STA TMP0
	STY TMP0+1
	RTS
	.SKIP 3
; ADJUST PC A=LO Y=HI
;
PCADJ2	SEC ; 2=3-BYTES
PCADJ3	LDY TMP0+1
	TAX ;TEST DISP SIGN FOR REL BRANCH)
	BPL PCADJ4 ;EXTEND NEG BY DEC PCH
	DEY
PCADJ4	ADC TMP0 ;PCL+LENGTH(OR DISP)+
	BCC PCRTS ; +1 TO A CARRY INTO
	INY ; Y(PCH)
PCRTS	RTS
	.SKIP 3
;DISASSEMBLER INSTRUCTION HEX DUMP
;
DISDMP
	LDY LENGTH ;ONE LESS THAN INSTR LENGTH
	INY
	TYA
	PHA ;SAVE LENGTH FOR BACKING UP
	JSR DM ;DUMP THIS # OF BYTES
	PLA
	STA TMPC2 ;BACK UP
	SEC
	LDA TMP0
	SBC TMPC2
	STA TMP0
	BCS DSD30
	DEC TMP0+1
DSD30	LDA LENGTH ;PRINT SPACES FOR LOOKS
	CLC
	ADC LENGTH
	ADC LENGTH
	TAY
DSD50	LDA #$20
	JSR WRT
	INY
	CPY #7 ;PRINTS 1,4, OR 7 SPACES
	BNE DSD50
	RTS
	.SKIP 3
;DISASSEMBLER DIGEST ROUTINE
;
DSET	TAY
	LSR A ;EVEN/ODD TEST
	BCC IEVEN
	LSR A ;TEST B1
	BCS ERR ;XXXXXX11 INSTR BAD
	CMP #$22
	BEQ ERR ;10001001 INSTR BAD
	AND #$7 ;MASK 3 BITS FOR ADR MODE
	ORA #$80 ;ADD INDEXING OFFSET
IEVEN	LSR A ;LEFT/RIGHT TEST
	TAX
	LDA MODE,X ;INDEX INTO MODE TABLE
	BCS RTMODE ;IF CARRY SET USE LSB FOR
	LSR A ; PRINT FORMAT INDEX
	LSR A
	LSR A ; IF CARRY CLR USE MSB
	LSR A
RTMODE	AND #$0F ;MASK FOR 4-BIT INDEX
	BNE GETFMT ;$0 FOR BAD OPCODES
ERR	LDY #$80 ;SUB $80 FOR BAD OPCODE
	LDA #0 ;SET FORMAT INDEX TO ZERO
GETFMT	TAX
	LDA MODE2,X ;INDEX INTO PRT FORMAT TAB
	STA FORMAT ;SAVE FOR ADR FIELD FORMAT
	AND #3 ;MASK 2-BIT LENGTH. 0=1BYTE
	STA LENGTH ;1=2BYTE,2=3BYTE
	TYA ;OP CODE
	AND #$8F ;MASK FOR 1XXX1010 TEST
	TAX ;SAVE IN X
	TYA ;OP CODE AGAIN
	LDY #3
	CPX #$8A
	BEQ MNNDX3
MNNDX1	LSR A
	BCC MNNDX3 ;FORM INDEX INTO MNEMONIC TAB
	LSR A
MNNDX2	LSR A ;1XXX1010->00101XXX
	ORA #$20 ;XXXYYY01->00111XXX
	DEY ;XXXYYY10->00110XXX
	BNE MNNDX2 ;XXXYY100->00100XXX
	INY ;XXXXX000->000XXXXX
MNNDX3	DEY
	BNE MNNDX1
	RTS
	.SKIP 3
;PRINT OP CODE BYTES IN HEX
;
PROP	JSR R0BYY ;GET OP CODE
	JSR WROBX
	LDX #1
PROPBL	JSR SPCX ;PRT INSTR 1 TO 3 BYTES
	CPY LENGTH
	INY
	BCC PROP
	LDX #3 ;SKIP 3 SPACES
	CPY #3
	BCC PROPBL ;NO
	RTS
	.SKIP 3
;PRINT MNEMONIC
; ENTER X=3 CHARACTERS
;
PRMNE	TAY
	LDA MNEML,Y ;FETCH 3 CHAR MNEMONIC
	STA TMP10
	LDA MNEMR,Y
	STA TMP10+1
PRMN1	LDA #0
	LDY #5
PRMN2	ASL TMP10+1 ;SHIFT 5 BITS OF CHAR
	ROL TMP10 ; INTO A
	ROL A ;CLEAR CARRY
	DEY
	BNE PRMN2
	ADC #$3F ;ADD '?' OFFSET
	JSR WRT ;PRINT IT
	DEX
	BNE PRMN1
	JMP SPACE ;FINISH WITH SPACE
	.SKIP 3
	.END
