.PAGE 'MON.VA'
;
;
;
;
;   *VIEW
;
;   $V ADR1 ADR2
;
;   DISPLAY DISK  MEMORY (ADR1)-(ADR2)
;
;
VIEW	JSR RDADR2      ; GET ADR1 ADR2
;
	LDA ADR2        ; SAVE ENDING ADR
	STA ADR4
	LDA ADR2+1
	STA ADR4+1
;
VIEW10	LDA ADR1        ; SET UP FOR M-R
	CLC             ; READ EIGHT BYTES IN
	ADC #8
	STA ADR2
	LDA ADR1+1
	ADC #0          ; TAKE CARE OF CARRY
	STA ADR2+1
;
	LDA #<BUF+10    ; ADR3 =BUF+10
	STA ADR3
	LDA #>BUF
	STA ADR3+1
;
	JSR CRLF        ; PRINT (CRLF).$:  ADR1
;
	LDA #'.         ; PROMT
	JSR WROC
	LDA #'$
	JSR WROC
	LDA #':
	JSR WROC
	JSR SPACE
;
	LDA ADR1+1      ; HI BYTE
	JSR WROB
	LDA ADR1        ; LOW BYTE
	JSR WROB
;
	JSR MEMRD       ; READ THE BYTES
;
	LDX #0
	STX PRMPTR      ; TEMP BUF POINTER
;
VIEW30	JSR SPACE
	LDX PRMPTR      ; GET BUFFER POINTER
	LDA BUF+10,X
	JSR WROB        ; WRITE OUT DATA BYTE
	INC PRMPTR
	LDA PRMPTR
	CMP #8          ;TEST IF DONE
	BNE VIEW30      ; NOT YET
;
	SEC             ;TEST IF DONE
	LDA ADR2
	SBC ADR4
	LDA ADR2+1
	SBC ADR4+1
	BCC VIEW10
;
	JMP STRT        ; DONE WITH IT
;
;
;
;
;
;   *ALTER
;
;   $: ADR1 DD DD DD DD DD DD DD DD
;
;
;   CHANGE DATA TO DD DD AT ADR1
;
;
ALTER	JSR GETADR      ; GET ADR1
;
	LDA TMPO        ; LET ADR3=TMP
	STA ADR3
	LDA TMPO+1
	STA ADR3+1
;
	LDA #0          ; PRMPTR TMP BUFFER POINTER
	STA PRMPTR
;
ALTR10	JSR GETBYT      ; GET DATA BYTES
	LDX PRMPTR      ; LOAD POINTER
	STA BUF+20,X
;
	INC PRMPTR
	LDA PRMPTR
	CMP #8          ; TEST IF DONE
	BNE ALTR10
;
	LDA #<BUF+20    ; SET UP START-END FOR MEMORY WRITE COMMAND
	STA ADR1
	LDA #<BUF+20+8
	STA ADR2        ; STORE 8 BYTES
	LDA #>BUF
	STA ADR1+1
	STA ADR2+1
;
	JSR MEMWRT
	JMP STRT
;
;
;
;
;
;  *GETBYT
;
;  READ NEXT HEX BYTE INTO .A
;
;
GETBYT	JSR SYNCHK      ; TEST SYNTAX
	JMP RDOB
;
;
;
.END
