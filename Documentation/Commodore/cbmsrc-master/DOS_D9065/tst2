.PAGE 'TST2'
;
; TOGGLE ACTIVE BUFFER # IN BUFNUM
;
DBLBUF
	LDX LINDX
	LDA BUF0,X      ; TOGGLE ACTIVE FLAG
	EOR #$80
	STA BUF0,X
DBL1
	LDA BUF1,X      ; TOGGLE ACTIVE FLAG
	EOR #$80
	STA BUF1,X
DBL2
	JSR GETACT      ; GET ACTIVE BUF#
	TAX
	JMP WATJOB      ; AND WAIT FOR BUFFER READY
PIBYTE
	LDX #IWSA
	STX SA
PBYTE
	JSR FNDWCH
	JSR SETLDS
	LDA SA
	CMP #15
	BEQ L42
	BNE L40
;
; MAIN ROUTINE TO WRITE TO CHANL
;
PUT
	LDA ORGSA       ; IS CHANL CMD OR DATA
	AND #$8F
	CMP #15         ; < 15
	BCS L42
L40
	JSR TYPFIL      ; DATA BYTE TO STORE
	BCS L41         ; BRANCH IF RND
	LDA DATA        ; SEQ FILE
	JMP WRTBYT      ; WRITE BYTE TO CHANL
L41
	BNE L46
	JMP WRTREL
L46
	LDA DATA        ; RND FILE WRITE
	JSR PUTBYT      ; WRITE TO CHANL
	LDY LINDX       ; PREPARE NXT BYTE
	JMP RNGET2 
L42
	LDA #CMDCHN     ; WRITE TO CMD CHANL
	STA LINDX
	JSR GETPNT      ;TEST IF COMM AND BUFFER FULL
	CMP #<CMDBUF+CMDLEN+1
	BEQ L50         ; IT IS FULL
	LDA DATA        ; NOT FULL YET
	JSR PUTBYT      ; STORE THE BYTE
L50
	LDA EOIFLG      ; TST IF LST BYTE OF MSG
	BEQ L45         ; IT IS
	RTS             ; NOT YET, RETURN
L45
	INC CMDWAT      ; SET CMD WAITING FLAG
	RTS
;
; PUT .A INTO ACTIVE BUFFER OF LINDX
;
PUTBYT
	PHA             ; SAVE .A
	JSR GETACT      ; GET ACTIVE BUF#
	BPL PUTB1       ; BRACH IF THERE IS ONE
	PLA             ; NO BUFFER ERROR
	LDA #FILNOP
	JMP CMDERR      ; JMP TO ERROR ROUTINE
PUTB1
	ASL A           ; SAVE THE BYTE IN BUFFER
	TAX
	PLA
	STA (BUFTAB,X)
	INC BUFTAB,X    ; INC THE BUFFER POINTER
	RTS             ; .Z = 1 IF LAST CHAR SLOT IN BUFFER
;
;INITIALIZE DRIVES (COMMAND)
;
INTDRV
	JSR SIMPRS
	JSR INITDR
	LDA IMAGE       ; USED AS FLAG FOR BOTH DRIVES
	BPL ID20
	JSR TOGDRV
	JSR SETLDS
	JSR INITDR
	JSR TOGDRV
ID20
	JMP ENDCMD
;
; INITIALIZE DRIVE (DRVNUM)
;
ITRIAL
	LDA #BAMJOB+2
	STA JOBNUM
	LDX #0
	STX TRACK       ; TRACK = 0
	STX SECTOR      ; SECTOR, HEAD = 0
	JSR SETH
	LDA #SECSEK     ; SECTOR SEEK
	JMP DOJOB
INITDR
	JSR CLDCHN
	JSR ITRIAL      ; SEE IF DRIVE ACTIVE
	JSR SETBJ       ; USE BAM JOB NUMBER
	JSR DRTRD       ; READ TRACK, SECTOR AND HEAD 0
	JSR SETBMP      ; SET THE BAM POINTER
	LDY #2
	LDA (BMPNT),Y
	BNE INITD1      ; NOT INITIALIZED
	INY
	LDA (BMPNT),Y
	CMP #$FF
	BEQ INITD2      ; INITIALIZED
INITD1
	LDA #$FF
	LDX DRVNUM
	STA NODRV,X
	LDA #NODRIV
	JMP CMDER2      ; DRIVE NOT READY
INITD2
	LDX DRVNUM
	INY             ; .Y = 4
	LDA (BMPNT),Y   ; START OF DIRECTORY (TRACK)
	STA DSTRK,X
	INY
	LDA (BMPNT),Y   ; START OF DIRECTORY (SECTOR)
	STA DSSEC,X
	INY             ; .Y = 6
	LDA (BMPNT),Y   ; START OF HEADER (TRACK)
	STA HSTRK,X
	INY
	LDA (BMPNT),Y   ; START OF HEADER (SECTOR)
	STA HSSEC,X
	INY             ; .Y = 8
	LDA (BMPNT),Y   ; START OF BAM (TRACK)
	STA BAMTRK,X
	INY
	LDA (BMPNT),Y   ; START OF BAM (SECTOR)
	STA BAMSEC,X
	TXA
	ASL A
	TAX             ; .X = DRVNUM*2
	INY             ; .Y = 10
	LDA (BMPNT),Y   ; DISK ID
	STA DSKID,X
	INY
	LDA (BMPNT),Y
	STA DSKID+1,X
	LDX DRVNUM
	LDY #0
	LDA (BMPNT),Y   ; START OF BTS (TRACK)
	STA BTSTRK,X
	INY
	LDA (BMPNT),Y   ; START OF BTS (SECTOR)
	STA BTSSEC,X
	LDA #0
	STA MDIRTY,X
	LDA BAMTRK,X
	STA TRACK
	LDA BAMSEC,X
	STA SECTOR
	JSR SETBJ       ; SET UP BAM JOB
	JSR DRTRD       ; READ THE FIRST BAM
	LDX DRVNUM
	LDA #0
	STA WPSW,X      ; CLEAR WP SWITCH
	STA NODRV,X     ; DRIVE IS ACTIVE
;
; CALCULATE FREE BLOCKS
;
NF05
	LDX DRVNUM
	LDA #0
	STA NDBL,X
	STA NDBH,X
	TAX             ; .X = 0
	STX TRACK       ; START AT TRACK 1
NF10
	STX HEAD        ; START AT HEAD 0
	INC TRACK
	LDX TRACK
	CPX MAXTRK
	BCC NF20
	RTS
NF20
	JSR SETMAP      ; SET THE BAM
	LDX DRVNUM
	LDA (BMPNT),Y   ; NUMBER OF FREE SECTORS
	CLC
	ADC NDBL,X
	STA NDBL,X
	BCC NF30
	INC NDBH,X
NF30
	INC HEAD
	LDX HEAD        ; HEAD = HEAD+1
	CPX HEADS
	BCC NF20        ; COUNT NEXT HEAD
	LDX #0
	BEQ NF10        ; JUMP, COUNT THE NEXT TRACK
;
; START DOUBLE BUFFERING
; USE TRACK,SECTOR AS STARTING BLOACK
; 
STRDBL
	JSR SETHDR
	JSR RDBUF
	JSR WATJOB
	JSR GETBYT
	STA TRACK
	JSR GETBYT
	STA SECTOR
	LDA TRACK
	BNE STR1
	RTS
STR1
	JSR DBLBUF
	JSR SETHDR
	JSR RDBUF
	JMP DBLBUF
;
; START A READ JOB ON TRACK,SECTOR
;
RDBUF
	LDA #READ
	BNE STRTIT
;
; START A WRITE JOB ON TRACK,SECTOR
;
WRTBUF
	LDA #WRITE
STRTIT
	STA CMD
	JSR GETACT
	TAX
	JSR SETLJB
	TXA
	PHA
	ASL A
	TAX
	LDA #0
	STA BUFTAB,X
	JSR TYPFIL
	CMP #4
	BCS WRTC1       ; NOT SEQUENTIAL TYPE
	INC NBKL,X
	BNE WRTC1
	INC NBKH,X
WRTC1
	PLA
	TAX
	RTS
;
; FIND THE READ CHANNEL
;
FNDRCH
	LDA SA
	CMP #MAXSA+1
	BCC FNDC20
	AND #$F
FNDC20
	CMP #CMDSA
	BNE FNDC25
	LDA #ERRSA
FNDC25
	TAX
	SEC
	LDA LINTAB,X
	BMI FNDC30
	AND #$F
	STA LINDX
	TAX
	CLC
FNDC30
	RTS
;
; FIND THE WRITE CHANNEL
;
FNDWCH
	LDA SA
	CMP #MAXSA+1
	BCC FNDW13
	AND #$F
FNDW13
	TAX
	LDA LINTAB,X
	TAY
	ASL A
	BCC FNDW15
	BMI FNDW20
FNDW10
	TYA
	AND #$0F
	STA LINDX
	TAX
	CLC
	RTS
FNDW15
	BMI FNDW10
FNDW20
	SEC
	RTS
TYPFIL
	LDX LINDX
	LDA FILTYP,X
	LSR A
	AND #7
	CMP #RELTYP
	RTS
GETPRE
	JSR GETACT
	ASL A
	TAX
	LDY LINDX
	RTS
;
; READ BYTE FROM ACTIVE BUFFER
; AND SET FLAG IF LAST DATA BYTE
; IF LAST THEN .Z = 1
;
GETBYT
	JSR GETPRE
	LDA LSTCHR,Y
	BEQ GETB1
	LDA (BUFTAB,X)
	PHA
	LDA BUFTAB,X
	CMP LSTCHR,Y
	BNE GETB2
	LDA #$FF
	STA BUFTAB,X
GETB2
	PLA
	INC BUFTAB,X
	RTS
GETB1
	LDA (BUFTAB,X)
	INC BUFTAB,X
	RTS
;
;
; READ A CHAR FROM FILE AND READ NEXT
; BLOCK OF FILE IF NEEDED.
; SET CHNRDY = EOI IF END OF FILE
;
RDBYT
	JSR GETBYT
	BNE RD3
	STA DATA
RD0
	LDA LSTCHR,Y
	BEQ RD1
	LDA #EOIOUT
RD01
	STA CHNRDY,Y
	LDA DATA
	RTS
RD1
	JSR DBLBUF
	LDA #0
	JSR SETPNT
	JSR GETBYT
	CMP #0
	BEQ RD4
	STA TRACK
	JSR GETBYT
	STA SECTOR
	JSR DBLBUF
	JSR SETDRN
	JSR SETHDR
	JSR RDBUF
	JSR DBLBUF
	LDA DATA
RD3
	RTS
RD4
	JSR GETBYT
	LDY LINDX
	STA LSTCHR,Y
	LDA DATA
	RTS
;
; WRITE A CHAR TO CHANL AND WRITE
; BUFFER OUT TO DISK IF ITS FULL
;
WRTBYT
	JSR PUTBYT
	BEQ WRT0
	RTS
WRT0
	JSR SETDRN
	JSR NXTTS
	LDA #0
	JSR SETPNT
	LDA TRACK
	JSR PUTBYT
	LDA SECTOR
	JSR PUTBYT
	JSR WRTBUF
	JSR DBLBUF
	JSR SETHDR
	LDA #2
	JMP SETPNT
;
; INC POINTER OF ACTIVE BUFFER
; BY .A
;
INCPTR
	STA TEMP
	JSR GETPNT
	CLC
	ADC TEMP
	STA BUFTAB,X
	STA DIRBUF
	RTS
;
; SET DRVNUM TO DRIVE INDICATED BY
; LSTJOB OF ACTIVE BUFFER
;
SETDRN
	JSR GETACT
	TAX
	LDA LSTJOB,X
	AND #1
	STA DRVNUM
	RTS
.END
