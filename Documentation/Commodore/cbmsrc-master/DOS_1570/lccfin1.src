 	.page  
;12/28/84 ds

;   motor and stepper control
;   irq into controller every 7ms
end              
        lda  tedioa
        and  #%00100000 ; wpsw => 0010 0000
        cmp  lwpt       ; same as last
        sta  lwpt       ; update
        bne  end000      
        lda  mtrcnt     ; anything to do?
        bne  end100     ; dec & finish up
        beq  end002     ; nothing to do
end000  lda  #$ff        
        sta  mtrcnt     ; 255*8ms motor on time
        jsr  moton       
        lda  #1          
        sta  wpsw        
        bne  end002     ; bra

end100           
        dec  mtrcnt     ; dec & return
        bne  end002      
        lda  drvst       
        cmp  #$00       ; motor off & no active drive ?
        bne  end002     ; br, do not turn it off something is going on
        jsr  motoff      

end002           
        lda  fase       ; test for phase offset
        beq  end40       

        cmp  #2          
        bne  end004      

        lda  #0          
        sta  fase        
        beq  end40       

end004  sta  steps       
        lda  #2          
        sta  fase        
        jmp  dostep      

end40   ldx  cdrive     ;  work on active drive only
        bmi  end33x     ;  no active drive

        lda  drvst      ;  test if motor on
        tay      
        cmp  #$20       ;  test if anything to do
        bne  end10      ;  something here

end33x  jmp  end33      ;  motor just running

end10   dec  acltim     ;  dec timer
        bne  end30       
	
        tya     	;  test if acel
        bpl  end20       


        and  #$7f       ;  over, clear acel bit
        sta  drvst       

end20   and  #$10       ;  test if time out state
        beq  end30       

	dec  acltim2	;  decrement second timer
	bne  end30	

	jsr  motoff      

        lda  #$ff       ;  no active drive now
        sta  cdrive      

        lda  #0         ;  drive inactive
        sta  drvst      ;  clear on bit and timout
        beq  end33x      

end30   tya     	;  test if step needed
        and  #$40        
        bne  end30x     ;  stepping

        jmp  end33       

end30x  lda  nxtst      ; step or settle
        bne  setle      ; go set
short   lda  steps       
        beq  doset       
dostep           
        lda  steps       
        bpl  stpin       

stpout  tya
	pha		; save regs .y
	ldy  #100	; wait for trk_00
stp_001	lda  pb23_c	; check for trk_00
	cmp  pb23_c	; same ?
	bne  stp_002

	dey
	bne  stp_001	; wait a while 

	and  #$80
	bne  stp_002	; track 00 ?

	lda  trk0fg	; enable/disable track 00 sense
	bne  stp_002	; br, nope...

	lda  pb23_a	; phase 0
	and  #3
	bne  stp_002

	pla
	tay
	lda  #0
	sta  steps	; nomore steps
	jmp  end33

stp_002	pla
	tay
	inc  steps      ; keep stepping
        lda  pb23_a
        sec      
        sbc  #1        	; -1 to step out
        jmp  stp         

doset   lda  #2         ;  settle time
        sta  acltim      
        sta  nxtst      ; show set status
        jmp  end33       

setle   dec  acltim      
        bne  end33       

        lda  drvst       
        and  #$ff-$40    
        sta  drvst       

        lda  #00         
        sta  nxtst       
        jmp  end33       

stpin   dec  steps       
        lda  pb23_a
        clc      
        adc  #01         

stp     and  #3          
        sta  tmp         
        lda  pb23_a
        and  #$ff-$03   ;  mask out old
        ora  tmp         
        sta  pb23_a

end33   rts      


;toggle activity led on error
; by drvnum.

erroff  lda  #0          
        .byte skip2

; set led in (drvnum) flashing

erron   lda  #$80
errbra  sta  erword
	sta  joberr     ; show controller the job
        rts      


trnof   lda  drvst	; set timeout bit
	ora  #$10
	sta  drvst
	lda  #$ff
	sta  acltim	; timeout var
	lda  #7
	sta  acltim2
	rts
