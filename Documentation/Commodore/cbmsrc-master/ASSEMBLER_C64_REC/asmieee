.PAGE 'ASMIEEE'

;   GETCHR
;
;   SUBROUTINE TO GET NEXT CHARACTER OF INPUT FROM WHEREVER SOURCE IS
;
;   SFILE IS SOURCE FLAG REGISTER.
;   IF V=1 THEN LIBRARY
;   IF MINUS THEN DISK
;
;   RETURNS CHARACTER IN .A, AND A=0 IF END OF FILE.
;   LCHAR HAS LAST CHAR RETURNED.


GETCHR	STY SAVEY
	STX SAVEX

GETCH1	LDA SFILE
	AND #FRMPRM     ;($10)
	BEQ GETCH2
	JMP FPARM       ;SCANNING A MACRRO PARAMETER

GETCH2	LDA SFILE
	AND #FRMMAC     ;($20)
	BNE XXX3

GETCH3	BIT SFILE       ;SOURCE?
	BVS FLIBR       ;FROM LIBRARY

FDISK	LDX #2          ;FROM MAIN
	CPX CHAN
	BEQ FDISK2
	JSR CLRCH
	LDX #2
FDISK1	STX CHAN
	JSR CHKIN
FDISK2	JSR BASIN
	LDX SATUS       ;CHECK FOR EOF
	BEQ GETCHX      ;ZERO IS OK...

; NOT ZERO CHECK FOR EOI, ETC.

	TAY             ;SAVE THE DATA
	TXA             ;STATUS INTO .A
	AND #$40        ;?EOI
	BNE FDISK3      ;YES...
	JSR CLRCH
	JSR FDTEST      ;BAD STATUS READ E.C.
	JMP DONE        ;BAD SO GET OUT

FDISK3	LDA #0
	STA LCHAR       ;SET EOF
	TYA             ;RESTORE THE DATA BYTE

GETCHX	LDY SAVEY
	LDX SAVEX
	RTS

FLIBR	LDX #3
	CPX CHAN
	BEQ FDISK2
	JSR CLRCH
	LDX #3
	JMP FDISK1

XXX3	JSR XXX5
	BNE XXX4
	JSR POPMAC
	JMP GETCH1
XXX4	CMP #'?'
XXX8	BNE GETCHX
	JSR XXX5
	SEC
	SBC #'0'
	JSR PRMPNT
	LDY #0
	LDA (T0),Y
	STA PARMPT
	INY
	LDA (T0),Y
	STA PARMPT+1
	ORA PARMPT
	BNE XXX6
	LDA T0
	STA NEWMAC
	LDA T0+1
	STA NEWMAC+1
	JSR XXX7
	LDA NEWMAC
	STA T0
	LDA NEWMAC+1
	STA T0+1
	LDY #0
	LDA PARMPT
	STA (T0),Y
	INY
	LDA PARMPT+1
	STA (T0),Y
XXX6	LDA SFILE
	ORA #FRMPRM
	STA SFILE
FPARM	LDA PARMPT
	STA T0
	LDA PARMPT+1
	STA T0+1
	INC PARMPT
	BNE *+5
	INC PARMPT+1
	LDY #0
	LDA (T0),Y
	BNE XXX8
	LDA SFILE
	AND #-FRMPRM+255
	STA SFILE
	JMP GETCH1

XXX5	LDA CURPNT
	STA T0
	LDA CURPNT+1
	STA T0+1
	INC CURPNT
	BNE *+5
	INC CURPNT+1
	LDY #0
	LDA (T0),Y
	RTS

XXX7	LDX #3
XXXA	INC MLABEL,X
	LDA MLABEL,X
	CMP #':'
	BNE XXX9
	LDA #$30
	STA MLABEL,X
	DEX
	BNE XXXA
XXX9	LDA MCSTPT
	STA PARMPT
	LDA MCSTPT+1
	STA PARMPT+1
	LDY #0
XXXB	LDA MLABEL,Y
	JSR PUSH
	INY
	CPY #4
	BCC XXXB
	LDA #0
	JSR PUSH
	RTS

CRLF	LDA #$D



OUTPUT	STX SAVEX
	STY SAVEY
	PHA
	BIT NOPRIN      ;HARDCOPY?
	BPL OUT15       ;NO HARDCOPY
;   BVS OUT40   ;CENTRONICS PRINT

	LDA CHAN        ;OUTPUT CHANNEL OPEN?
	CMP #4
	BEQ OUT10       ;YES...
	JSR CLRCH
	LDX #4
	STX CHAN
	JSR CKOUT
OUT10	PLA
	PHA
	JSR BSOUT
;   JMP OUT50
;
;OUT40  STA $E841   ;CENTRONICS IS DISABLED FOR AWHILE
;   LDA #$CC
;   STA $E84C
;ACK    LDA $E84D
;   AND #$02
;   BEQ ACK
;   LDA #$EC
;   STA $E84C
;   BIT $E841
;   PLA
;   PHA

	LDX LBOTH
	BEQ OUT20
OUT15	JSR PRT
OUT20	PLA             ;RESTORE CONTENTS .A
	JMP GETCHX



DONE	JSR CLRCH
	LDA #1
	JSR FCLOSE      ;CLOSE DISPLAY
	LDA #4
	JSR FCLOSE      ;CLOSE PRINTER
	LDA #5
	JSR FCLOSE      ;CLOSE KEYBOARD
	LDA NOBJ
	BNE DONE10
	JSR OBJEND
	LDA #6          ;CLOSE OBJ FILE
	JSR FCLOSE
DONE10	LDA #7
	JSR FCLOSE
	JSR CLRCH       ;ERASE WORK FILE
	JMP READY

CHKBRK	JSR STOP
	BEQ CHB1
	RTS

CHB1	JSR SCRON
	SEI
	JSR CLRCH
	LDA #0
	STA CHAN
	STA NDX         ;FLUSH BUFFER
	CLI

CHB2	JSR GETIN
	ORA #0
	BEQ CHB2        ;NO CHARACTER YET
	CMP #'B'        ;RETURN TO BASIC?
	BEQ CHB5        ;NO
	JSR SCROFF
	RTS

CHB5	JMP DONE

FDTEST	JSR CLRCH       ;READ ERROR CHAN
	LDX #7
	STX CHAN
	JSR CHKIN
	JSR BASIN
	STA USER        ;SAVE FOR LATER
	JSR BASIN
	STA USER+1      ;SAVE FOR LATER
	CMP #'0'
	BNE FTERR
	LDA USER
	CMP #'0'
	BNE FTERR
MORET	JSR BASIN       ;SUCK UP MSG
	CMP #$0D        ;TERMINATEON A RETURN
	BNE MORET
	RTS

FTERR	LDX #1          ;PRINT THE ERROR CONDITION (EC)
FTLP1	LDA USER,X
	STA LTLBUF,X
	DEX
	BPL FTLP1
	LDY #2
FTERR2	STY SAVEY
	JSR BASIN       ;COPY INTO BUFFER
	CMP #$0D        ;STOP ON (RETURN)
	BEQ FTERR3
	LDY SAVEY
	STA LTLBUF,Y
	INY
	BNE FTERR2
FTERR3	LDA #$8D        ;PUT IN SHIFT-CR
	STA LTLBUF,Y
	LDA #>LTLBUF
	LDY #<LTLBUF
	JSR WSCRN


; PRINT THE FILENAME ALSO

	LDY FNLEN
	LDA #$8D        ;TERMINATOR FOR MSG
	STA (FNADR),Y
	LDA FNADR+1
	LDY FNADR
	JSR WSCRN

	JMP READY

; MESSAGE TO LISTING ONLY

MSG	STX SAVEX
MSG10	LDX SAVEX
	LDA MSGS,X
	PHP
	AND #$7F
	JSR OUTPUT
	INC SAVEX
	PLP
	BPL MSG10
	RTS

READY	JSR SCRON
	JSR XXXG1
	JMP BREADY

XXXZ2	LDX #30
XXXG2	LDA SYMTBL,X
	STA SAVSYM,X
	DEX
	BPL XXXG2
	RTS

XXXG1	LDX #30
XXXG3	LDA SAVSYM,X
	STA SYMTBL,X
	DEX
	BPL XXXG3
	RTS

.PAGE
;
; OBJECT OUTPUT ROUTINE
;

OBJOUT	STX SAVEX
	JSR OBJ01
	LDX SAVEX
	RTS

OBJ01	PHA             ;DATA BYTE
	STA OBJMAP,Y    ;SAVE IN MEM MAP
	LDA NOBJ
	BNE OBJ02
	LDA PASS
	BNE OB10        ;NOT PASS 1
OBJ02	PLA
OBEXIT	RTS

OB10	LDA IFLAGS
	AND #8          ;OBJECT FILE?
	BEQ OBJ02       ;NOMEM IN EFFECT
	TYA
	CLC
	ADC IPC
	EOR LADDL
	BNE OB15
	ADC IPC+1
	CMP LADDH
	BEQ OB25

OB15	LDA BYTCNT      ;IS ADDR CONSEC ?
	BEQ OB20        ;YES.  BYTCNT=0 MEANS RESET
	JSR OBJWRT      ;DUMP RECORD
OB20	JSR OBINT1      ;RESET BUFFER

OB25	LDX BYTCNT
	PLA
	STA OBJBUF+3,X  ;PUT BYTE
	INC BYTCNT      ;INC COUNT

	CLC
	ADC CKSUML
	STA CKSUML
	BCC OB30
	INC CKSUMH

OB30	INC LADDL       ;INC LAST ADDRESS
	BNE OB35
	INC LADDH

OB35	CPX #MAXBYT-1
	BCC OBEXIT
	JSR OBJWRT      ;FULL BUFFER, DUMP
	JMP OBINT2

.PAGE
OBJINT	LDA #0          ;INITIALIZE FOR...
	STA RECNTL      ;...OBJECT DUMP
	STA RECNTH

OBINT1	LDA IPC         ;INIT FOR...
	STA LADDL       ;...RECORD DUMP
	LDA IPC+1
	STA LADDH

OBINT2	LDA #0          ;INIT FOR CONSEC...
	STA BYTCNT      ;...RECORD DUMP
	STA CKSUMH
	LDA LADDL
	STA OBJBUF+2
	STA CKSUML      ;INIT CHECKSUM
	LDA LADDH
	STA OBJBUF+1
	CLC
	ADC CKSUML
	STA CKSUML
	BCC OBINT3
	INC CKSUMH
OBINT3	RTS

;
; WRITE OUT RECORD TO CHANNEL
;

OBJWRT	INC RECNTL      ;INC RECORD CNT
	BNE OW20
	INC RECNTH

OW20	LDX #0
	STX SAVEX
	LDA BYTCNT
	CLC
	ADC #3
	STA SAVEY

	LDA #';'
	JSR OW45

OW23	LDX SAVEX
	LDA OBJBUF,X
	JSR OW40
	INC SAVEX
	LDY SAVEY
	CPY SAVEX
	BNE OW23
	LDA BYTCNT
	CLC
	ADC CKSUML
	PHA
	LDA #0
	ADC CKSUMH
	JSR OW40
	PLA
	JSR OW40
	LDA #$D         ;RECORD TERMINATOR
	BNE OW45

OW40	PHA
	LSR A
	LSR A
	LSR A
	LSR A
	JSR ASCII
	JSR OW45
	PLA
	AND #$0F
	JSR ASCII
OW45	PHA
	LDA CHAN
	CMP #6
	BEQ OW50
	JSR CLRCH
	LDX #6
	STX CHAN
	JSR CKOUT
OW50	PLA
	JMP BSOUT

OBJEND	LDA BYTCNT      ;LAST RECORD?
	BEQ OE10        ;NONE TO DUMP...
	JSR OBJWRT
OE10	LDA RECNTL      ;DUMP TRAILER REC
	STA LADDL
	LDA RECNTH
	STA LADDH

	JSR OBINT2
	JMP OBJWRT



ASCII	CLC
	ADC #$F6
	BCC ASC1
	ADC #6
ASC1	ADC #$3A
	RTS

.END
