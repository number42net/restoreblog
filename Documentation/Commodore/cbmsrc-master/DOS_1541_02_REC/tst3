.PAGE 'TST3'
;
;
; .A=#BUFFERS NEEDED
; SETS UP BUFFER # AND ALLOCATES LINDX
GETWCH
	SEC             ;SET .C=1 INDICATE WRITE
	BCS GETR2
GETRCH
	CLC             ;SET .C=0 INDICATE READ
GETR2
	PHP             ;SAVE R/W FLAG (.C)
	STA TEMP        ;SAVE #BUFS NEEDED
	JSR FRECHN      ;FREE ANY CHANNELS
	JSR FNDLNX      ; GET NEXT LINDX OPEN
	STA LINDX
	LDX SA
	PLP
	BCC GETR55
GETR52	ORA #$80
GETR55	STA LINTAB,X    ;SAVE LINDX IN LINTAB
GETBF
	AND #$3F
	TAY             ;NOW GET THE BUFFERS
	LDA #$FF
	STA BUF0,Y
	STA BUF1,Y
	STA SS,Y
GETR3	DEC TEMP
	BMI GETR4
	JSR GETBUF
	BPL GETR5
GBERR	JSR RELBUF      ; ERROR ,REL BUFS
	LDA #NOCHNL
	JMP CMDERR
GETR5	STA BUF0,Y
	DEC TEMP
	BMI GETR4
	JSR GETBUF
	BMI GBERR
	STA BUF1,Y
GETR4	RTS
;
; FREE CHANL ASSOCIATED WITH SA
; FREE READ AND WRITE CHANLS
; DONT FREE CHANL 15
FRECHN	LDA SA
	CMP #$F
	BNE FRECO
	RTS
.SKIP
FRECO
FRERD
FREWRT	LDX SA
	LDA LINTAB,X
	CMP #$FF
	BEQ FRE25
	AND	#$3F
	STA LINDX
	LDA #$FF
	STA LINTAB,X
	LDX LINDX
	LDA #0
	STA CHNRDY,X
	JSR RELBUF
;
; RELEASE THE LINDX
;
RELINX	LDX LINDX
	LDA #1
REL15	DEX
	BMI REL10
	ASL A
	BNE REL15
REL10	ORA LINUSE      ;1=FREE 0=USED
	STA LINUSE
FRE25	RTS
; GIVEN SA , FREE ITS READ CHANL
;
; 
; RELEASE BUFFERS (LINDX)
;
RELBUF	LDX LINDX
	LDA BUF0,X
	CMP #$FF
	BEQ REL1
	PHA
	LDA #$FF
	STA BUF0,X
	PLA
	JSR FREBUF
REL1	LDX LINDX
	LDA BUF1,X
	CMP #$FF
	BEQ REL2
	PHA
	LDA #$FF
	STA BUF1,X
	PLA
	JSR FREBUF
REL2	LDX LINDX
	LDA SS,X
	CMP #$FF
	BEQ REL3
	PHA
	LDA #$FF
	STA SS,X
	PLA
	JSR FREBUF
REL3	RTS
;
; GET A FREE BUFFER #
;
;  REGS DESTROYED: .A  .X
;  OUT:  .A,.X= BUF # OR $FF  IF FAILED
;        .N= 1 IF FAILED
;
;     IF SUCCESSFUL INIT JOBS & LSTJOB
;
GETBUF
	TYA             ;SAVE .Y
	PHA
	LDY #1
	JSR FNDBUF
	BPL GBF1        ;FOUND ONE
;
	DEY
	JSR FNDBUF
	BPL GBF1        ;FOUND ONE
;
	JSR STLBUF      ;STEAL ONE
	TAX             ;TEST IT
	BMI GBF2        ;DIDN'T FIND ONE
GBF1
	LDA JOBS,X
	BMI GBF1        ;WAIT FOR JOB FREE
	LDA DRVNUM
	STA JOBS,X      ;CLEAR JOB QUEUE
	STA LSTJOB,X
	TXA
	ASL A
	TAY
	LDA #2
	STA BUFTAB,Y
GBF2
	PLA
	TAY             ;RESTORE .Y
	TXA             ;EXIT WITH BUF # IN .A & CC SET
	RTS
;
;
; FIND A FREE BUF # & SET BIT IN BUFUSE
;  ALL REGS USED
;  IN:  .Y= INDEX INTO BUFUSE
; OUT:  .X= BUF # OR $FF  IF FAILED
;       .N= 1 IF FAILED
;
FNDBUF
	LDX #7
FB1
	LDA BUFUSE,Y    ;SEARCH BUFUSE
	AND BMASK,X
	BEQ FB2         ;FOUND A FREE ONE
;
	DEX
	BPL FB1         ;UNTIL ALL BITS ARE TESTED
;
	RTS
FB2	;SET IT USED
	LDA BUFUSE,Y
	EOR BMASK,X     ;SET BIT
	STA BUFUSE,Y
	TXA
	DEY
	BMI FB3         ;IF .Y THEN...
	CLC             ;...ADD 8 MORE
	ADC #8
FB3
	TAX             ;LEAVE IN .X
FRI20
	RTS
;
FREIAC	;FREE INACTIVE BUFFER
	LDX LINDX
	LDA BUF0,X
	BMI FRI10
;
	TXA
	CLC
	ADC #MXCHNS+1
	TAX
	LDA BUF0,X
	BPL FRI20
FRI10
	CMP #$FF
	BEQ FRI20
;
	PHA
	LDA #$FF
	STA BUF0,X
	PLA
;  JMP FREBUF
;
;
;
FREBUF	AND #$F
	TAY
	INY
	LDX #16
FREB1	ROR BUFUSE+1
	ROR BUFUSE
	DEY
	BNE FREB2
	CLC
FREB2	DEX
	BPL FREB1
	RTS
;
;
CLRCHN	LDA #14
	STA SA
CLRC1	JSR FRECHN 
	DEC SA
	BNE CLRC1
	RTS
;
CLDCHN	LDA #14
	STA SA
CLSD	LDX SA
	LDA LINTAB,X
	CMP #$FF
	BEQ CLD2
	AND #$3F
	STA LINDX
	JSR GETACT
	TAX
	LDA LSTJOB,X
	AND #1
	CMP DRVNUM
	BNE CLD2
	JSR FRECHN
CLD2	DEC SA
	BPL CLSD
	RTS
;
;********************************
;***********  S T L B U F  ******
;********************************
;
; STEAL A BUFFER
;
; THIS RTN SEARCHES THE CHANNELS
; IN ORDER OF LEAST RECENTLY USED
; AND STEALS THE FIRST INACTIVE
; BUFFER IT FINDS.
;
;    INPUT PARAMTERS:
;        LRUTBL - LEAST RECENTYL
;                 USED TABLE
;
;    OUTPUT PARAMTERS:
;        A <== BUFFER #
;
;    REGISTER USAGE:
;        X - CHANNEL INDEX
;        Y - LRUTBL INDEX
;
;*******************************
;
STLBUF
	LDA T0
	PHA             ;SAVE T0
	LDY #0
STL05
	LDX LRUTBL,Y
	LDA BUF0,X
	BPL STL10       ;ACTIVE
;
	CMP #$FF
	BNE STL30       ;IT'S INACTIVE
STL10
	TXA
	CLC
	ADC #MXCHNS+1
	TAX
	LDA BUF0,X
	BPL STL20
	CMP #$FF
	BNE STL30
STL20
	INY
	CPY #MXCHNS-1
	BCC STL05
	LDX #$FF        ;SET FAILURE
	BNE STL60       ;BRA
STL30	;STEAL THE BUFFER IF NO ERROR
	STX T0
	AND #$3F
	TAX
STL40
	LDA JOBS,X
	BMI STL40       ;WAIT TILL DONE
	CMP #2          ;ERRORS?
	BCC STL50       ;OK
	LDX T0
	CPX #MXCHNS+1
	BCC STL10       ;CHECK OPPOSITE SLOT
	BCS STL20       ;CHECK ANOTHER CHANNEL
;
; FOUND ONE, SO LETS STEAL IT
;
STL50
	LDY T0
	LDA #$FF
	STA BUF0,Y      ;CLEAR SLOT
STL60
	PLA
	STA T0
	TXA             ;BUF # IN .A & SET CC'S
	RTS
;
;
;
; FIND A FREE LINDX TO USE
; MARK AS USED IN LINUSE
;
FNDLNX	LDY #0
	LDA #1
FND10	BIT LINUSE      ;1=FREE 0=USED
	BNE FND30
	INY
	ASL A
	BNE FND10
	LDA #NOCHNL     ;NO FREE LINDX AVAILABLE
	JMP CMDERR
FND30	EOR #$FF        ;TOGGLE BIT MASK
	AND LINUSE      ;MARK BIT USED
	STA LINUSE
	TYA             ;RETURN LINDX IN .A
	RTS
.END
