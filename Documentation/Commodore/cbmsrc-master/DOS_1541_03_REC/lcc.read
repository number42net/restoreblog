.PAGE 'LCC.READ'
;
;
;
;
;
;   *READ
;
;    READ IN TRACK,SECTOR SPECIFIED
;    IN HEADER
;
;
REED	CMP #0          ; TEST IF READ JOB
	BEQ READ01      ; GO TEST IF WRITE
	JMP WRIGHT
;
READ01	JSR DSTRT       ; FIND HEADER AND START READING DATA
;
READ11	BVC *           ; WAIT FOR BYTE
	CLV
;
	LDA DATA2       ; STORE AWAY DATA
	STA (BUFPNT),Y  ; IN DATA BUFFER
	INY
	BNE READ11
;
	LDY #255-TOPRD  ; STORE REST IN OVERFLOW BUFFER
;
READ20	BVC *
	CLV
;
	LDA DATA2
	STA OVRBUF,Y
	INY
	BNE READ20
;
	JSR GCRBIN      ; CONVERT BUFFER TO BINARY
;
	LDA BID         ; TEST IF ITS A DATA BLOCK
	CMP DBID
	BEQ READ28
;
	LDA #4          ; NOT A DATA BLOCK
	JMP ERRR
;
READ28	JSR CHKBLK      ; CALC CHECKSUM
;
	CMP CHKSUM
	BEQ READ40
;
	LDA #5          ; DATA BLOCK CHECKSUM ERROR
	.BYTE SKIP2
;
READ40	LDA #1          ; READ DATA BLOCK OK
	JMP ERRR
;
;
;
DSTRT	JSR SRCH        ; FIND HEADER
	JMP SYNC        ; AND THEN DATA BLOCK SYNC
;
;
SRCH	LDA DRIVE       ; CREATE HEADER IMAGE
	ASL A
	TAX
;
	LDA DSKID,X     ; GET MASTER ID FOR THE DRIVE
	STA HEADER
	LDA DSKID+1,X
	STA HEADER+1
;
	LDY #0          ; GET TRACK,SECTOR
	LDA (HDRPNT),Y
	STA HEADER+2
	INY
	LDA (HDRPNT),Y
	STA HEADER+3
;
	LDA #0
          ;CREATE HEADER CHECKSUM
	EOR HEADER
	EOR HEADER+1
	EOR HEADER+2
	EOR HEADER+3
;
	STA HEADER+4    ; STORE THE CHECKSUM
;
	JSR CONHDR      ; CONVERT HEADER TO GCR
;
	LDX #90         ; SEARCH 90 SYNC CHARS
;
SRCH20	JSR SYNC        ; FIND SYNC
;
	LDY #0          ; TEST 8 GCR BYTES
;
SRCH25	BVC *
	CLV             ; WAIT FOR BYTE
;
	LDA DATA2
	CMP STAB,Y      ; TEST IF THE SAME
	BNE SRCH30      ; NOPE
;
	INY
	CPY #8
	BNE SRCH25
;
	RTS
;
;
SRCH30	DEX             ;TRY AGAIN
	BNE SRCH20
;
	LDA #2          ; CANT FIND THIS HEADER
ERR	JMP ERRR
;
;
;
;
SYNC
;
	LDA #$80+80     ; WAIT 20 MS FOR SYNC MAX
	STA TIMER1
;
	LDA #3          ; ERROR CODE FOR NO SYNC
;
SYNC10	BIT TIMER1      ; TEST FOR TIME OUT
	BPL ERR
	BIT DSKCNT      ; TEST FOR SYNC
	BMI SYNC10
;
;
	LDA DATA2       ; RESET PA LATCH
	CLV
	LDY #0          ; CLEAR POINTER
	RTS
;
;
;
.END
