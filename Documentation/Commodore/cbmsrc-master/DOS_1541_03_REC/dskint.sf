.PAGE 'DSKINT.SF'
;
; ERROR DISPLAY ROUTINE
; BLINKS THE (ERROR #)+1 IN ALL THREE LEDS
;
PEZRO	LDX #0          ;ERROR #1 FOR ZERO PAGE
	.BYTE $2C       ;SKIP NEXT TWO BYTES
PERR	LDX TEMP        ;GET ERROR #
	TXS             ;USE STACK AS STORAGE REG.
PE20	TSX             ;RESTORE ERROR #
PE30	LDA #LED0+LED1
	ORA LEDPRT
	JMP PEA7A       ;TURN ON LED !!!!PATCH SO DDRB LED IS OUTPUT!!!!
REA7D	TYA             ;CLEAR INNER CTR !!!!PATCH RETURN!!!!
PD10	CLC
PD20	ADC #1          ;COUNT INNER CTR
	BNE PD20
	DEY             ;DONE ?
	BNE PD10        ;NO
;
	LDA LEDPRT
	AND #$FF-LED0-LED1
	STA LEDPRT      ;TURN OFF ALL LEDS
PE40	;WAIT
	TYA             ;CLEAR INNER CTR
PD11	CLC
PD21	ADC #1          ;COUNT INNER CTR
	BNE PD21
	DEY             ;DONE ?
	BNE PD11        ;NO
;
	DEX             ;BLINKED # ?
	BPL PE30        ;NO - BLINK AGAIN
	CPX #$FC        ;WAITED BETWEEN COUNTS ?
	BNE PE40        ;NO
	BEQ PE20        ;ALWAYS - ALL AGAIN
.SKIP 3
DSKINT
	SEI
	CLD
	LDX #$FF
	STX DDRA1
	INX             ;LET .X:=0
;
;
;*********************************
;
; POWER UP DIAGNOSTIC
;
;*********************************
;
	LDY #0
	LDX #0
PU10	TXA             ;FILL Z-PAGE ACCEND PATTERN
	STA $0,X
	INX
	BNE PU10
PU20	TXA             ;CHECK PATTERN BY INC...
	CMP $0,X        ;...BACK TO ORIG #
	BNE PEZRO       ;BAD BITS
PU30
	INC $0,X        ;BUMP CONTENTS
	INY
	BNE PU30        ;NOT DONE
;
	CMP $0,X        ;CHECK FOR GOOD COUNT
	BNE PEZRO       ;SOMETHING'S WRONG
;
	STY $0,X        ;LEAVE Z-PAGE ZEROED
	LDA $0,X        ;CHECK IT
	BNE PEZRO       ;WRONG
;
	INX             ;NEXT!
	BNE PU20        ;NOT ALL DONE
;
;
; TEST TWO 64K-BIT ROMS
;
; ENTER X=START PAGE
; EXIT IF OK
;
RM10	INC TEMP        ;NEXT ERROR #
	STX IP+1        ;SAVE PAGE, START X=0
	LDA #0
	STA IP          ;ZERO LO INDIRECT
	TAY
	LDX #32         ;32 PAGES IN 8K ROM
	CLC
RT10	DEC IP+1        ;DO IT BACKWARDS
RT20	ADC (IP),Y      ;TOTAL CHECKSUM IN A
	INY
	BNE RT20
	DEX
	BNE RT10
	ADC #0          ;ADD IN LAST CARRY
	TAX             ;SAVE LOWER PAGE IN X
	CMP IP+1        ;CORRECT ?
	BNE PERR2       ;NO - SHOW ERROR NUMBER
;
	CPX #$C0        ;DONE BOTH ROMS ?
	BNE RM10        ;NO
.SKIP 3
; TEST ALL COMMON RAM
;
CR20	LDA #$01        ;START OF 1ST BLOCK
CR30	STA IP+1        ;SAVE PAGE #
	INC TEMP        ;BUMP ERROR #
; ENTER X=# OF PAGES IN BLOCK
;  IP PTR TO FIRST PAGE IN BLOCK
; EXIT IF OK
;
RAMTST	LDX #7          ;SAVE PAGE COUNT
RA10	TYA             ;FILL WITH ADR SENSITIVE PATTERN
	CLC
	ADC IP+1
	STA (IP),Y
	INY
	BNE RA10
	INC IP+1
	DEX
	BNE RA10
	LDX #7          ;RESTORE PAGE COUNT
RA30	DEC IP+1        ;CHECK PATTERN BACKWARDS
RA40	DEY
	TYA             ;GEN PATTERN AGAIN
	CLC
	ADC IP+1
	CMP (IP),Y      ;OK ?
	BNE PERR2       ;NO - SHOW ERROR #
	EOR #$FF        ;YES - TEST INVERSE PATTERN
	STA (IP),Y
	EOR (IP),Y      ;OK ?
	STA (IP),Y      ;LEAVE MEMORY ZERO
	BNE PERR2       ;NO - SHOW ERROR #
	TYA
	BNE RA40
	DEX
	BNE RA30
;
	BEQ DIAGOK
;
PERR2	JMP PERR
.SKIP 3
;
DIAGOK
	LDX #TOPWRT
	TXS
	LDA LEDPRT      ;CLEAR LEDS
	AND #$FF-LED0-LED1
	STA LEDPRT
;
	LDA #1          ; NEG EDGE OF ATN
	STA PCR1
	LDA #%10000010
	STA IFR1
	STA IER1
	LDA PB          ;COMPUTE PRIMARY ADDR
	AND #%01100000  ;PB5 AND PB6 ARE UNUSED LINE
	ASL A           ;SHIFT TO LOWER
	ROL A
	ROL A
	ROL A
	ORA #$48        ;TALK ADDRESS
	STA TLKADR
	EOR #$60        ;LISTEN ADDRESS
	STA LSNADR
;
; INITIALIZE BUFFER PNTR TABLE
;
INTTAB	LDX #0
	LDY #0
INTT1	LDA #0
	STA BUFTAB,X
	INX
	LDA BUFIND,Y
	STA BUFTAB,X
	INX
	INY
	CPY #BFCNT
	BNE INTT1
;
	LDA #<CMDBUF    ;SET PNTR TO CMDBUF
	STA BUFTAB,X
	INX
	LDA #>CMDBUF
	STA BUFTAB,X
	INX
	LDA #<ERRBUF    ;SET PNTR TO ERRBUF
	STA BUFTAB,X
	INX
	LDA #>ERRBUF
	STA BUFTAB,X
;
	LDA #$FF
	LDX #MAXSA
DSKIN1	STA LINTAB,X
	DEX
	BPL DSKIN1
;
	LDX #MXCHNS-1
DSKIN2
	STA BUF0,X      ;SET BUFFERS AS UNUSED
	STA BUF1,X
	STA SS,X
	DEX
	BPL DSKIN2
;
	LDA #BFCNT      ;SET BUFFER POINTERS
	STA BUF0+CMDCHN
	LDA #BFCNT+1
	STA BUF0+ERRCHN
	LDA #$FF
	STA BUF0+BLINDX
	STA BUF1+BLINDX
.SKIP
	LDA #ERRCHN
	STA LINTAB+ERRSA
	LDA #CMDCHN+$80
	STA LINTAB+CMDSA
	LDA #LXINT      ;LINDX 0 TO 5 FREE
	STA LINUSE
.SKIP
	LDA #RDYLST
	STA CHNRDY+CMDCHN
	LDA #RDYTLK
	STA CHNRDY+ERRCHN
	LDA #$E0
	STA BUFUSE
	LDA #$FF
	STA BUFUSE+1
	LDA #1
	STA WPSW
	STA WPSW+1
	JSR USRINT      ;INIT USER JMP
	JSR LRUINT
;
;**********************************
;
; CONTROLLER INITIALIZATION
;
;**********************************
;
	JSR CNTINT
.SKIP 3
; SET INDIRECT VECTORS
	LDA #<DIAGOK
	STA VNMI
	LDA #>DIAGOK
	STA VNMI+1
;
	LDA #10         ;SET UP SECTOR OFFSET
	STA SECINC
	LDA #5
	STA REVCNT      ;SET UP RECOVERY COUNT
.SKIP
;*
;*******************************
;*
;*    SETERR
;*    SET UP POWER ON ERROR MSG
;*
;*    CBM DOS V2.0 (C)1979
;*
;*******************************
;*
;*
;
SETERR	LDA #$73
	JSR ERRTS0
;
;
;MUST BE CONTIGUOUS TO .FILE IDLE
;
;********************************
; INIT THE SERIAL BUS
;
;********************************
	LDA #%00011010  ; ATNA,CLKOUT,DATOUT
	STA DDRB1
;
	LDA #$00        ; DATA HI, CLOCK HI,ATNA HI
	STA PB
;
	JSR BOOT
;
.END
