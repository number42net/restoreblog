.PAGE 'GCRBIN.FAST'
MASK1=$F8
MASK2=$07
MASK2X=$C0
MASK3=$3E
MASK4=$01
MASK4X=$F0
MASK5=$0F
MASK5X=$80
MASK6=$7C
MASK7=$03
MASK7X=$E0
MASK8=$1F
;
;
;
;
;
; FAST GCR TO BINARY CONVERSION
;
;
GET4GB	LDY GCRPNT
;
	LDA (BUFPNT),Y
	AND #MASK1
	LSR A
	LSR A
	LSR A
	STA GTAB        ; HI NIBBLE
;
	LDA (BUFPNT),Y
	AND #MASK2
	ASL A
	ASL A
	STA GTAB+1
;
	INY             ; NEXT BYTE
	BNE XX05        ; TEST FOR NEXT BUFFER
	LDA NXTBF
	STA BUFPNT+1
	LDY NXTPNT
;
XX05	LDA (BUFPNT),Y
	AND #MASK2X
	ROL A
	ROL A
	ROL A
	ORA GTAB+1
	STA GTAB+1
;
	LDA (BUFPNT),Y
	AND #MASK3
	LSR A
	STA GTAB+2
;
	LDA (BUFPNT),Y
	AND #MASK4
	ASL A
	ASL A
	ASL A
	ASL A
	STA GTAB+3
;
	INY             ; NEXT
;
	LDA (BUFPNT),Y
	AND #MASK4X
	LSR A
	LSR A
	LSR A
	LSR A
	ORA GTAB+3
	STA GTAB+3
;
	LDA (BUFPNT),Y
	AND #MASK5
	ASL A
	STA GTAB+4
;
	INY             ; NEXT BYTE
;
	LDA (BUFPNT),Y
	AND #MASK5X
	CLC
	ROL A
	ROL A
	AND #1
	ORA GTAB+4
	STA GTAB+4
;
	LDA (BUFPNT),Y
	AND #MASK6
	LSR A
	LSR A
	STA GTAB+5
;
	LDA (BUFPNT),Y
	AND #MASK7
	ASL A
	ASL A
	ASL A
	STA GTAB+6
;
	INY             ; TEST FOR OVERFLOW DURING WRITE TO BINARY CONVERSION
	BNE XX06
	LDA NXTBF
	STA BUFPNT+1
	LDY NXTPNT
;
XX06	LDA (BUFPNT),Y
	AND #MASK7X
	ROL A
	ROL A
	ROL A
	ROL A
	ORA GTAB+6
	STA GTAB+6
;
	LDA (BUFPNT),Y
	AND #MASK8
	STA GTAB+7
	INY
;
	STY GCRPNT
;
;
	LDX GTAB
	LDA GCRHI,X
	LDX GTAB+1
	ORA GCRLO,X
	STA BTAB
;
	LDX GTAB+2
	LDA GCRHI,X
	LDX GTAB+3
	ORA GCRLO,X
	STA BTAB+1
;
	LDX GTAB+4
	LDA GCRHI,X
	LDX GTAB+5
	ORA GCRLO,X
	STA BTAB+2
;
	LDX GTAB+6
	LDA GCRHI,X
	LDX GTAB+7
	ORA GCRLO,X
	STA BTAB+3
;
	RTS
;
;
;
GCRHI	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $80
	.BYTE $00
	.BYTE $10
	.BYTE $FF       ;ERROR
	.BYTE $C0
	.BYTE $40
	.BYTE $50
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $20
	.BYTE $30
	.BYTE $FF       ;ERROR
	.BYTE $F0
	.BYTE $60
	.BYTE $70
	.BYTE $FF       ;ERROR
	.BYTE $90
	.BYTE $A0
	.BYTE $B0
	.BYTE $FF       ;ERROR
	.BYTE $D0
	.BYTE $E0
	.BYTE $FF       ;ERROR
;
;
;
GCRLO	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE 8
	.BYTE $00
	.BYTE 1
	.BYTE $FF       ;ERROR
	.BYTE $C
	.BYTE 4
	.BYTE 5
	.BYTE $FF       ;ERROR
	.BYTE $FF       ;ERROR
	.BYTE 2
	.BYTE 3
	.BYTE $FF       ;ERROR
	.BYTE $F
	.BYTE 6
	.BYTE 7
	.BYTE $FF       ;ERROR
	.BYTE 9
	.BYTE $A
	.BYTE $B
	.BYTE $FF       ;ERROR
	.BYTE $D
	.BYTE $E
	.BYTE $FF       ;ERROR
;
;
GCRBIN	LDA #0          ; SETUP POINTERS
	STA GCRPNT
	STA SAVPNT
	STA BYTCNT
;
	LDA #>OVRBUF
	STA NXTBF
;
	LDA #255-TOPRD
	STA NXTPNT
;
	LDA BUFPNT+1
	STA SAVPNT+1
;
	JSR GET4GB
;
	LDA BTAB
	STA BID         ; GET HEADER ID
;
	LDY BYTCNT
	LDA BTAB+1
	STA (SAVPNT),Y
	INY
;
	LDA BTAB+2
	STA (SAVPNT),Y
	INY
;
	LDA BTAB+3
	STA (SAVPNT),Y
	INY
;
GCRB10	STY BYTCNT
;
	JSR GET4GB
;
	LDY BYTCNT
;
	LDA BTAB
	STA (SAVPNT),Y
	INY
	BEQ GCRB20      ; TEST IF DONE YET
;
	LDA BTAB+1
	STA (SAVPNT),Y
	INY
;
	LDA BTAB+2
	STA (SAVPNT),Y
	INY
;
	LDA BTAB+3
	STA (SAVPNT),Y
	INY
;
	BNE GCRB10      ; JMP
;
GCRB20
	LDA BTAB+1
	STA CHKSUM
	LDA SAVPNT+1    ;RESTORE BUFFER POINTER
	STA BUFPNT+1
;
	RTS
;
;
;
.END
