;***************************************
;***************************************
;
; IEEE INTERFACE ROUTINES
;
;***************************************
;
; SET UP TO WAIT FOR ATTENTION
; INTERRUPT. WE ARE DISABLED TO
; INTERRUPTS AT THIS POINT.
;
SEWAT
	LDA #$7F        ;DISABLE ALL VIA INTS
	STA IEIER       ;*
	LDA #0          ;SET DIR = IN
	STA IEDDRA      ;*
	LDA #IEEOIO+IELSTN+IEDACD ;IDLE
	STA IEDATB      ;*
	LDA #%00110100  ;RESET ATN ACK
	STA PDCB        ;*
	JSR GLIT1       ;ENABLE ATN GLITCH CHK
	LDA #%11011100  ;SET NRFDO HIGH ON BUS
	STA IEPCR       ;*
	LDA #%00000111  ;ATN INT ON HIGH CA1 ENABLE
	STA DRCA        ;ATN INT ON LOW CA2 DISABLE
;ADD DATA REG
SEWAS
	PLA             ;GET RETURN ADR FROM STACK
	TAX             ;*
	PLA             ;*
	JSR SEWAT1      ;STATE ADDR TO TOP OF STACK
;
; THIS MUST BE FOLLOWED BY THE
; ATTENTION INTERRUPT PROCESSING
;            ROUTINE
.PAG
;***************************************
;
;  PROCESS THE ATTENTION INTERRUPT
;
;***************************************
PROCAT
	BIT DRCA        ;CHECK IF ATN CHG LATCHED
	BMI ATNWA2      ;BR IF ATN
	LDA IEDATB      ;CHK IF ATN TRUE
	AND #IEATN      ;*
	BNE ATNWA2      ;BR IF ATN TRUE
ATNIGN
	JSR IRQEX       ;WAIT FOR NEXT INT
	JMP PROCAT      ;TRY TO PROC ATTN
ATNWA2
	LDA #$7F        ;DISABLE ALL VIA INTS
	STA IEIER       ;*
	LDA #0          ;DATA DIR = INS
	STA IEDDRA      ;*
	LDA #IELSTN+IEEOIO ;LISTEN AND EOI HIGH
	STA IEDATB      ;6502 CONTROL NDACO
	LDA #%00001000  ;CA1 (DAVI) LOW=TRUE
	STA IEPCR       ;CA2 (NRFDO) HANDSHAKE
	LDA #$C1        ;INPUT LATCHING
	STA IEACR       ;*
	LDA #%00001111  ;CA1 (ATN HIGH) ENABLE
	STA DRCA        ;CA2 (ATN LOW) ENABLE
	LDA #%10000010  ;ENABLE DAVI INT
	STA IEIER       ;*
	LDA IEDATA      ;DUMMY READ TO SET NRFDO
	LDA DRDA        ;RESET ATNS
	LDA DRDB        ;RESET EOI LATCH
	LDA #%00111100  ;SET ATN ACK
	STA PDCB        ;*
	LDA IEDATB      ;CHK IF ATN LOW ALREADY
	AND #IEATN      ;*
	BEQ ASWENT      ;BR IF LOW
	JSR GLIT1       ;ENABLE ATN GLITCH CHK
	BIT DRCA        ;CHK IF ALREADY GLITCHED
	BVC NXTAS       ;BR IF NOT
	LDA #$34        ;DROP ATN ACK
	STA PDCB        ;*
NXTAS
	JSR IRQEX       ;SET STATE & EXIT
;
; THIS MUST BE FOLLOWED BY THE
; ROUTINE TO PROCESS ATTENTION
;      SEQUENCE BYTES
;
.PAG
;***************************************
;
;  PROCESS A BYTE OF THE ATTENTION
;           SEQUENCE
;
;***************************************
PRBYTE
	LDA #2          ;CHK FOR DATA RCV'D
	BIT IEIFR       ;*
	BNE ATNDAT      ;BR IF DATA
	BIT DRCA        ;CHECK IF ATN WENT AWAY
	BVC NXTAS       ;BR IF IT DIDNT CHG
	BIT IEIFR       ;CHECK IF DATA RECV'D
	BNE ATNDAT      ;BR IF DATA
;***************************************
;
;  ATTENTION WENT AWAY
;  EITHER PROCESS THE TALK / LISTEN / NOTHING
;
;***************************************
ASWENT
	LDA #%00000111  ;RE-ENABLE ATN GOING HIGH
	STA DRCA        ;*
	LDA LSNACT      ;
	ORA TLKACT      ;
	BEQ ASWEN       ;
	LDA #$34        ;RESET ATN ACK
	STA PDCB        ;*
	JSR GLIT1       ;ENABLE ATN GLITCH CHK
	LDA LSNACT      ;WAS LISTEN SELECTED
	BNE ASWEN2      ;BR TO LISTEN
	LDA TLKACT      ;WAS TALK SELECTED
	BEQ ASWEN       ;WAIT FOR NEXT ATN
	JMP TALK        ;GO DO TALK SEQUENCE
ASWEN2
	JMP LISTEN      ;LONG JMP TO IT
ASWEN
	LDA CMDPND      ;CHK IF BG CMD RCV'D
	BEQ ASWEN1      ;BR IF NOT
	STA CMDWAT      ;SET THE FLAG FOR BG
	JSR IRQDEX      ;GO DISABLE EXIT
ASWEN4
	LDA DRCA        ;CHK IF CMD PROCESSED
	AND #$3F        ;*
	CMP #$06        ;*
	BNE ASWEN3      ;BR IF IT WAS PROCESSED
	JSR IRQEX       ;EXIT NORMAL
	JMP ASWEN4      ;TEST IT AGAIN
ASWEN3
	JMP PROCAT      ;PROCESS THE ATTN IF ONE
ASWEN1
	JSR SEWAT       ;SET STATE=WAIT FOR ATN
	JMP IRQEX       ;EXIT ENABLED
;
; SUB-ROUTINE RTS TO ADR IN A&X
;
SEWAT1
	PHA             ;SAVE RETURN ADDR
	TXA             ;*
	PHA             ;*
	RTS             ;EXIT TO IT
;
;
;
; RE-ENABLE ATN GLITCH CHK HARDWARE
;
GLIT1
	LDA #$34        ;TAKE IT LOW
	STA DRCB        ;*
	LDA #$3C        ;THEN HIGH
	STA DRCB        ;*
	RTS
.PAG
;***************************************
;
;      PROCESS ATTENTION DATA
; THIS IS DATA RECEIVED WHILE ATN
; IS PULLED. THE DATA IS PRIMARY
; AND SECONDARY ADDRESSES.
;
;***************************************
ATNDAT
	LDA IEDATB      ;WAIT TILL DAVI GOES HIGH
	AND #IEDAVI     ;*
	BEQ ATNDAT      ;*
	LDA IEDATA      ;GET THE DATA
	EOR #$FF        ;INVERT IT
	STA DATA        ;SAVE IN RAM
	LDY #0
	AND #%01100000
	CMP #$40        ;TALK?
	BEQ DCDE60
	CMP #$20        ;LISTEN?
	BEQ DCDE20
	CMP #$60        ;SECONDARY?
	BEQ DCDE70
	BNE DCDE80      ;OTHER
DCDE20
	LDA DATA
	CMP LSNADR
	BEQ DCDE40      ;MY LISTEN ADDRESS
	CMP #UNLSN
	BNE DCDE30
	STY LSNACT
DCDE30
	STY ADRSED      ;NOT PRIMARY ADDRSED
	JMP DCDE80
DCDE40
	STA LSNACT
	STY TLKACT
DCDE50
	LDA #32
	STA SA          ;DEFAULT SA
	STA ORGSA
	STA ADRSED      ;PRIMARY ADDRESSED
	BNE DCDE80
DCDE60
	STY TLKACT
	LDA DATA
	CMP TLKADR
	BNE DCDE30
	STA TLKACT
	STY LSNACT
	BEQ DCDE50
DCDE70
	LDA ADRSED
	BEQ DCDE80
	LDA DATA
	STA ORGSA
	PHA
	AND #$F
	STA SA
	PLA
	AND #$F0
	CMP #$E0
	BNE DCDE80
	JSR CLOSE
DCDE80
	JMP PRBYTE      ;GET NEXT CHARACTER
;
;
.PAG
;***************************************
;
;      IEEE LISTEN ROUTINE
;
;***************************************
;
LISTEN
	JSR IRQEX       ;SET STATE & EXIT
LISTE2
	LDA #2          ;CHK IF DATA RCVD
	BIT IEIFR       ;*
	BNE LSN10       ;BR IF DATA
	BIT DRCA        ;ATTENTION ?
	BPL LISTEN      ;NO - WAIT FOR NEXT INT
	BIT IEIFR       ;CHK IF DATA RCV'D
	BNE LSN10       ;BR IF DATA
	JMP PROCAT      ;GO PROCESS ATTENTION
LSN10
	JSR FNDWCH      ; WAS LDX SA
	BCS LSN15       ;BR IF NOT OPEN
.SKIP
	LDA CHNRDY,X
	ROR A
	BCS LSN30       ;BR IF OPEN FOR LISTEN
LSN15	LDA ORGSA       ; WAS TXA
	AND #$F0        ;SA=OPEN?
	CMP #$F0
	BEQ LSN30
LSN20	LDA SA
	CMP #1
	BEQ LSN25
	JSR STOPLS      ;STOP LISTENING
	JMP ATNIGN      ;WAIT FOR ATN INT
LSN25
	LDA IEDATB      ;WAIT FOR DAVI HIGH
	AND #IEDAVI     ;*
	BEQ LSN25       ;*
	LDA IEDATA      ;LOOP AND TOSS DATA
LSNTS2	;TOSS DATA STATE
	JSR IRQEX
;
;  STATE TO GET & TOSS DATA
;
	LDA #2          ;CHK IF DATA RCVD
	BIT IEIFR       ;*
	BNE LSN25       ;IF SO JMP
	BIT DRCA        ;CHK IF ATN
	BPL LSNTS2      ;BR IF NOT
	BIT IEIFR       ;CHK IF DATA INT
	BNE LSN25       ;IF SO JMP
	JMP PROCAT      ;GO PROCESS ATN
LSN30
	LDA IEDATB      ;WAIT TILL DAVI HIGH
	AND #IEDAVI     ;*
	BEQ LSN30       ;*
	LDA DRCB        ;GET LATCHED EOI
	AND #$80        ;*
	EOR #$80        ;INVERTED
	STA EOIFLG
	BNE LISTE3      ;BR IF NO EOI
	LDA DRDB        ;RESET LATCH
LISTE3
	LDA IEDATA      ;GET DATA INVERTED
	EOR #$FF
	STA DATA
	JSR PUT
	JMP LISTE2      ;GO WAIT FOR NEXT CHAR
.PAG
;***************************************
;
;      IEEE TALK ROUTINE
;
;***************************************
TALK
	LDA #$7F        ;RESET ENABLES ON VIA
	STA IEIER       ;*
	LDA #%11111100  ;DAVO HIGH
	STA IEPCR       ;NRFDO HIGH ON BUS
	LDA #IEEOIO+IEDACD ;NOT LISTEN
	STA IEDATB      ;NOT EOI & NDACO DISABLE
	LDA #255        ;MAKE ALL OUTS
	STA IEDDRA      ;*
	LDA DRDAI       ;INIT AUTO ACK = ON
	ORA #$20        ;*
	STA DRDAI       ;*
	STA DRDA        ;*
	LDA #%10011100  ;NRFDO = HIGH ON BUS
	STA IEPCR       ;NDACI HIGH=TRUE
;HANDSHAKE NDACI & DAVO
	LDA #%10010000  ;NDACI ENABLE
	STA IEIER       ;*
	JSR FNDRCH      ;CHK IF CHNL OPEN
	BCS NOTLK       ;BR IF NOT
	LDX LINDX       ;CHNL NUMBER
	LDA REGET,X     ;CHK IF SHOULD GET/NOT
	BNE TLK03       ;GO DO GET
	LDA #LRF        ;EOF ?
	JSR TSTFLG      ;*
	BEQ TLK00       ;BR IF NOT EOF
	LDA #NOREC      ;RECORD NOT PRESENT
	JSR ERRMSG      ;*
TLK00
	LDX LINDX       ;FCB #
	LDA CHNCUR,X    ;GET LAST BYTE
	STA IEDATA      ;SEND THE DATA
	LDA CHNEOI,X    ;LAST EOI
	BPL NOTLK       ;BR IF NOT TALK
	AND #EOISND     ;LEAVE ONLY EOI
	BNE TLK01       ;BR IF NOT END
	LDA #IEDACD     ;SEND EOI
	BNE TLK02       ;BRA
TLK01
	LDA #IEEOIO+IEDACD ;NO EOI
TLK02
	STA IEDATB      ;SEND EOI/NOT
	JMP TALKST      ;GO NORMAL
TLK03
	LDA #0          ;RESET SWITCH
	STA REGET,X     ;*
TLKLOP
	JSR FNDRCH
	BCS NOTLK       ; BR IF CHANNEL NOT READY
TALK1
	LDX LINDX
	LDA CHNRDY,X
	BMI TLK10
NOTLK
	LDA #$7F        ;DISABLE VIA INTS
	STA IEIER       ;*
	JMP ATNIGN      ;WAIT FOR ATTENTION
TLK10
	LDA CHNDAT,X
	EOR #$FF
	STA IEDATA      ;SEND THE DATA
	STA CHNCUR,X    ;SAVE IMAGE
	LDA CHNRDY,X    ;SET UP EOI TERM
	STA CHNEOI,X    ;SAVE IMAGE
	AND #EOISND     ;*
	BNE TLK05       ;BR IF NO EOI
	LDX #IEDACD     ;SEND EOI
	BNE TLK06       ;GO COMMON
TLK05
	LDX #IEEOIO+IEDACD ;SEND EOI NOT
TLK06
	LDA DRDAI       ;TURN OFF AUTO ACK
	AND #$DF        ;*
	STA DRDAI       ;*
	STA DRDA        ;*
	STX IEDATB      ;SEND THE EOI TERM
	JSR GET
	LDA DRDAI       ;SET AUTO ACK
	ORA #$20        ;*
	STA DRDAI       ;*
	STA DRDA        ;*
	BNE TLKS1       ;BRA
;***************************************
;
;  NOW WAIT TILL PET ACCEPTS THE BYTE
;
;***************************************
TALKST	;TALK STATE
	JSR IRQEX       ;EXIT TILL NEXT INT.
TLKS1
	LDA #$10        ;DATA EXCEPTED
	BIT IEIFR       ;DATA ACCEPTED ?
	BNE TLKLOP      ;BR IF ACCEPTED
	BIT DRCA        ;CHK IF ATN
	BPL TALKST      ;BR IF NOT
	BIT IEIFR       ;DATA ACCEPTED ?
	BNE TLKLOP      ;BR IF ACCEPTED
	JMP PROCAT      ;GO PROCESS ATN
.PAG
;***************************************
;
;  STOP LISTENING ROUTINE
;
;***************************************
STOPLS
	LDA #$7F        ;RESET VIA INTS
	STA IEIER       ;*
	LDA #IEDACD+IELSTN+IEEOIO ;NRRDO & NDACO
	STA IEDATB      ;*
	LDA #%00001100  ;NRFDO = HIGH ON BUS
	STA IEPCR       ;*
	RTS             ;EXIT TO CALLER
;
;
.END
