; VALIDATE FILES WITH BAM
;  CREATE NEW BAM ACCORDING TO 
;  CONTENTS OF FILES ENTERED IN DIR
.SKIP
VERDIR
	LDA #0          ;RESET ERROR FLAG
	STA ERSAVE      ;*
	LDA #<LOGBEG    ;SET UP LOG OUT AREA PTR
	STA DSTPTR      ;*
	LDA #>LOGBEG    ;*
	STA DSTPTR+1    ;*
	JSR CLRCHN      ;FREE ALL CHANNELS
	JSR SIMPRS      ;EXTRACT DRIVE #
	LDX #>IFM       ;SET UP INIT MSG
	LDA #<IFM       ;*
	JSR MOVCHS      ;MOVE MSG TO LOG AREA
	JSR INITDR      ;INIT THE DRIVE FOR NAME, ID
	JSR FLAGVL      ;FLAG VOL LBL VIP
	JSR GETBUF      ;GET A BUFFER
	BPL VD09        ;BR IF I GOT ONE
	LDA #NOCHNL     ;ELSE GIVE THE ERROR
	JMP CMDERR
VD09
	STA HDTMP1      ;SAVE THE BUFFER ADDR
	LDX #>RALM      ;SET UP RE-ALLOC MSG
	LDA #<RALM      ;*
	JSR MOVCHS      ;MOVE TO LOG OUT AREA
	JSR HDRAL       ;REBUILD BAM <HD>
	LDA HDTMP1      ;GET THE BUFFER ADDR
	JSR FREBUF      ;FREE THE BUFFER
	JSR INITDR      ;INITIALIZE THE DRIVE
	LDA #0
	STA DELIND
	JSR MDIRM       ;MOVE DIRECTORY MSG
	JSR SRCHST      ;SEARCH FOR FIRST FILE
	BEQ VD10        ;NOT FOUND
	JMP VD25        ;FOUND ONE
.SKIP
VD10
	LDX DRVNUM      ;POINT TO FIRST DIR
	LDA HDDS,X      ;GET SECTOR <HD>
	STA SECTOR      ;...IN BAM
	LDA HDDT,X      ;GET TRACK <HD>
	STA TRACK
	JSR MRKBAM
	JSR HDISU       ;SET UP IND WORD <HD>
	JSR HDWBM       ;WRITE OUT BAM <HD>
;BLOCK COUNT
	LDX #>CPERM     ;COMPRESS ERR MSG
	LDA #<CPERM     ;*
	JSR MOVCHS      ;*
	LDA ERSAVE      ;CHK IF ANY ERRORS
	BNE VD10A       ;BR IF ERRORS
	JSR COMPRS      ;COMPRESS DIRECTORY
VD10A
	LDX #>VEND      ;LOG VALIDATE END
	LDA #<VEND      ;*
	JSR MOVCHS      ;*
	LDA ERSAVE      ;CHK IF ERROR ALONG THE WAY
	BEQ VDA         ;BR IF NOT
	JSR INITDR
	LDA ERSAVE      ;GIVE PROPER ERROR CODE
	JSR ERROR       ;ELSE GIVE ERROR NOW
VDA
	JSR UNFLAG      ;RESET VIP FLAG IN VOL
	LDX DRVNUM      ;RESET IN MEM FLAG
	LDA #255-HDVIP  ;*
	AND HDDFLG,X    ;*
	STA HDDFLG,X    ;*
	JSR INITDR
	JMP ENDCMD
.SKIP
VD15	INY
	LDA (DIRBUF),Y
	PHA             ;SAVE TRACK
	INY
	LDA (DIRBUF),Y
	PHA             ;SAVE SECTOR
	LDX DIRBUF+1    ;GET HIGH ADDR
	LDA DIRBUF      ;GET LOW
	CLC             ;ADD DISP TO FILENAME
	ADC #03         ;*
	JSR MOVCHS      ;MOVE FILENAME TO LOG
	LDY #19         ;GET SS TRACK
	LDA (DIRBUF),Y  ;<HD>
	STA TRACK       ;YES - SAVE TRACK
	INY
	LDA (DIRBUF),Y  ;GET SS SECTOR
	STA SECTOR
	LDY #0          ;<HD>
	LDA (DIRBUF),Y  ;CHK IF REL FILE <HD>
	AND #7          ;*
	CMP #RELTYP     ;*
	BNE VD17        ;BR IF NOT RELATIVE FILE
	JSR MRKBAM      ;VALIDATE SS BY LINKS
VD17	PLA
	STA SECTOR      ;NOW DO DATA BLOCKS
	PLA
	STA TRACK
	JSR MRKBAM      ;SET BIT USED IN BAM
VD20
	JSR MDIRM       ;MOVE IN DIRECTORY MSG
	JSR SRRE        ;SEARCH FOR MORE
	BNE VD25        ;MORE FILES
	JMP VD10        ;NO MORE FILES
VD25
	LDY #0
	LDA (DIRBUF),Y
	BMI VD15
	JSR MDIRM       ;MOVE IN DIRECTORY MSG
	JSR DELDIR      ;NOT CLOSED DELETE DIR
	JMP VD20
.SKIP
MRKBAM	;MARK BAM WITH FILE SECTORS
	JSR USEDTS
	LDA #IRSA       ;OPEN THE READ CHNL
	STA SA          ;*
	LDA #1          ;*
	STA TYPE        ;*
	LDA #2          ;TWO BUFFERS
	JSR GETRCH      ;GET LINDX & 2 BUFFS
	JSR INTPNT      ;INITIALIZE POINTERS
MARK1
	JSR SETHDR      ;SET UP HEADERS
	LDA #$FF        ;RETURN TO CALLER ON ERRORS
	STA JOBRTN      ;*
	JSR RDBUF       ;ISSUE THE READ
	JSR WATJOB      ;WAIT FOR COMPLETION
	CMP #2          ;CHK FOR ERRORS
	BCS MARK2       ;JUMP IF ERROR
	JSR GETBYT      ;GET NEXT SECTOR ADDR
	STA SECTOR      ;*
	JSR GETBYT      ;*
	STA TRACK       ;*
	LDA #$FF        ;CHK IF END OF CHAIN
	CMP SECTOR      ;*
	BEQ MARK3       ;BR IF EOC
	JSR USEDTS      ;MARK SECTOR USED
	JMP MARK1
MARK2	;ERROR ON THE READ
	STA ERSAVE      ;SAVE THE ERROR CODE
	JSR ADVANC      ;ADV POINTER
MARK3
	JMP FRECHN      ;RELEASE THE CHANL & RTS
;***************************************
;
;   FLAG VOLUME LABEL TO INDICATE VERIFY
;         IN PROGRESS
;
;***************************************
FLAGVL
	JSR HDORV       ;READ VOLUME LABEL
	LDY #HDFLAG     ;PT TO FLAG BYTE
	LDA (HDBMP),Y   ;GET FLAG
	ORA #HDVIP      ;SET VERIFY IN PROGRESS
	STA (HDBMP),Y   ;PUT FLAG BACK
FLAG1
	JSR HDCSUD      ;SET UP
	ORA #WRITE      ;FOR WRITE
	JMP DOIT        ;WRITE VOL LBL & RETURN
;***************************************
;
;   RESET VOLUME LABEL FLAG
;
;***************************************
UNFLAG
	JSR HDORV       ;READ THE VOLUME LABEL IN
	LDY #HDFLAG     ;PT TO FLAG BYTE
	LDA (HDBMP),Y   ;GET IT
	AND #$FF-HDVIP  ;RESET VIP BIT
	STA (HDBMP),Y   ;PUT IT BACK
	LDY #HDDB1      ;ADDR OF DIR
	LDA NDSEC       ;NEW DIR SEC ADDR
	STA (HDBMP),Y   ;TO VOL LBL
	INY             ;BUMP TO NEXT
	LDA NDTRK       ;NEW DIR TRK ADDR
	STA (HDBMP),Y   ;TO VOL LBL
	JMP FLAG1       ;GO WRITE VOL TO DISK
;***************************************
;
;  MOVE CHAR STRING TO TRACE AREA
;
;***************************************
MOVCHS
	LDY #0          ;OFFSET
	STA SRCPTR      ;SET UP IND WORD
	STX SRCPTR+1    ;*
	LDX #16         ;NO MORE THAN 16 CHRS
	LDA (DSTPTR),Y  ;CHK IF OVERFLOW
	CMP #$01        ;*
	BEQ MOVCH3      ;IF SO EXIT
MOVCH1
	LDA (SRCPTR),Y  ;GET
	STA (DSTPTR),Y  ;PUT
	BMI MOVCH2      ;BR IF END OF STRING
	INY             ;BUMP TO NEXT
	DEX             ;CHK IF MAX YET
	BEQ MOVCH2      ;BR IF END
	BNE MOVCH1      ;BRA -LOOP TILL DONE-
MOVCH2
	LDA #',         ;COMMA
	STA (DSTPTR),Y  ;*
	INY             ;BUMP TO NEXT
	STY POSNXT      ;SAVE PTR TO NEXT
	LDA #0          ;*
	STA (DSTPTR),Y  ;*
MOVCH3
	RTS             ;EXIT TO CALLER
;***************************************
;
;  ADVANCE POINTER & CHECK FOR END OF LOG AREA
;
;***************************************
ADVANC
	LDA POSNXT      ;ADD OFFSET TO POINTER
	CLC             ;*
	ADC DSTPTR      ;*
	STA DSTPTR      ;16 BITS WORTH
	LDA DSTPTR+1    ;*
	ADC #0          ;*
	STA DSTPTR+1    ;*
	LDA #>LOGEND    ;CHK IF PAST END OF LOG
	CMP DSTPTR+1    ;*
	BCS ADVAN1      ;BR IF NOT PAST END
	LDA #$01        ;SET OVERFLOW
	LDY #0          ;OFFSET
	STA (DSTPTR),Y  ;STORE OVERFLOW FLAG
ADVAN1
	RTS             ;EXIT TO CALLER
;***************************************
;
;  MOVE IN DIRECTORY READ FAILURE MSG
;
;***************************************
MDIRM
	LDX #>DFM       ;DIR FAIL MSG
	LDA #<DFM       ;*
	JMP MOVCHS      ;JSR RETURN
;***************************************
;
;  LOG OUT CANNED MSGS
;
;***************************************
IFM
	.BYTE 'INIT FAILED',$80
RALM
	.BYTE 'REBUILD BAMS NG',$80
DFM
	.BYTE 'DIRECTORY FAILED',$80
VEND
	.BYTE 'END',$80
CPERM
	.BYTE 'COMPRESS ERROR',$80
.END
