	.page
	.subttl 'noise'
;    sound command
;          syntax :     sound voice,freq,duration
;    where
;       voice   1-3
;       freq    0-1023
;       durat.  0-65535
;
;    (voice 3 is really voice 2, switched to 'noise')

tone
	jsr getbyt	;start with voice number
	dex
	cpx #3
	bcs tonerr	;illegal value
	stx voicno

	jsr comwrd	;check for comma, get freq (actually a divider) in y,a
	cmp #4	   	;ms byte must be < 4
	bcs tonerr
	sty tmpton
	sta tmpton+1

	jsr comwrd	;check for comma, get 2 byte duration in y,a

	ldx voicno
	cpx #2
	bne tone10
	dex

; set up ted with values. store 2's complement of duration in
; a storage area.

tone10
	pha
	cpy #0
	bne tone20
	cmp #0
	bne tone20
	iny		;fake a 1-jiffy duration so next interrupt turns off voice
	bne tone40	;duration=0 is a special case:shut off voice immediatly

tone20
	tya		;save .y
	pha
tone30
	jsr iscntc	;check for stop key
	lda mtimhi,x
	ora mtimlo,x
	bne tone30	;wait for previous tone, if any, to shut off
	pla		;restore .y
	tay
tone40
	tya		;get lsbyte of duration,
	eor #$ff	;and make 2's comp.
	clc
	adc #1
	sei
	sta mtimlo,x
	pla
	eor #$ff
	adc #0
	sta mtimhi,x

	lda tmpton	;write freq's into ted regs.
	sta tedmlo,x
	lda tontab,x
	tax
	lda tedmhi,x
	and #$fc
	ora tmpton+1
	sta tedmhi,x

	ldx voicno	;get real voice #
	lda powtwo,x	;turn on voice
	ora tedvoi
	sta tedvoi
	cli
	rts

tonerr
	jmp fcerr
tontab
	.byte 2, 0

powtwo	.byte $10, $20, $40



; volume command
;    syntax:   vol volume-level
;  where
;  volume-level is 0-8

vol
	jsr getbyt
	cpx #$09
	bcs tonerr	;illegal value
	stx voicno
	lda tedvoi
	and #$f0
	ora voicno
	sta tedvoi
	rts

;.end
