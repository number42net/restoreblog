	.page
	.subttl 'extensions-2   01/18/84'
do
	ldy #1
do05
	lda txtptr,y	;save current pointers for stack entry
	sta tmptxt,y
	lda curlin,y
	sta tmplin,y
	dey
	bpl do05

	jsr chrgot	;look for 'while' or 'until'
	beq doyes	;unconditional
	cmp #untltk
	beq do10
	cmp #whiltk
	bne snrjmp
;
;  here for 'while'
;
	jsr frmjmp
	lda facexp
	bne doyes	;conditional evaluated true
dono
	jsr chrgot
	jmp fnd010	;advance to end of block, do rts
;
;  here for 'until'
;
do10
	jsr frmjmp
	lda facexp
	bne dono
doyes
	ldy #5
	jsr getstk
	dey
	lda tmptxt+1
	sta (tos),y
	dey
	lda tmptxt
	sta (tos),y
	dey
	lda tmplin+1
	sta (tos),y
	dey
	lda tmplin
	sta (tos),y
	dey
	lda #dotk
	sta (tos),y
	rts



exit
	jsr popdgo	;pop do entry off stack
	jsr chrgot
	beq fnd010
snrjmp
	jmp snerr

;  find end of current block
;
fndend
	jsr chrget
fnd010
	beq fnd50	;end of statement
	cmp #looptk
	beq fnd60	;a hit!
	cmp #'"'	;quote
	beq fnd40
	cmp #dotk
	bne fndend	;keep looking
	jsr fndend	;recursivly
	jmp dono	;do a chrgot,go to fnd010

fnd40
	jsr chrget	;look for next quote
	beq fnd50	;end of statement will do
	cmp #'"'
	bne fnd40
	beq fndend

fnd50
	cmp #':'	;end of line or end of stmt?
	beq fndend	;just stmt, keep going
	bit runmod	;direct mode?
	bpl fnderr	;yes, so not found
	ldy #2
	jsr indtxt	;end of text?
	beq fnderr	;'fraid so
	iny		;y=3
	jsr indtxt	;update pointers
	sta curlin
	iny
	jsr indtxt
	sta curlin+1
	tya
	clc
	adc txtptr
	sta txtptr
	bcc fndend
	inc txtptr+1
	bne fndend

fnd60
	jmp data	;read to end of statement,rts



loop
	beq popngo	;no conditionals, just do it
	cmp #whiltk
	beq loop10
	cmp #untltk
	bne snrjmp
;
;  here for 'until'
;
	jsr frmjmp
	lda facexp
	beq popngo	;false, do it again!
popdgo			;pop, but don't go
	lda #dotk
	sta srchtk
	jsr search
	bne poperr	;branch if not found
	jsr movfnd
	ldy #5
	jmp rlsstk
fnderr
	ldx #errlnf
	.byte $2c
poperr
	ldx #errlwd    	;loop without do
	jmp error
;
;  here for 'while'
;
loop10
	jsr frmjmp
	beq popdgo	;false, exit
popngo
	jsr popdgo
	dey
	lda (fndpnt),y	;restore pointers
	sta txtptr+1
	dey
	lda (fndpnt),y
	sta txtptr
	dey
	lda (fndpnt),y
	jsr retpat	;(** 01/18/84 fixes 'loop' to a direct mode 'do')
	lda (fndpnt),y
	sta curlin
	jmp do

frmjmp
	jsr chrget
	jmp frmevl



tron			;trace mode on
	lda #$ff
	.byte $2c

troff			;trace mode off
	lda #0
	sta trcflg
	rts

;.end
;01/18/84 patch to reset 'runmod' after 'loop' ends a direct 'do'
