.PAGE 'WES002'
;------------------------------------------
;    PLAYER MOVE SUBROUTINE
;------------------------------------------

; PLAYER DIE FLAG SET IN ROUTINE

PLAYER
	LDA TIMSL       ;PLAYER MOVE CICLE CHECK
	AND #$01
	BEQ PLYM1
	RTS
PLYM1
	LDA DIW0        ;PLAYER DIE CHECK
	BPL *+3
	RTS

	JSR RDKEY       ;INPUT DIRECTION CALL
	LDA #0          ;DIRECTION (DRCSUB) SET SPRITENO
	STA DRSPNA
	LDA #SP0SET
	STA DRSPNB
	LDA INDRCF      ;DRCSUB SET MOVE DIRECT
	STA DRCF
	LDA PLDRF
	STA SVDRCF
	JSR DRCSUB      ;DIRECTION SUB CALL
	LDA SVDRCF
	STA PLDRF
PLAYM2
	LDX DRCF        ;CHRACTER SETTING
	LDA PLTBL,X
	BNE PLAYM3
	LDX PLDRF
	LDA PLTBL,X
PLAYM3
	STA SV07F8
	RTS

PLTBL
	.BYTE $00,$E8,$E7,$E6,$E5

.PAGE
;-------------------------------------------------------
;-         DIRECTION MOVE SUBROUTINE             -
;-------------------------------------------------------
; FLAG
;     * SPRITENO   DRSPNA       DRSPNB
;       SP0       0     %00000001
;       SP1       2     %00000010
;       SP2       4     %00000100
;       SP3       6     %00001000
;       SP4       8     %00010000
;       SP5      10     %00100000
;       SP6      12     %01000000
;       SP        14    %10000000
;     * DRCF
;       --------MOVE DIRECTION FLAG       1=UP
;                                         2=DOWN   SUB CALL
;                                         3=LEFT      AFTER FLAG SET
;                                         4=RIGHT
;                                         0=NO MOVE
;     * DRCDIE
;               SPRITE DIE FLAG   SUB OF RET TO SET TO FLAG
;                                      ACTIVE 'FF'
;
;
;     * DRBEMX
;       ---------ENEMY BEEM X ADDRESS SET
;     * DRBEMY
;       ---------ENEMY BEEM Y ADDRESS SET

DRCSUB
	LDX DRSPNA
	LDA #0          ;DRCSUB INIT
	STA WK0
	JSR DRC2SU
	LDA DRSPNB      ;SPRITE ADDRESS TO CHRCTER ADDRESS CHENG
	STA CHCSPN
	LDA SP0X,X
	STA CHCADX
	LDA SP0Y,X
	STA CHCADY
	JSR CHCNG
	LDA DRCF
	BNE *+5         ;NO MOVE AS AFTER CHECK
	JMP DRC1

	LDA SVDRCF
	CMP #3          ;SAVE DIRCTION FLAG CHECK
	BCS DRLRM       ; LEFT RIGHT ?  ___ YES

DRUDM	;-------  NO  UP-DOWN CHECK
	LDA DRCF        ;THIS DIRCTION
	CMP #3
	BCC DRCUP       ;UP DOWN ? ^^^ YES AS Y ADDRESS CHENG
	DEC CHCADY      ;NO LEFT-RIGHT DIRCTION
	LDA CHCADY
DRUD02	;--------  Y ADDRESS POSITION CHECK
	BEQ DRUD03      ;OK ? AS SET Y ADDRESS
	CMP #1
	BEQ DRUD03
	CMP #$FF
	BEQ DRUD03
	CMP #00
	BCC DRUD04      ;NOT POSITION AS AFTER CHECK
	INC WK0
	SEC
	SBC #3
	JMP DRUD02

DRUD03	;--------  Y ADDRESS SET
	LDX WK0
	LDA SPYTBL,X
	LDX DRSPNA
	STA SP0Y,X
	JMP DRCUP       ;TO SAVE Y ADDRESS

DRUD04	;NO MOVE PROCESS
	LDA #0
	STA DRCF
	JMP DRC1

DRLRM	;------- LEFT RIGHT CHENG MOVE
	LDA DRCF
	CMP #3          ;THIS DIRCTION
	BCS DRCUP       ;LEFT-RIGHT ? ___ YES AS X ADDRESS CHENG
	LDA CHCADX      ; UP DOWN POSITION CHECK
	SEC
	SBC #1
DRLR02
	BEQ DRLR03      ;OK ? AS SET X ADDRESS
	CMP #1
	BEQ  DRLR03
	CMP #$FF
	BEQ DRLR03
	CMP #00
	BCC DRUD04      ;NOT POSITION AS AFTER CHECK
	INC WK0
	SEC
	SBC #3
	JMP DRLR02

DRLR03	;------- X ADDRESS SET
	LDX WK0
	CPX #10
	BNE DRLR31
	LDA DRSPNB
	ORA MSIGX
	STA MSIGX
DRLR31
	LDA SPXTBL,X
	LDX DRSPNA
	STA SP0X,X

DRCUP	;UP TEST
	LDA DRCF
	STA SVDRCF
	LDX DRSPNA
	LDA DRCF
	CMP #UP         ;DIRECTION AS UP ?
	BNE DRCDOW      ;------NO AS JMP DOWN
	DEC SP0Y,X      ;------YES INCREMENT Y ADDRESS
	DEC SP0Y,X
	JMP DRC1

DRCDOW
	CMP #DOWN       ;DIRECTION AS DOWN ?
	BNE DRCLEF      ;-------NO AS JMP LEFT
	INC SP0Y,X      ;-------YES INCREMENT Y ADDRESS
	INC SP0Y,X
	JMP DRC1

DRCLEF
	CMP #LEFT       ;LEFT ?
	BNE DRCRIG      ;-------NO AS RIGHT
;-------YES
	DEC SP0X,X
	DEC SP0X,X
	LDA SP0X,X
	CMP #$FE
	BCC DRCLF1      ;BORROW FLAG TEST
	LDA DRSPNB      ;BORROW SET
	EOR #$FF
	AND MSIGX
	STA MSIGX
DRCLF1
	JMP DRC1

DRCRIG
	CMP #RIGHT      ;RIGHT ?
	BNE DRC1        ;-------NO AS AFTER CHECK
	INC SP0X,X      ;-------YES INCREMENT X ADDRESS
	INC SP0X,X
	LDA SP0X,X
	CMP #2
	BCS DRC1        ;CARRY TEST
	LDA DRSPNB      ;CALLY SET
	ORA MSIGX
	STA MSIGX
	JMP DRC1

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

DRC2SU
	LDA SP0X,X
	STA CHCADX
	LDA SP0Y,X
	CLC
	SBC #06
	STA CHCADY
	LDA DRSPNB
	STA CHCSPN
	JSR CHCNG
	LDA DRCF        ;DIRCTION ?
	BEQ DRC399
	CMP #03
	BCC DRC32       ;UP OR DOWN
	BEQ DRC31       ;LEFT OR RIGHT ?
	INC CHCADX
	JMP DRC35
DRC31
	DEC CHCADX      ;LEFT
	JMP DRC35
DRC32
	CMP #01
	BNE DRC33       ;UP
	DEC CHCADY
	JMP DRC35
DRC33
	INC CHCADY      ;DOWN
DRC35
	LDA #04
	STA ADLS+1
	LDA CHCADX
DRC36
	LDY CHCADY
	BEQ DRC37
	DEC CHCADY
	CLC
	ADC #40
	BCC DRC36
	INC ADLS+1
	JMP DRC36
DRC37
	STA ADLS
	LDY #00
	LDA (ADLS),Y
	BEQ DRC399
DRC38
	LDA #00
	STA DRCF
DRC399
	RTS

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

DRC4
DRC1

; ----  WORP TEST -----

DRC5
	LDA DRSPNB
	AND MSIGX
	BNE DRC6
	LDA SP0X,X
	CMP #22         ;LEFT-RIGHT WORP CHECK
	BCS DRC7
	LDA DRSPNB      ;YES------
	ORA MSIGX       ;ADDRESS CHENGE
	STA MSIGX
	LDA #$40
	STA SP0X,X
	RTS

; ----  RIGHT-LEFT WORP CHECK ----

DRC6
	BEQ DRC7
	LDA SP0X,X
	CMP #$42
	BCC DRC7
	LDA DRSPNB      ;YES-------
	EOR #$FF        ;ADDRESS CHENGE
	AND MSIGX
	STA MSIGX
	LDA #$18
	STA SP0X,X

DRC7
	LDA SP0Y,X
	CMP #49
	BCS SPXTBL-1
	INC SP0Y,X
	INC SP0Y,X
	RTS

SPXTBL	.BYTE 25,49,73,97,121,145,169,193,217,241,10,34,57
SPYTBL	.BYTE 51,75,99,123,147,171,195

.PAGE
;=========================================
;       SPRITE ADDRESS TO CHRACTER CHENG
;              NAME ( CHCNG )
;============================================
;            FLAG
;                 SPRITE NO    -- CHCSPN
;                    X ADDRESS -- CHCADX
;                    Y   -- CHCADY


CHCNG
	LDA CHCADY      ;Y ADDRESS CHENGE
	SEC
	SBC #38
	LSR A
	LSR A
	LSR A
	STA CHCADY
;--------------  X ADDRESS CHENGE
	LDA CHCADX
	SEC
	SBC #11
	BCS CHC00
	CLC
	BCC CHC02
CHC00
	PHA
	LDA CHCSPN
	AND MSIGX
	CLC
	BEQ CHC01
	SEC
CHC01	PLA
CHC02	ROR A
	LSR A
	LSR A
	STA CHCADX
	RTS

.PAGE
;======================================
; 1 CHRACTER PRINT SUB
;======================================
;
;     FLAG
;         DISX -- CHRACTER X ADDRESS
;         DISY --         Y
;         DISCHR - CHRACTER NUMBER

DISPL
DISPR
DISIN
	LDA #0
	STA ADLS+1
	LDA DISX
DIS01
	LDY DISY
	BEQ DIS10
	DEC DISY
	CLC
	ADC #40
	BCC DIS01
	INC ADLS+1
	JMP DIS01
DIS10
	STA ADLS
	LDA ADLS+1
	CLC
	ADC #4
	STA ADLS+1
	LDY #0
	LDA DISCHR
	STA (ADLS),Y
	RTS

;=============================================
;        PLAYER BEEM FIRE OR MOVE SUB
;=============================================
;
;           FLAG
;                PLMCI   --- PLAYER BEEM CICLE CHECK
;                            ACTIVE  '0'
;                PLBEX   --- PLAYER BEEM  X  ADDRESS
;                PLBEY   ---          Y
;                PLDRCF  --- PLAYER BEEM DIRCTION
;                           NON BEEM   '0'
;                           UP   '1'
;                           DOWN       '2'
;                           LEFT       '3'
;                           RIGHT      '4'
;                PBMCHR  --- BEEM CHRACTER

.PAGE
PLBUL
	LDA DIW7        ;FIRE CHECK
	BPL *+5
	JMP PLDFIR
PLBU04
	LDA COLLSC      ;CHARACTOR - BEEM CRASH CHECK
	AND #SP7SET
	BEQ PLBU05
PLBU41
	LDA #$FF        ;RESET BEEM
	STA DIW7
	LDA #SP7RES
	AND SPENA
	STA SPENA
	LDA #SP7RES
	AND MSIGX
	STA MSIGX
	RTS

PLBU05
	LDA MSIGX       ;BEEM ADDRESS LIMIT CHECK
	AND #SP7SET
	BNE PLBU61
	LDA SP7X        ;RIGHT LIMIT ?
	CMP #20
	BCC PLBU41      ;YES RESET BEEM
	BCS PLBU06      ;JMP AFTER CHECK
PLBU61
	LDA SP7X        ;LEFT LIMIT ?
	CMP #$42
	BCS PLBU41      ;YES RESET BEEM
PLBU06
	LDA PLDRCF      ;ADDRESS CHENG
	CMP #3
	BCC PLBU52
	BNE PLBU51
	DEC SP7X        ;LEFT
	DEC SP7X        ;LEFT
	DEC SP7X        ;LEFT
	DEC SP7X        ;LEFT
	LDA SP7X        ;MSIGX CHECK
	CMP #$FC
	BCC PLBU51-1
	LDA #SP7RES
	AND MSIGX
	STA MSIGX
	RTS

PLBU51
	INC SP7X        ;RIGHT
	INC SP7X        ;RIGHT
	INC SP7X        ;RIGHT
	INC SP7X        ;RIGHT
	LDA SP7X
	CMP #$04
	BCS PLBU51-1
	LDA #SP7SET
	ORA MSIGX
	STA MSIGX
	RTS

PLBU52
	CMP #1          ;UP
	BNE PLBU53
	DEC SP7Y
	DEC SP7Y
	DEC SP7Y
	DEC SP7Y
	LDA SP7Y
	CMP #42
	BCC PLBU54
	RTS

PLBU53
	INC SP7Y        ;DOWN
	INC SP7Y        ;DOWN
	INC SP7Y        ;DOWN
	INC SP7Y        ;DOWN
	LDA SP7Y
	CMP #202
	BCC *+5

PLBU54	JMP PLBU41

	RTS

PLDFIR
	CMP #$FF
	BNE PLD99
	LDA DIW0
	BPL *+3
PLD99
	RTS

	LDA FIRE        ;NO FIRE CHECK
	BMI *+3
	RTS
	LDA #04
	JSR SOUND
	LDA SP0X        ;FIRE PUSH AS ADDRESS SET
	STA SP7X
	LDA SP0Y
	STA SP7Y
	LDA MSIGX
	AND #SP0SET
	BEQ PLD100
	LDA #SP7SET
	ORA MSIGX
	STA MSIGX
	JMP PLD00

PLD100
	LDA #SP7RES
	AND MSIGX
	STA MSIGX
PLD00
	LDA PLDRF
	STA PLDRCF
	CMP #3
	BCC PLD02
	LDA #$FD
	STA SV07F8+7
	JMP PLD05

PLD02
	LDA #$FE
	STA SV07F8+7
PLD05
	LDA #SP7SET
	ORA SPENA
	STA SPENA
	LDA #00
	STA DIW7
	RTS

;===================================================
;          WOLF MOVE SUB ROUTINE  ( NAME : WOLMS )
;===================================================
;
;        FLAG
;             DIWS   ---- WOLF CICLE FLAG

WOLMS
	LDA SPUP
	BNE WOLST
	LDA TIMSL
	AND #01
	BNE WOLST
	RTS

WOLST	LDA DIW0
	BPL *+3
	RTS

	LDX #01
	STX WK7
WOLM00
	LDA DIW0,X
	BPL WOLM10
WOLM01
	INC WK7
	LDX WK7
	CPX #07
	BNE WOLM00
	RTS

WOLM10
	LDA PNATBL,X
	STA DRSPNA
	LDA SPSETB,X
	STA DRSPNB
	DEC WOCONT,X
	DEC WOCONT,X
	BMI WOLM11
	LDA WODRF,X
	JMP WOLM04

WOLM11
	LDA #23
	STA WOCONT,X
	LDX DRSPNA
	LDA RANDOM      ;X - Y DIRCTION SET
	AND #SP0SET
	BEQ WOLM03

	LDA SPSETB,X
	ORA #01
	AND MSIGX
	BEQ WOLM02
	CMP #01
	BEQ WOLM21
	CMP SPSETB,X
	BEQ WOLM22
WOLM02
	LDA SP0X        ;X DIRCTION ?
	CMP SP0X,X
	BCC WOLM22
WOLM21
	LDA RANDOM      ;YES
	AND #3          ;LEFT ? --  RIGHT ?
	BEQ WOLM03-5
	LDA #RIGHT      ;SET OF RIGHT
	JMP WOLM04

WOLM22
	LDA RANDOM      ;SET OF LEFT
	AND #3
	BEQ WOLM22-5
	LDA #LEFT
	JMP WOLM04

WOLM03
	LDA SP0Y        ;Y DIRCTION
	CMP SP0Y,X      ;UP ? -- DOWN ?
	BCC WOLM32
WOLM31
	LDA RANDOM      ;SET OF DOWN
	AND #3
	BEQ WOLM04-2
	LDA #DOWN
	JMP WOLM04
WOLM32
	LDA RANDOM      ;SET OF UP
	AND #3
	BEQ WOLM32-5
	LDA #UP
WOLM04
	LDX WK7
	STA DRCF
	LDA WODRF,X
	STA SVDRCF
	JSR DRCSUB
	LDA DRCF
	BNE *+5
	JSR WOLM06
	LDX WK7
	LDA SVDRCF
	STA WODRF,X
	CLC
	ADC ENPUT-1,X
	TAX
	LDA WOTBL,X
	BNE WOLM41
	BEQ WOLM05
WOLM41
	LDX WK7
	STA SV07F8,X
WOLM05
	JMP WOLM01

WOLM06
	LDA SVDRCF
	CLC
	ADC #01
	CMP #04
	BCC WOLM61
	LDA RANDOM
	AND #03
WOLM61
	STA SVDRCF
	RTS


PNATBL	.BYTE 0,2,4,6,8,10,12,14

WOTBL	.BYTE $EC,$EC,$EB,$EA,$E9
	.BYTE $F0,$F0,$EF,$EE,$ED
	.BYTE $F4,$F4,$F3,$F2,$F1
	.BYTE $F5,$F5,$F5,$F5,$F5
	.BYTE $FC,$FC,$FB,$FA,$F9

;======================================================
;               ENEMYS MOVE ( SET ) SUBROUTINE
;======================================================
;
;          FLAG
;               KABAS     --- KABA NOKORISUU
;               THFTS     --- THREE FOOT
;               GONOS     --- GA
;               BASAS     --- BARSAN
;               GABAS     --- BA & BARSAN OUT FLAG

ENEMM
	LDA DIW0        ;PLAYER LIVE ?
	BMI ENE999
	LDA TIMSL       ;NO
	AND #$1F        ;CICLE ?
	BNE ENE999

ENE10
	LDX #01         ;YES
ENE20	LDA DIW0,X      ;ENEMY LIVE ?
	CMP #$FF
	BEQ ENE30
	INX
	CPX #07
	BNE ENE20
ENE999
	RTS

ENE30
	LDY #00
	LDA DIWS        ;WOLF ADD
	BEQ ENE40
	DEC DIWS
	JMP ENE100      ;JMP

ENE40
	INY
	LDA KABAS
	BEQ ENE50
	DEC KABAS       ;KABA ADD
	JMP ENE100      ;JMP

ENE50
	INY
	LDA THFTS
	BEQ ENE60
	DEC THFTS       ;THREE FOOT ADD
	JMP ENE100      ;JMP

ENE60
	INY
	LDX #01
	LDA #$FF
ENE70
	AND DIW0,X      ;WOLF - KABA - THREE FOOT   ALL KILL ?
	AND DIW0+1,X
	INX
	INX
	CPX #07
	BNE ENE70
	CMP #$FF
	BNE ENE999      ;NO  EXIT

	LDX #01
	LDA GANOS
	BEQ ENE80
	DEC GANOS       ;GA SET AND ADD
	JMP ENE90       ;JMP
ENE80
	INY
	LDA BASAS
	BEQ ENE999      ;JMP
	LDA #03
	JSR SOUND       ;BASAN MUSIC SET & ADD
	DEC BASAS
ENE90
	LDA #01
	STA SPUP        ;SPEED UP FLAG UP!

ENE100
	TYA             ;SAVE (X,Y REG)
	PHA
	TXA
	PHA

	ASL A           ;OUT ADDRESS SET
	TAY
	LDA RANDOM
	AND #$07
	TAX
	LDA ONETBX,X
	STA SP0X,Y
	LDA TIMSL
	LSR A
	LSR A
	LSR A
	LSR A
	LSR A
	AND #$07
	TAX
	LDA ONETBY,X
	STA SP0Y,Y

	CLC
	ADC #24
	CMP SP0Y        ;Y1+24 < Y2 ?
	BCS ENE110      ;  YES
	SEC
	SBC #48
	CMP SP0Y        ;Y1 > Y2+24 ?
	BCC ENE110      ;  YES
	STA SP0Y,Y

ENE110
	PLA             ;POP (X,Y REG)
	TAX
	PLA
	TAY

	INC DIW0,X      ;SET LIVE ?     =0
	LDA SHUTBL,Y
	STA ENPUT-1,X   ;SHT SHURUI
	LDA SHPTBL,Y    ;SET SPRITE CHRACTER
	STA SV07F8,X
	STA $07F8,X
	LDA SHCTBL,Y    ;SET COLOR
	STA SP0COL,X
	LDA SPSETB,X    ;ENABLE SET
	ORA SPENA
	STA SPENA
	RTS

SHUTBL
	.BYTE 0,5,10,15,20
SHCTBL
	.BYTE BLUE,YELLOW,CYAN,LTGREN,PURPLE
SHPTBL
	.BYTE $EC,$F0,$F4,$F5,$FC

;---------------------------------------------------
;           EXPLO SUB
;---------------------------------------------------
;       FLAG
;        EXPLF     ---- BAKUHATSU 1 SPRITE NUMBER
;        EXST01    ----    2 SPRITE NUMBER
;        EXST02    ----    3 SPRITE NUMBER

EXPLO
	LDX #07
EXP010
	LDA DIW0,X      ;ENEMY LIVE ?
	BMI EXP030      ;NO AFTER CHECK
EXP020
	DEX
	BPL EXP010
	RTS
EXP030
	CMP #$FF
	BEQ EXP020

	INC DIW0,X      ;LIVE NO SET
	TXA
	BNE EXP100
;
;  ----- MAIN EXP.    PLAYER BOMB START

	LDA DIW0,X
	CMP #$81
	BNE EXP040
	LDA #$F6
	STA SV07F8
	LDA #06
	JSR SOUND
	JMP EXP020
EXP040
	CMP #$90
	BNE EXP050
	LDA #$F7
	STA SV07F8
	JMP EXP020
EXP050
	CMP #$A0
	BNE EXP060
	LDA #$F6
	STA SV07F8
	JMP EXP020
EXP060
	CMP #$B0
	BNE EXP070
	LDA #$F7
	STA SV07F8
	JMP EXP020
EXP070
	CMP #$C0
	BNE EXP080
	LDA #$F8
	STA SV07F8
	JMP EXP020
EXP080
	CMP #$D0
	BNE EXP090
	LDA SPENA
	AND #$FE
	STA SPENA
EXP090
	JMP EXP020

;
; ------ ENEMY EXP.

EXP100
	LDA DIW0,X
	CMP #$81
	BNE EXP110
	LDA #$F6
	STA SV07F8,X
	LDA ENPUT-1,X     ;POINT OUT
	LSR A
	LSR A
	AND #$07
	TAY
	LDA TENTBL,Y
	CMP #05
	BNE EXP101
	LDA RANDOM
	AND #$30
	CLC
	ADC #$10
EXP101
	JSR POIOUT
	LDA #05
	JSR SOUND
	JMP EXP020
EXP110
	CMP #$90
	BNE EXP120
	LDA #$F7
	STA SV07F8,X
	JMP EXP020
EXP120
	CMP #$A0
	BNE EXP130
	LDA #$F8
	STA SV07F8,X
	JMP EXP020
EXP130
	CMP #$B0
	BNE EXP140
	LDA SPSETB,X
	EOR #$FF
	AND SPENA
	STA SPENA
	JMP EXP020
EXP140
	CMP #$FE
	BNE EXP150
	LDA DIWS
	ORA KABAS
	ORA THFTS
	ORA GANOS
	ORA BASAS
	BNE EXP150
	STA CLW
EXP150
	JMP EXP020

TENTBL
	.BYTE 01,02,03,04,05,05,05,05

;----------------------------------------
;  COLLISISON CHECK SUB LUOTINE
;----------------------------------------

COLLCH
	LDA DIW0        ;LIVE ?
	BMI COL010
	LDA COLLSS      ;PLAYER DIE CHECK
	AND #SP0SET
	BEQ COL010
	LDA COLLSS
	AND #SP7SET
	BNE COL040
	LDX #00
COL001
	INX
	CPX #07
	BEQ COL010
	LDA DIW0,X
	BMI COL001

	LDA SP0X        ;PLAYER - BOMB COLLOSION CHECK
	STA WK0
	LDA #00
	STA WK1
	LDA #SP0SET
	AND MSIGX
	BEQ *+4
	INC WK1
	LDA SP0Y
	STA WK2
	JSR SPRSTS
	BCC COL001

	LDA #$80
	STA DIW0        ;BOMB START FLAG SET
	RTS
COL010
	LDA DIW7
	BMI COL040
	LDA #0          ;BEEM ADDRESS TO SPRSTS SUB
	STA WK1
	LDA #SP7SET
	AND MSIGX
	BEQ *+4
	INC WK1
	LDA SP7X
	STA WK0
	LDA SP7Y
	STA WK2
	LDA COLLSS
	AND #SP7SET
	BEQ COL040      ;NO- COLLISSION AFTER CHECK
COL020
	LDX #$01        ;SP SP (BEEM) PROCESS
COL022	LDA DIW0,X
	BMI COL030
	JSR SPRSTS
	BCC COL030
	LDA #$FF        ;BEEM RESET
	STA DIW7
	LDA #SP7RES
	AND SPENA
	STA SPENA
	LDA #$80
	STA DIW0,X
	JMP COL040

COL030
	INX
	CPX #7
	BNE COL022
COL040
	RTS

SPSETB
MASKS
	.BYTE 1,2,4,8,16,32,64,128


SPRSTS
	LDA COLLSS
	AND SPSETB,X
	BNE *+5
	JMP STS080      ;NO CRASH AS RET

	TXA
	ASL A
	TAY
	LDA SP0X,Y
	STA WK3
	LDA SP0Y,Y
	STA WK5
	LDA #0
	STA WK4
	LDA MSIGX
	AND SPSETB,X
	BEQ *+4
	INC WK4

	LDA #14         ;Y1+15 < Y2+1
	STA WK6
	LDA #14         ;Y1+08 > Y2+22
	STA WK7
	LDA #11         ;X1+15 < Y2+4
	STA WK8
	LDA #12+11      ;X1+8 > X+2+20
	STA WK9
	JSR CKCOLL
	BCC STS090
	LDA #$80
	STA DIW0,X      ;ENEMY BOMB START FLAG SET
	BNE STS090
STS080
	CLC
STS090
	RTS

;*--------------------------------------------------*
;*  COLLISION CHECK                              *
;*   INPUT:   WK0 SOURCE      X POINT L    (X1)     *
;*          WK1      X POINT H       *
;*          WK2      Y POINT      (Y1)     *
;*          WK3 DESTINATION X POINT L    (X2)     *
;*          WK4      X POINT H       *
;*          WK5      Y POINT      (Y2)     *
;*          WK6=J, J=N-M, (Y1)+M < (Y2)+N ? ,N<M  *
;*          WK7=K, K=P-Q, (Y1)+Q >=(Y2)+P ? ,P>Q  *
;*          WK8=R, R=S-T, (X1)+T < (X2)+S ? ,T<S  *
;*          WK9=Z, U=V-W, (X1)+W >=(X2)+V ? ,V>W  *
;*                 Z=R+U                          *
;*--------------------------------------------------*

CKCOLL
;
;-----  CHECK Y COLLISION

	SEC             ;WK5-WK6 >= WK2?
	LDA WK5
	SBC WK6
	CMP WK2
	BCS CKCL80      ;NONE COLLISION

	CLC             ;WK5+WK7 < WK2?
	LDA WK5
	ADC WK7
	CMP WK2
	BCC CKCL80      ;NONE COLLISION
;
;-----  CHECK X COLLISION

	SEC             ;(WK3,WK4)-WK8 >= (WK0,WK1)?
	LDA WK3
	SBC WK8
	STA WK3
	LDA WK4
	SBC #00
	STA WK4
	SEC
	LDA WK3
	SBC WK0
	LDA WK4
	SBC WK1
	BCS CKCL80      ;NONE COLLISION

	LDA WK3         ;(WK3,WK4)+WK9 < (WK0,WK1)?
	ADC WK9
	STA WK3
	LDA WK4
	ADC #00
	STA WK4

	SEC
	LDA WK3
	SBC WK0
	LDA WK4
	SBC WK1
	BCC CKCL80      ;NONE COLLISION
	RTS             ;COLLISION EXIT

CKCL80
	CLC
	RTS             ;NONE COLLISION EXIT

.END
