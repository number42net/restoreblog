.PAGE   'TABLES, RESERVED WORDS, AND ERROR TEXTS'
        *=     CODFWA
;
;       ENTRY NAME AND ENTRY POINT JUMP
BENTRY	JMP     INIT            ;ENTRY POINT FOR START
       JMP     WARM            ;WARM START RE-ENTRY POINT
       .BYTE   $C3,$C2,$CD,'8' ;CMB8 ($80 OR'D IN 1ST 3 CHARS)
	.IFN CC2 <
       .BYTE   ' '
.SKI 3
;      VSP ROM INDIRECT TABLE (PETII BASIC ONLY)
;
IEVAL1	.WORD EVAL1
IEVAL2	.WORD EVAL2
IFLOTS	.WORD FLOATS
IFRETM	.WORD FRETMS
IGTSTK	.WORD GETSTK
IINITV	.WORD INITV
IINPCM	.WORD INPCOM
IPRIT4	.WORD PRIT4
INEWST	.WORD NEWSTT
IPTRGT	.WORD PTRGET
IXEQDR	.WORD XEQDIR
IGOTO0	.WORD GOTO0
IINIT0	.WORD INIT0
IRSLST	.WORD RESLST
>
.SKIP 4
;       STATMENT DISPATCH TABLE
;
;
STMDSP
	.WORD    END-1
	.WORD    FOR-1
	.WORD    NEXT-1
	.WORD    DATA-1
	.WORD    INPUTN-1
	.WORD    INPUT-1
	.WORD    DIM-1
	.WORD    READ-1
	.WORD    LET-1
	.WORD    GOTO-1
	.WORD    RUN-1
	.WORD    IF-1
	.WORD    RESTOR-1
	.WORD    GOSUB-1
	.WORD    RETURN-1
	.WORD    REM-1
	.WORD    STOP-1
	.WORD    ONGOTO-1
	.WORD    FNWAIT-1
	.WORD    CLOAD-1
	.WORD    CSAVE-1
	.WORD    CVERF-1
	.WORD    DEFN-1
	.WORD    POKE-1
	.WORD    PRINTN-1
	.WORD    PRINT-1
	.WORD    CONT-1
	.WORD    LIST-1
	.WORD    CLEAR-1
	.WORD    CMD-1
	.WORD    CSYS-1
	.WORD    COPEN-1
	.WORD    CCLOS-1
	.WORD    GET-1
	.WORD    SCRATH-1
	.WORD    GO-1
;
;       DISK COMMANDS, ADDED 79-JUNE 28
	.WORD    CONCAT-1
	.WORD    DOPEN-1
	.WORD    DCLOSE-1
	.WORD    RECORD-1
	.WORD    FORMAT-1
	.WORD    COLECT-1
	.WORD    BACKUP-1
	.WORD    DCOPY-1
	.WORD    APPEND-1
	.WORD    DSAVE-1
	.WORD    DLOAD-1
	.WORD    DCAT-1
	.WORD    RENAME-1
	.WORD    SCRATC-1
	.WORD    DCAT-1  ;DIRECTORY == CATALOG
;
;
;    DISK CLEAR COMMAND ADDED FOR TOI
	.WORD    DCLEAR-1
;
;    MULTI-BANK RELATED COMMANDS
;
	.WORD    CHBANK-1
	.WORD    BLOAD-1
	.WORD    BSAVE-1
;
;    FUNCTION KEY COMMAND
;
	.WORD    FKEY-1
	.WORD    DELETE-1
	.WORD    REM-1  ;ELSE STMT
	.WORD    TRAP-1
	.WORD    RESUME-1
	.WORD    DISPOS-1
	.IFN CC1+CC2 <
	.WORD    PUCTRL-1
>
	.IFN CC3+CC4 <
	.WORD    PUCTRL-1
>
.SKIP 4
FUNDSP
	.WORD  SGN
	.WORD  INT
	.WORD  ABS
.SKIP 4
USRLOC
	.WORD  USRPOK
	.WORD  FRE
	.WORD  POS
	.WORD  SQR
	.WORD  RND
	.WORD  LOG
	.WORD  EXP
	.WORD  COS
	.WORD  SIN
	.WORD  TAN
	.WORD  ATN
	.WORD  PEEK
	.WORD  LEN
	.WORD  STRD
	.WORD  VAL
	.WORD  ASC
	.WORD  CHRD
	.WORD  LEFTD
	.WORD  RIGHTD
	.WORD  MIDD
.SKIP 4
;       FLOATING POINT FUNCTIONS
OPTAB
	.BYTE  121
	.WORD FADDT-1
;
	.BYTE  121
	.WORD FSUBT-1
;
	.BYTE  123
	.WORD FMULTT-1
;
	.BYTE  123
	.WORD FDIVT-1
;
	.BYTE  127
	.WORD FPWRT-1
;
	.BYTE  80
	.WORD ANDOP-1
;
	.BYTE  70
	.WORD OROP-1
;
NEGTAB
	.BYTE  125
	.WORD NEGOP-1
;
NOTTAB
	.BYTE  90
	.WORD NOTOP-1
;
PTDORL
	.BYTE  100
	.WORD DOREL-1
;
.PAGE
;
;       RESERVED WORD LIST
;
;
RESLST
TKEND	=     $80
	.BYTE    'EN',$C4      ; END
TKFOR	= TKEND+1
	.BYTE    'FO',$D2      ; FOR
TKNEXT	= TKFOR+1
	.BYTE    'NEX',$D4     ; NEXT
TKDATA	= TKNEXT+1
	.BYTE    'DAT',$C1     ; DATA
	.BYTE    'INPUT',$A3   ; INPUT#
	.BYTE    'INPU',$D4    ; INPUT
	.BYTE    'DI',$CD      ; DIM
	.BYTE    'REA',$C4     ; READ
	.BYTE    'LE',$D4      ; LET
TKGOTO	= TKDATA+6
	.BYTE    'GOT',$CF     ; GOTO
TKRUN	= TKGOTO+1
	.BYTE    'RU',$CE      ; RUN
	.BYTE    'I',$C6       ; IF
TKREST=TKRUN+2
	.BYTE    'RESTOR',$C5  ; RESTORE
TKGOSU=TKREST+1
	.BYTE    'GOSU',$C2    ; GOSUB
	.BYTE    'RETUR',$CE   ; RETURN
TKREM	= TKGOSU+2
	.BYTE    'RE',$CD      ; REM
	.BYTE    'STO',$D0     ; STOP
TKON	= TKREM+2
	.BYTE    'O',$CE       ; ON
	.BYTE    'WAI',$D4     ; WAIT
	.BYTE    'LOA',$C4     ; LOAD
	.BYTE    'SAV',$C5     ; SAVE
	.BYTE    'VERIF',$D9   ; VERIFY
	.BYTE    'DE',$C6      ; DEF
	.BYTE    'POK',$C5     ; POKE
	.BYTE    'PRINT',$A3   ; PRINT#
TKPRIN=TKON+8
	.BYTE    'PRIN',$D4    ; PRINT
	.BYTE    'CON',$D4     ; CONT
	.BYTE    'LIS',$D4     ; LIST
	.BYTE    'CL',$D2      ; CLR
	.BYTE    'CM',$C4      ; CMD
	.BYTE    'SY',$D3      ; SYS
	.BYTE    'OPE',$CE     ; OPEN
	.BYTE    'CLOS',$C5    ; CLOSE
	.BYTE    'GE',$D4      ; GET
TKSCRA=TKPRIN+9
	.BYTE    'NE',$D7      ; NEW
TKTAB=TKSCRA+1
	.BYTE    'TAB',$A8     ; TAB(
TKTO=TKTAB+1
	.BYTE    'T',$CF       ; TO
TKFN=TKTO+1
	.BYTE    'F',$CE       ; FN
TKSPC=TKFN+1
	.BYTE    'SPC',$A8     ; SPC(
TKTHEN=TKSPC+1
	.BYTE    'THE',$CE     ; THEN
TKNOT=TKTHEN+1
	.BYTE    'NO',$D4      ; NOT
TKSTEP=TKNOT+1
	.BYTE    'STE',$D0     ; STEP
TKPLUS=TKSTEP+1
	.BYTE    $AB           ; '+'
TKMINU=TKPLUS+1
	.BYTE    $AD           ; '-'
	.BYTE    $AA           ; '*'
	.BYTE    $AF           ; '/'
	.BYTE    $DE           ; '^'
	.BYTE    'AN',$C4      ; AND
	.BYTE    'O',$D2       ; OR
TKGREA=TKMINU+6
	.BYTE    $BE           ; '>'
TKEQUL=TKGREA+1
	.BYTE    $BD           ; '='
TKLESS=TKEQUL+1
	.BYTE    $BC           ; '<'
TKONEF=TKLESS+1
	.BYTE    'SG',$CE      ; SGN
	.BYTE    'IN',$D4      ; INT
	.BYTE    'AB',$D3      ; ABS
	.BYTE    'US',$D2      ; USR
	.BYTE    'FR',$C5      ; FRE
	.BYTE    'PO',$D3      ; POS
	.BYTE    'SQ',$D2      ; SQR
	.BYTE    'RN',$C4      ; RND
	.BYTE    'LO',$C7      ; LOG
	.BYTE    'EX',$D0      ; EXP
	.BYTE    'CO',$D3      ; COS
	.BYTE    'SI',$CE      ; SIN
	.BYTE    'TA',$CE      ; TAN
	.BYTE    'AT',$CE      ; ATN
	.BYTE    'PEE',$CB     ; PEEK
	.BYTE    'LE',$CE      ; LEN
	.BYTE    'STR',$A4     ; STR$
	.BYTE    'VA',$CC      ; VAL
	.BYTE    'AS',$C3      ; ASC
TKLASN=TKONEF+19
	.BYTE    'CHR',$A4     ; CHR$
	.BYTE    'LEFT',$A4    ; LEFT$
	.BYTE    'RIGHT',$A4   ; RIGHT$
	.BYTE    'MID',$A4     ; MID$
TKGO=TKLASN+4
	.BYTE    'G',$CF       ; GO
	.BYTE    'CONCA',$D4   ; CONCAT
	.BYTE    'DOPE',$CE    ; DOPEN
	.BYTE    'DCLOS',$C5   ; DCLOSE
	.BYTE    'RECOR',$C4   ; RECORD
	.BYTE    'HEADE',$D2   ; HEADER
	.BYTE    'COLLEC',$D4  ; COLLECT
	.BYTE    'BACKU',$D0   ; BACKUP
	.BYTE    'COP',$D9     ; COPY
	.BYTE    'APPEN',$C4   ; APPPEND
	.BYTE    'DSAV',$C5    ; DSAVE
	.BYTE    'DLOA',$C4    ; DLOAD
	.BYTE    'CATALO',$C7  ; CATALOG
	.BYTE    'RENAM',$C5   ; RENAME
	.BYTE    'SCRATC',$C8  ; SCRATCH
	.BYTE    'DIRECTOR',$D9; DIRECTORY
	.BYTE    'DCLEA',$D2   ; DCLEAR
	.BYTE    'BAN',$CB     ; BANK
	.BYTE    'BLOA',$C4    ; BLOAD
	.BYTE    'BSAV',$C5    ; BSAVE
	.BYTE    'KE',$D9      ; KEY
;.IFN CC3+CC4 <
	.BYTE    'DELET',$C5   ; DELETE
TKELSE=TKGO+22
	.BYTE    'ELS',$C5     ; ELSE
TKTRAP=TKELSE+1
	.BYTE    'TRA',$D0     ; TRAP
TKRESU=TKTRAP+1
	.BYTE    'RESUM',$C5   ; RESUME
	.BYTE    'DISPOS',$C5  ; DISPOSE
	.BYTE    'PUDE',$C6    ; PUDEF
TKUSIN=TKRESU+3
	.BYTE    'USIN',$C7    ; USING
TKERRD=TKUSIN+1
	.BYTE    'ERR',$A4     ; ERR$
TKINST=TKERRD+1
	.BYTE    'INST',$D2    ; INSTR
;>
	.BYTE   0       ;END OF RESERVED WORD LIST
.PAGE   'ERROR MESSAGE ADDRESS TABLE.'
EBASE	;BASE FOR ERROR MESSAGES
;
;
MS0	=*-EBASE
	.WORD  AMS0
MS1	=*-EBASE
	.WORD  AMS1
MS2	=*-EBASE
	.WORD  AMS2
MS3	=*-EBASE
	.WORD  AMS3
MS4	=*-EBASE
	.WORD  AMS4
MS5	=*-EBASE
	.WORD  AMS5
MS6	=*-EBASE
	.WORD  AMS6
MS7	=*-EBASE
	.WORD  AMS7
MS8	=*-EBASE
	.WORD  AMS8
MS9	=*-EBASE
	.WORD  AMS9
MSG30	=*-EBASE
	.WORD  AMS30
MSG31	=*-EBASE
	.WORD  AMS31
;
MSRDY	=*-EBASE
	.WORD  REDDY
INTXT	=*-EBASE
	.WORD  AINTXT
BRKTXT	=*-EBASE
	.WORD  ABRKTX
EXIGNT	=*-EBASE
	.WORD  AEXI
TRYAGN	=*-EBASE
	.WORD  ATRY
FBPTR	=*-EBASE
	.WORD  FBUFFR
MREMSG	=*-EBASE
	.WORD  AREMSG
ASIGON	=*-EBASE
	.WORD  SIGNON
;
;
ERRNF	=*-EBASE
	.WORD  AERNF
ERRSN	=*-EBASE
	.WORD  AERSN
ERRRG	=*-EBASE
	.WORD  AERRG
ERROD	=*-EBASE
	.WORD  AEROD
ERRFC	=*-EBASE
	.WORD  AERFC
ERROV	=*-EBASE
	.WORD  AEROV
ERROM	=*-EBASE
	.WORD  AEROM
ERRUS	=*-EBASE
	.WORD  AERUS
ERRBS	=*-EBASE
	.WORD  AERBS
ERRDD	=*-EBASE
	.WORD  AERDD
ERRDVO	=*-EBASE
	.WORD  AERDVO
ERRID	=*-EBASE
	.WORD  AERID
ERRTM	=*-EBASE
	.WORD  AERTM
ERRLS	=*-EBASE
	.WORD  AERLS
ERRBD	=*-EBASE
	.WORD  AERBD
ERRST	=*-EBASE
	.WORD  AERST
ERRCN	=*-EBASE
	.WORD  AERCN
ERRUF	=*-EBASE
	.WORD  AERUF
ERRLD	=*-EBASE
	.WORD  AERLD
ERRVR	=*-EBASE
	.WORD  AERVR
ERROS	=*-EBASE
	.WORD AEROS
ERRCR	=*-EBASE
	.WORD AERCR
ERRDI	=*-EBASE
	.WORD AERDI
ERRBLN=*-EBASE
	.IFN CC2+CC3+CC4 <
ERROT	=*-EBASE
	.WORD AEROT
>
	.IFN CC3+CC4 <
ERROA	=*-EBASE
	.WORD AEROA
>
.PAGE   'ERROR MESSAGES'
;       KERNAL ERROR MESSAGES.
;
AMS0	.BYTE   'STOP KEY DETECTED',0
AMS1	.BYTE   'TOO MANY FILES',0
AMS2	.BYTE   'FILE OPEN',0
AMS3	.BYTE   'FILE NOT OPEN',0
AMS4	.BYTE   'FILE NOT FOUND',0
AMS5	.BYTE   'DEVICE NOT PRESENT',0
AMS6	.BYTE   'NOT INPUT FILE',0
AMS7	.BYTE   'NOT OUTPUT FILE',0
AMS8	.BYTE   'MISSING FILE NAME',0
AMS9	.BYTE   'ILLEGAL DEVICE '
	.BYTE 'NUMBER',0
;
;       BASIC ERROR MESSAGES.
;
AMS30	.BYTE   CR,'ARE YOU SURE ?',0
AMS31	.BYTE   CR,'BAD DISK ',CR,0
;
AERNF	.BYTE   'NEXT WITHOUT FOR',0
AERSN	.BYTE   'SYNTAX ERROR',0
AERRG	.BYTE   'RETURN WITHOUT GOSUB',0
AEROD	.BYTE   'OUT OF DATA',0
AERFC	.BYTE   'ILLEGAL QUANTITY',0
AEROV	.BYTE   'OVERFLOW',0
AEROM	.BYTE   'OUT OF MEMORY',0
AERUS	.BYTE   'UNDEFINED STATEMENT',0
AERBS	.BYTE   'BAD SUBSCRIPT',0
AERDD	.BYTE   'REDIM',$27,'D ARRAY',0
AERDVO	.BYTE   'DIVISION BY ZERO',0
AERID	.BYTE   'ILLEGAL DIRECT',0
AERTM	.BYTE   'TYPE MISMATCH',0
AERLS	.BYTE   'STRING TOO LONG',0
AERBD	.BYTE   'FILE DATA',0
AERST	.BYTE   'FORMULA TOO COMPLEX',0
AERCN	.BYTE   'CANNOT CONTINUE',0
AERUF	.BYTE   'UNDEFINED FUNCTION',0
AERLD	.BYTE   CR,'?LOAD ERROR',CR,0
AERVR	.BYTE   CR,'?VERIFY ERROR',CR,0
;
;
AINTXT	.BYTE   ' IN ',0
REDDY	.BYTE   CR,'READY.',CR,0
ABRKTX	.BYTE   CR,'BREAK',0
;
;
AEXI	.BYTE   'EXTRA IGNORED',CR,0
ATRY	.BYTE   'REDO FROM START',CR,0
AREMSG	.BYTE   'MORE',CR,0
AEROS	.BYTE   'OUT OF STACK',0
	.IFN CC2+CC3+CC4 <
AEROT	.BYTE 'OUT OF TEXT',0
>
	.IFN CC3+CC4 <
AEROA	.BYTE 'OUT OF ARRAY SPACE',0
>
AERCR	.BYTE 'UNABLE TO RESUME',0
AERDI	.BYTE 'UNABLE TO DISPOSE',0
.END
