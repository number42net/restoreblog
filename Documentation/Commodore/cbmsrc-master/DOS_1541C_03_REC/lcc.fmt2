.PAGE 'LCC.FMT2'
;
;
;
DS08	LDA #$66        ; MIN BLOCK SIZE 282*5/4 -256=85
;
	STA DTRCK
;
	LDX SECTR       ; TOTAL BYTES= MIN*#SECORS
	LDY #0
	TYA
;
DS10	CLC             ; MIN*#SECTORS
	ADC DTRCK
	BCC DS14
;
	INY             ;
;
DS14	INY
	DEX
	BNE DS10
;
	EOR #$FF        ; GET 2S COMP
	SEC
	ADC #0
;
	CLC
	ADC TRAL+1
	BCS DS15
;
	DEC TRAL
;
DS15	TAX
	TYA
	EOR #$FF
	SEC
	ADC #0
	CLC
	ADC TRAL
;
	BPL DS17
;
	LDA #TOBIG      ; NOT ENOUGH SPACE
	JMP FMTERR
;
DS17	TAY
	TXA
	LDX #0
;
DS20	SEC
	SBC SECTR
	BCS DS22
;
	DEY
	BMI DS30
;
DS22	INX
	BNE DS20
;
DS30	STX DTRCK
	CPX #GAP2       ; TEST FOR MIN SIZE
	BCS DS32
;
	LDA #TOSMAL     ; GAP2 TO SMALL
	JMP FMTERR
;
DS32	CLC
	ADC SECTR
	STA REMDR       ; GET REMAIDER SIZE
;
;
;
;
;
;  CREATE HEADER IMAGES
;
;
	LDA #0
	STA SECT
;
	LDY #0
	LDX DRIVE
;
MAK10	LDA HBID        ; HBID CS S T ID ID 0F 0F
	STA BUFF0,Y
	INY
;
	INY             ; SKIP CHECKSUM
;
	LDA SECT        ; STORE SECTOR #
	STA BUFF0,Y
	INY
;
	LDA FTNUM       ; STORE TRACK #
	STA BUFF0,Y
	INY
;
	LDA DSKID+1,X   ; STORE ID LOW
	STA BUFF0,Y
	INY
;
	LDA DSKID,X     ; STORE ID HI
	STA BUFF0,Y
	INY
;
	LDA #$0F        ; STORE GAP1 BYTES
	STA BUFF0,Y
	INY
	STA BUFF0,Y
	INY
;
	LDA #0          ;CREATE CHECKSUM
	EOR BUFF0-6,Y
	EOR BUFF0-5,Y
	EOR BUFF0-4,Y
	EOR BUFF0-3,Y
;
	STA BUFF0-7,Y   ; STORE CHECKSUM
;
;
	INC SECT        ; GOTO NEXT SECTOR
;
	LDA SECT        ; TEST IF DONE YET
	CMP SECTR
	BCC MAK10       ; MORE TO DO
;
	TYA             ; SAVE BLOCK SIZE
	PHA
;
;
;
;
;   CREATE DATA BLOCK OF ZERO
;
	INX             ;  .X=0
	TXA
;
CRTDAT	STA BUFF2,X
	INX
	BNE CRTDAT
;
;
;  CONVERT HEADER BLOCK TO GCR
;
	LDA #>BUFF0
	STA BUFPNT+1    ; POINT AT BUFFER
;
	JSR FBTOG       ; CONVERT TO GCR WITH NO BID CHAR
;
	PLA             ;  RESTORE BLOCK SIZE
	TAY             ; MOVE BUFFER UP 79 BYTES
	DEY             ; FOR I=N-1 TO 0:MEM[I+69]:=MEM[I]:NEXT
	JSR MOVUP       ;MOVE BUF0 UP 69 BYTES
;
	JSR MOVOVR      ; MOVE OVRBUF UP TO BUFFER
;
;
;
;   CONVERT DATA BLOCK TO GCR
;   WRITE IMAGE
;
;   LEAVE IT IN OVRBUF AND BUFFER
;
;
	LDA #>BUFF2     ; POINT AT BUFFER
	STA BUFPNT+1
;
;
	JSR CHKBLK      ; GET BLOCK CHECKSUM
	STA CHKSUM
	JSR BINGCR
;
;
;
;   START THE FORMAT NOW
;
;   WRITE OUT SYNC HEADER GAP1
;   DATA BLOCK
;
;
;
	LDA #0          ; INIT COUNTER
	STA HDRPNT
;
	JSR CLEAR       ; CLEAR DISK
;
WRTSYN	LDA #$FF        ; WRITE SYNC
	STA DATA2
;
	LDX #NUMSYN     ; WRITE 4  SYNC
;
WRTS10	BVC *
	CLV
;
	DEX
	BNE WRTS10
;
	LDX #10         ; WRITE OUT HEADER
	LDY HDRPNT
;
WRTS20	BVC *
	CLV
;
	LDA BUFF0,Y     ; GET HEADER DATA
	STA DATA2
;
	INY
	DEX
	BNE WRTS20
;
;
; * WRITE OUT GAP1
;
	LDX #GAP1-2     ; WRITE  GCR BYTES
;
WRTS30	BVC *
	CLV
;
	LDA #$55
	STA DATA2
;
	DEX
	BNE WRTS30
;
;
;
; * WRITE OUT DATA BLOCK
;
	LDA #$FF        ; WRITE DATA BLOCK SYNC
;
	LDX #NUMSYN
;
DBSYNC	BVC *
	CLV
;
	STA DATA2
;
	DEX
	BNE DBSYNC
;
	LDX	#256-TOPWRT ; WRITE OUT OVRBUF
;
WRTS40	BVC *
	CLV
;
	LDA OVRBUF,X
	STA DATA2
;
	INX
	BNE WRTS40
;
;
	LDY #0
;
WRTS50	BVC *
	CLV
;
	LDA (BUFPNT),Y
	STA DATA2
;
	INY
	BNE WRTS50
;
	LDA #$55        ; WRITE GAP2(DTRCK)
	LDX DTRCK
;
WGP2	BVC *
	CLV
;
	STA DATA2
	DEX
	BNE WGP2
;
; LDX #20 ; WRITE ERASE TRAIL GAP
;WGP3 BVC *
; CLV
; DEX
; BNE WGP3
;
	LDA HDRPNT      ; ADVANCE HEADER POINTER
	CLC
	ADC #10
	STA HDRPNT
;
;
;
;  DONE WRITING SECTOR
;
	DEC SECT        ; GO TO NEXT ON
	BNE WRTSYN      ; MORE TO DO
;
	BVC *           ; WAIT FOR LAST ONE TO WRITE
	CLV
;
	BVC *
	CLV
;
	JSR KILL        ; GOTO READ MODE
;
;
;
.END
